
############################################################
# Timestamp: 2022-10-31 15:41:09 CET
# CBMC Version: 5.68.0 (cbmc-5.68.0)
# Further Options: WEAK_SECURITY = 0, MAX_PERM_SET_SIZE = 8, CLOSED_PROTOCOL = 1
# N = 4, NUM_SYM = 2, L = 2, TIMEOUT = 5d
############################################################

############################################################

CBMC version 5.68.0 (cbmc-5.68.0) 64-bit x86_64 linux
Parsing findTwoCardProtocolXOR.c
Converting
Type-checking findTwoCardProtocolXOR
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
Unwinding loop getEmptyState.0 iteration 1 file findTwoCardProtocolXOR.c line 360 function getEmptyState thread 0
Unwinding loop getEmptyState.0 iteration 2 file findTwoCardProtocolXOR.c line 360 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 1 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 2 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 1 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 2 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 3 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 4 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 1 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 2 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 1 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 2 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 3 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 4 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.5 iteration 1 file findTwoCardProtocolXOR.c line 364 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 1 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 2 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 1 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 2 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 3 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 4 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 1 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 2 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 1 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 2 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 3 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 4 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.5 iteration 2 file findTwoCardProtocolXOR.c line 364 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 1 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 2 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 1 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 2 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 3 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 4 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 1 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 2 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 1 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 2 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 3 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 4 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.5 iteration 3 file findTwoCardProtocolXOR.c line 364 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 1 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 2 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 1 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 2 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 3 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 4 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 1 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 2 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 1 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 2 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 3 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 4 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.5 iteration 4 file findTwoCardProtocolXOR.c line 364 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 1 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 2 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 1 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 2 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 3 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 4 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 1 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 2 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 1 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 2 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 3 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 4 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.5 iteration 5 file findTwoCardProtocolXOR.c line 364 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 1 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.1 iteration 2 file findTwoCardProtocolXOR.c line 366 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 1 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 2 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 3 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.2 iteration 4 file findTwoCardProtocolXOR.c line 369 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 1 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.3 iteration 2 file findTwoCardProtocolXOR.c line 377 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 1 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 2 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 3 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.4 iteration 4 file findTwoCardProtocolXOR.c line 386 function getEmptyState thread 0
Unwinding loop getEmptyState.5 iteration 6 file findTwoCardProtocolXOR.c line 364 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 1 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 2 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 3 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 4 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.7 iteration 1 file findTwoCardProtocolXOR.c line 392 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 1 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 2 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 3 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 4 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.7 iteration 2 file findTwoCardProtocolXOR.c line 392 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 1 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 2 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 3 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 4 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.7 iteration 3 file findTwoCardProtocolXOR.c line 392 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 1 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 2 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 3 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 4 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.7 iteration 4 file findTwoCardProtocolXOR.c line 392 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 1 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 2 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 3 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.6 iteration 4 file findTwoCardProtocolXOR.c line 395 function getEmptyState thread 0
Unwinding loop getEmptyState.7 iteration 5 file findTwoCardProtocolXOR.c line 392 function getEmptyState thread 0
Unwinding loop getStartSequence.0 iteration 1 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.0 iteration 2 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 1 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 2 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 3 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 4 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop main.0 iteration 1 file findTwoCardProtocolXOR.c line 1107 function main thread 0
Unwinding loop getStartSequence.0 iteration 1 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.0 iteration 2 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 1 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 2 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 3 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 4 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop main.0 iteration 2 file findTwoCardProtocolXOR.c line 1107 function main thread 0
Unwinding loop getStartSequence.0 iteration 1 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.0 iteration 2 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 1 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 2 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 3 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 4 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop main.0 iteration 3 file findTwoCardProtocolXOR.c line 1107 function main thread 0
Unwinding loop getStartSequence.0 iteration 1 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.0 iteration 2 file findTwoCardProtocolXOR.c line 425 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 1 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 2 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 3 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop getStartSequence.1 iteration 4 file findTwoCardProtocolXOR.c line 429 function getStartSequence thread 0
Unwinding loop main.0 iteration 4 file findTwoCardProtocolXOR.c line 1107 function main thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop main.1 iteration 1 file findTwoCardProtocolXOR.c line 1122 function main thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop main.1 iteration 2 file findTwoCardProtocolXOR.c line 1122 function main thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop main.1 iteration 3 file findTwoCardProtocolXOR.c line 1122 function main thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop main.1 iteration 4 file findTwoCardProtocolXOR.c line 1122 function main thread 0
Unwinding loop main.2 iteration 1 file findTwoCardProtocolXOR.c line 1126 function main thread 0
Unwinding loop main.2 iteration 2 file findTwoCardProtocolXOR.c line 1126 function main thread 0
Unwinding loop main.2 iteration 3 file findTwoCardProtocolXOR.c line 1126 function main thread 0
Unwinding loop main.2 iteration 4 file findTwoCardProtocolXOR.c line 1126 function main thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 1 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 2 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 3 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 4 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 5 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 6 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 7 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 8 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 9 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 10 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 11 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 12 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 13 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 14 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 15 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 16 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 17 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 18 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 19 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 20 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 21 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 22 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 23 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 1 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 2 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 3 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.0 iteration 4 file findTwoCardProtocolXOR.c line 479 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 1 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 2 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 3 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.1 iteration 4 file findTwoCardProtocolXOR.c line 482 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.2 iteration 24 file findTwoCardProtocolXOR.c line 477 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 1 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 2 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 3 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 4 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 5 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 6 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 7 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 8 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 9 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 10 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 11 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 12 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 13 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 14 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 15 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 16 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 17 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 18 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 19 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 20 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 21 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 22 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 23 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 1 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 2 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 3 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.3 iteration 4 file findTwoCardProtocolXOR.c line 494 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.4 iteration 24 file findTwoCardProtocolXOR.c line 493 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 1 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 2 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 3 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 4 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 5 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 6 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 7 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 8 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 9 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 10 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 11 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 12 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 13 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 14 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 15 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 16 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 17 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 18 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 19 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 20 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 21 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 22 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 1 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 2 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 3 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.5 iteration 4 file findTwoCardProtocolXOR.c line 503 function getStateWithAllPermutations thread 0
Unwinding loop getStateWithAllPermutations.6 iteration 23 file findTwoCardProtocolXOR.c line 500 function getStateWithAllPermutations thread 0
Unwinding loop performActions.0 iteration 1 file findTwoCardProtocolXOR.c line 987 function performActions thread 0
Unwinding loop performActions.0 iteration 2 file findTwoCardProtocolXOR.c line 987 function performActions thread 0
Unwinding loop performActions.0 iteration 3 file findTwoCardProtocolXOR.c line 987 function performActions thread 0
Unwinding loop copyObservations.0 iteration 1 file findTwoCardProtocolXOR.c line 910 function copyObservations thread 0
Unwinding loop copyObservations.0 iteration 2 file findTwoCardProtocolXOR.c line 910 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 1 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 2 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 3 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 4 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 5 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 6 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop computeTurnProbabilities.0 iteration 1 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.0 iteration 2 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.0 iteration 3 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.0 iteration 4 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 1 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 2 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 3 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 4 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 5 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 6 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.3 iteration 1 file findTwoCardProtocolXOR.c line 872 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 1 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 2 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 3 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 4 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 5 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 6 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.3 iteration 2 file findTwoCardProtocolXOR.c line 872 function computeTurnProbabilities thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 1 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 2 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 3 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 4 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 1 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 2 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 3 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 4 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 5 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 6 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.4 iteration 1 file findTwoCardProtocolXOR.c line 834 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 1 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 2 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 3 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 4 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 1 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 2 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 3 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 4 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 5 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 6 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.4 iteration 2 file findTwoCardProtocolXOR.c line 834 function alignAndAssignFractions thread 0
Unwinding loop isBottomFree.0 iteration 1 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 2 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 3 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 4 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 5 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 6 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isValid.0 iteration 1 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 2 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 3 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 4 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 1 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 2 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 3 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 4 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 5 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 6 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 1 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 2 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 3 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 4 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 5 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 6 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isBottomFree.0 iteration 1 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 2 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 3 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 4 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 5 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 6 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 1 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 2 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 3 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 4 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 5 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 6 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isValid.0 iteration 1 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 2 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 3 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 4 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 1 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 2 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 3 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 4 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 5 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 6 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop performActions.2 iteration 1 file findTwoCardProtocolXOR.c line 992 function performActions thread 0
Unwinding loop copyObservations.0 iteration 1 file findTwoCardProtocolXOR.c line 910 function copyObservations thread 0
Unwinding loop copyObservations.0 iteration 2 file findTwoCardProtocolXOR.c line 910 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 1 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 2 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 3 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 4 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 5 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop copyObservations.1 iteration 1 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 2 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 3 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.1 iteration 4 file findTwoCardProtocolXOR.c line 927 function copyObservations thread 0
Unwinding loop copyObservations.2 iteration 6 file findTwoCardProtocolXOR.c line 919 function copyObservations thread 0
Unwinding loop computeTurnProbabilities.0 iteration 1 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.0 iteration 2 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.0 iteration 3 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.0 iteration 4 file findTwoCardProtocolXOR.c line 867 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 1 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 2 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 3 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 4 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 5 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 6 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.3 iteration 1 file findTwoCardProtocolXOR.c line 872 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 1 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 2 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 3 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 4 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 5 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop computeTurnProbabilities.1 iteration 1 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 2 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 3 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.1 iteration 4 file findTwoCardProtocolXOR.c line 879 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.2 iteration 6 file findTwoCardProtocolXOR.c line 876 function computeTurnProbabilities thread 0
Unwinding loop computeTurnProbabilities.3 iteration 2 file findTwoCardProtocolXOR.c line 872 function computeTurnProbabilities thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 1 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 2 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 3 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 4 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 1 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 2 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 3 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 4 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 5 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 6 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.4 iteration 1 file findTwoCardProtocolXOR.c line 834 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 1 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 2 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 3 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 1 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 2 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 3 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.0 iteration 4 file findTwoCardProtocolXOR.c line 844 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.1 iteration 4 file findTwoCardProtocolXOR.c line 843 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 1 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 2 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 3 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 4 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 5 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 1 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 2 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 3 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.2 iteration 4 file findTwoCardProtocolXOR.c line 855 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.3 iteration 6 file findTwoCardProtocolXOR.c line 854 function alignAndAssignFractions thread 0
Unwinding loop alignAndAssignFractions.4 iteration 2 file findTwoCardProtocolXOR.c line 834 function alignAndAssignFractions thread 0
Unwinding loop isBottomFree.0 iteration 1 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 2 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 3 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 4 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 5 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 6 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isValid.0 iteration 1 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 2 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 3 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 4 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 1 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 2 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 3 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 4 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 5 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 6 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 809 function applyShuffle thread 0
Unwinding loop applyShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 798 function applyShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 1 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 2 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 3 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 4 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 5 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 1 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 2 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 3 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 4 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 5 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 6 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 7 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 8 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 9 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 10 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 11 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 12 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 13 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 14 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 15 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 16 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 17 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 18 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 19 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 20 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 21 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 22 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 23 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 1 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 2 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 3 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop doShuffle.0 iteration 4 file findTwoCardProtocolXOR.c line 764 function doShuffle thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 1 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 2 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 3 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop getSequenceIndexFromArray.0 iteration 4 file findTwoCardProtocolXOR.c line 469 function getSequenceIndexFromArray thread 0
Unwinding loop recalculatePossibilities.0 iteration 1 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 2 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 3 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop recalculatePossibilities.0 iteration 4 file findTwoCardProtocolXOR.c line 729 function recalculatePossibilities thread 0
Unwinding loop doShuffle.1 iteration 24 file findTwoCardProtocolXOR.c line 761 function doShuffle thread 0
Unwinding loop doShuffle.2 iteration 6 file findTwoCardProtocolXOR.c line 758 function doShuffle thread 0
Unwinding loop isBottomFree.0 iteration 1 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 2 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 3 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 4 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 5 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 6 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 1 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 2 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 3 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 4 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 5 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isBottomFree.0 iteration 6 file findTwoCardProtocolXOR.c line 549 function isBottomFree thread 0
Unwinding loop isValid.0 iteration 1 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 2 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 3 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isValid.0 iteration 4 file findTwoCardProtocolXOR.c line 572 function isValid thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 1 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 2 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 3 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 4 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 5 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop isStillPossible.0 iteration 1 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 2 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 3 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isStillPossible.0 iteration 4 file findTwoCardProtocolXOR.c line 455 function isStillPossible thread 0
Unwinding loop isFinalState.0 iteration 6 file findTwoCardProtocolXOR.c line 608 function isFinalState thread 0
Unwinding loop performActions.2 iteration 2 file findTwoCardProtocolXOR.c line 992 function performActions thread 0
Runtime Symex: 65.6626s
size of program expression: 274267 steps
simple slicing removed 5 assignments
Generated 1 VCC(s), 1 remaining after simplification
Runtime Postprocess Equation: 0.0801735s
Passing problem to propositional reduction
converting SSA
Runtime Convert SSA: 38.1582s
Running propositional reduction
Post-processing
Runtime Post-process: 9.8066e-05s
Solving with MiniSAT 2.2.1 with simplifier
13573841 variables, 53949714 clauses
SAT checker: instance is SATISFIABLE
Runtime Solver: 1279.6s
Runtime decision procedure: 1317.78s
Building error trace

** Results:
findTwoCardProtocolXOR.c function main
[main.assertion.1] line 1162 assertion 0: FAILURE

Trace for main.assertion.1:
  410: emptyState.seq[0l].val[0l]=0u (0x0)
  410: emptyState.seq[0l].val[1l]=0u (0x0)
  410: emptyState.seq[0l].val[2l]=0u (0x0)
  410: emptyState.seq[0l].val[3l]=0u (0x0)
  410: emptyState.seq[0l].probs.frac[0l].num=0u (0x0)
  410: emptyState.seq[0l].probs.frac[0l].den=0u (0x0)
  410: emptyState.seq[0l].probs.frac[1l].num=0u (0x0)
  410: emptyState.seq[0l].probs.frac[1l].den=0u (0x0)
  410: emptyState.seq[0l].probs.frac[2l].num=0u (0x0)
  410: emptyState.seq[0l].probs.frac[2l].den=0u (0x0)
  410: emptyState.seq[0l].probs.frac[3l].num=0u (0x0)
  410: emptyState.seq[0l].probs.frac[3l].den=0u (0x0)
  410: emptyState.seq[1l].val[0l]=0u (0x0)
  410: emptyState.seq[1l].val[1l]=0u (0x0)
  410: emptyState.seq[1l].val[2l]=0u (0x0)
  410: emptyState.seq[1l].val[3l]=0u (0x0)
  410: emptyState.seq[1l].probs.frac[0l].num=0u (0x0)
  410: emptyState.seq[1l].probs.frac[0l].den=0u (0x0)
  410: emptyState.seq[1l].probs.frac[1l].num=0u (0x0)
  410: emptyState.seq[1l].probs.frac[1l].den=0u (0x0)
  410: emptyState.seq[1l].probs.frac[2l].num=0u (0x0)
  410: emptyState.seq[1l].probs.frac[2l].den=0u (0x0)
  410: emptyState.seq[1l].probs.frac[3l].num=0u (0x0)
  410: emptyState.seq[1l].probs.frac[3l].den=0u (0x0)
  410: emptyState.seq[2l].val[0l]=0u (0x0)
  410: emptyState.seq[2l].val[1l]=0u (0x0)
  410: emptyState.seq[2l].val[2l]=0u (0x0)
  410: emptyState.seq[2l].val[3l]=0u (0x0)
  410: emptyState.seq[2l].probs.frac[0l].num=0u (0x0)
  410: emptyState.seq[2l].probs.frac[0l].den=0u (0x0)
  410: emptyState.seq[2l].probs.frac[1l].num=0u (0x0)
  410: emptyState.seq[2l].probs.frac[1l].den=0u (0x0)
  410: emptyState.seq[2l].probs.frac[2l].num=0u (0x0)
  410: emptyState.seq[2l].probs.frac[2l].den=0u (0x0)
  410: emptyState.seq[2l].probs.frac[3l].num=0u (0x0)
  410: emptyState.seq[2l].probs.frac[3l].den=0u (0x0)
  410: emptyState.seq[3l].val[0l]=0u (0x0)
  410: emptyState.seq[3l].val[1l]=0u (0x0)
  410: emptyState.seq[3l].val[2l]=0u (0x0)
  410: emptyState.seq[3l].val[3l]=0u (0x0)
  410: emptyState.seq[3l].probs.frac[0l].num=0u (0x0)
  410: emptyState.seq[3l].probs.frac[0l].den=0u (0x0)
  410: emptyState.seq[3l].probs.frac[1l].num=0u (0x0)
  410: emptyState.seq[3l].probs.frac[1l].den=0u (0x0)
  410: emptyState.seq[3l].probs.frac[2l].num=0u (0x0)
  410: emptyState.seq[3l].probs.frac[2l].den=0u (0x0)
  410: emptyState.seq[3l].probs.frac[3l].num=0u (0x0)
  410: emptyState.seq[3l].probs.frac[3l].den=0u (0x0)
  410: emptyState.seq[4l].val[0l]=0u (0x0)
  410: emptyState.seq[4l].val[1l]=0u (0x0)
  410: emptyState.seq[4l].val[2l]=0u (0x0)
  410: emptyState.seq[4l].val[3l]=0u (0x0)
  410: emptyState.seq[4l].probs.frac[0l].num=0u (0x0)
  410: emptyState.seq[4l].probs.frac[0l].den=0u (0x0)
  410: emptyState.seq[4l].probs.frac[1l].num=0u (0x0)
  410: emptyState.seq[4l].probs.frac[1l].den=0u (0x0)
  410: emptyState.seq[4l].probs.frac[2l].num=0u (0x0)
  410: emptyState.seq[4l].probs.frac[2l].den=0u (0x0)
  410: emptyState.seq[4l].probs.frac[3l].num=0u (0x0)
  410: emptyState.seq[4l].probs.frac[3l].den=0u (0x0)
  410: emptyState.seq[5l].val[0l]=0u (0x0)
  410: emptyState.seq[5l].val[1l]=0u (0x0)
  410: emptyState.seq[5l].val[2l]=0u (0x0)
  410: emptyState.seq[5l].val[3l]=0u (0x0)
  410: emptyState.seq[5l].probs.frac[0l].num=0u (0x0)
  410: emptyState.seq[5l].probs.frac[0l].den=0u (0x0)
  410: emptyState.seq[5l].probs.frac[1l].num=0u (0x0)
  410: emptyState.seq[5l].probs.frac[1l].den=0u (0x0)
  410: emptyState.seq[5l].probs.frac[2l].num=0u (0x0)
  410: emptyState.seq[5l].probs.frac[2l].den=0u (0x0)
  410: emptyState.seq[5l].probs.frac[3l].num=0u (0x0)
  410: emptyState.seq[5l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[0l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[0l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[0l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[0l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[0l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[1l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[1l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[1l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[1l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[1l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[2l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[2l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[2l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[2l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[2l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[3l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[3l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[3l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[3l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[3l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[4l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[4l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[4l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[4l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[4l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[5l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[5l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[5l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[5l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[5l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[6l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[6l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[6l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[6l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[6l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[7l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[7l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[7l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[7l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[7l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[8l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[8l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[8l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[8l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[8l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[9l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[9l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[9l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[9l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[9l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[10l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[10l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[10l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[10l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[10l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[11l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[11l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[11l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[11l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[11l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[12l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[12l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[12l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[12l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[12l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[13l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[13l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[13l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[13l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[13l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[14l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[14l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[14l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[14l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[14l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[15l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[15l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[15l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[15l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[15l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[16l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[16l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[16l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[16l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[16l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[17l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[17l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[17l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[17l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[17l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[18l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[18l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[18l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[18l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[18l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[19l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[19l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[19l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[19l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[19l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[20l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[20l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[20l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[20l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[20l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[21l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[21l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[21l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[21l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[21l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[22l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[22l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[22l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[22l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[22l].probs.frac[3l].den=0u (0x0)
  415: stateWithAllPermutations.seq[23l].val[0l]=0u (0x0)
  415: stateWithAllPermutations.seq[23l].val[1l]=0u (0x0)
  415: stateWithAllPermutations.seq[23l].val[2l]=0u (0x0)
  415: stateWithAllPermutations.seq[23l].val[3l]=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[0l].num=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[0l].den=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[1l].num=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[1l].den=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[2l].num=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[2l].den=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[3l].num=0u (0x0)
  415: stateWithAllPermutations.seq[23l].probs.frac[3l].den=0u (0x0)
  217: subgroupSizes[0l]=2u (0x2)
  217: subgroupSizes[1l]=3u (0x3)
  217: subgroupSizes[2l]=4u (0x4)
  217: subgroupSizes[3l]=6u (0x6)
  217: subgroupSizes[4l]=8u (0x8)
  217: subgroupSizes[5l]=12u (0xC)
  217: subgroupSizes[6l]=8u (0x8)
  217: subgroupSizes[7l]=10u (0xA)
  217: subgroupSizes[8l]=12u (0xC)
  217: subgroupSizes[9l]=20u (0x14)
  217: subgroupSizes[10l]=24u (0x18)
  217: subgroupSizes[11l]=60u (0x3C)
  217: subgroupSizes[12l]=120u (0x78)

↳ findTwoCardProtocolXOR.c:1100 main()

↳ findTwoCardProtocolXOR.c:1102 getEmptyState()
  360: i=0u (0x0)
  361: symbolCount.arr[0l]=0u (0x0)
  360: i=1u (0x1)
  361: symbolCount.arr[1l]=0u (0x0)
  360: i=2u (0x2)
  364: i=0u (0x0)
  366: j=0u (0x0)
  367: taken.arr[0l]=0u (0x0)
  366: j=1u (0x1)
  367: taken.arr[1l]=0u (0x0)
  366: j=2u (0x2)
  369: j=0u (0x0)
  370: s.seq[0l].val[0l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=0u (0x0)
  369: j=1u (0x1)
  370: s.seq[0l].val[1l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=0u (0x0)
  369: j=2u (0x2)
  370: s.seq[0l].val[2l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=1u (0x1)
  369: j=3u (0x3)
  370: s.seq[0l].val[3l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=2u (0x2)
  369: j=4u (0x4)
  377: j=0u (0x0)
  379: symbolCount.arr[0l]=2u (0x2)
  377: j=1u (0x1)
  379: symbolCount.arr[1l]=2u (0x2)
  377: j=2u (0x2)
  386: j=0u (0x0)
  387: s.seq[0l].probs.frac[0l].num=0u (0x0)
  388: s.seq[0l].probs.frac[0l].den=1u (0x1)
  386: j=1u (0x1)
  387: s.seq[0l].probs.frac[1l].num=0u (0x0)
  388: s.seq[0l].probs.frac[1l].den=1u (0x1)
  386: j=2u (0x2)
  387: s.seq[0l].probs.frac[2l].num=0u (0x0)
  388: s.seq[0l].probs.frac[2l].den=1u (0x1)
  386: j=3u (0x3)
  387: s.seq[0l].probs.frac[3l].num=0u (0x0)
  388: s.seq[0l].probs.frac[3l].den=1u (0x1)
  386: j=4u (0x4)
  364: i=1u (0x1)
  366: j=0u (0x0)
  367: taken.arr[0l]=0u (0x0)
  366: j=1u (0x1)
  367: taken.arr[1l]=0u (0x0)
  366: j=2u (0x2)
  369: j=0u (0x0)
  370: s.seq[1l].val[0l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=0u (0x0)
  369: j=1u (0x1)
  370: s.seq[1l].val[1l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  369: j=2u (0x2)
  370: s.seq[1l].val[2l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=1u (0x1)
  369: j=3u (0x3)
  370: s.seq[1l].val[3l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=2u (0x2)
  369: j=4u (0x4)
  377: j=0u (0x0)
  377: j=1u (0x1)
  377: j=2u (0x2)
  386: j=0u (0x0)
  387: s.seq[1l].probs.frac[0l].num=0u (0x0)
  388: s.seq[1l].probs.frac[0l].den=1u (0x1)
  386: j=1u (0x1)
  387: s.seq[1l].probs.frac[1l].num=0u (0x0)
  388: s.seq[1l].probs.frac[1l].den=1u (0x1)
  386: j=2u (0x2)
  387: s.seq[1l].probs.frac[2l].num=0u (0x0)
  388: s.seq[1l].probs.frac[2l].den=1u (0x1)
  386: j=3u (0x3)
  387: s.seq[1l].probs.frac[3l].num=0u (0x0)
  388: s.seq[1l].probs.frac[3l].den=1u (0x1)
  386: j=4u (0x4)
  364: i=2u (0x2)
  366: j=0u (0x0)
  367: taken.arr[0l]=0u (0x0)
  366: j=1u (0x1)
  367: taken.arr[1l]=0u (0x0)
  366: j=2u (0x2)
  369: j=0u (0x0)
  370: s.seq[2l].val[0l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=0u (0x0)
  369: j=1u (0x1)
  370: s.seq[2l].val[1l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  369: j=2u (0x2)
  370: s.seq[2l].val[2l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  369: j=3u (0x3)
  370: s.seq[2l].val[3l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=2u (0x2)
  369: j=4u (0x4)
  377: j=0u (0x0)
  377: j=1u (0x1)
  377: j=2u (0x2)
  386: j=0u (0x0)
  387: s.seq[2l].probs.frac[0l].num=0u (0x0)
  388: s.seq[2l].probs.frac[0l].den=1u (0x1)
  386: j=1u (0x1)
  387: s.seq[2l].probs.frac[1l].num=0u (0x0)
  388: s.seq[2l].probs.frac[1l].den=1u (0x1)
  386: j=2u (0x2)
  387: s.seq[2l].probs.frac[2l].num=0u (0x0)
  388: s.seq[2l].probs.frac[2l].den=1u (0x1)
  386: j=3u (0x3)
  387: s.seq[2l].probs.frac[3l].num=0u (0x0)
  388: s.seq[2l].probs.frac[3l].den=1u (0x1)
  386: j=4u (0x4)
  364: i=3u (0x3)
  366: j=0u (0x0)
  367: taken.arr[0l]=0u (0x0)
  366: j=1u (0x1)
  367: taken.arr[1l]=0u (0x0)
  366: j=2u (0x2)
  369: j=0u (0x0)
  370: s.seq[3l].val[0l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  374: taken.arr[0l]=0u (0x0)
  374: taken.arr[1l]=1u (0x1)
  369: j=1u (0x1)
  370: s.seq[3l].val[1l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  369: j=2u (0x2)
  370: s.seq[3l].val[2l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=1u (0x1)
  369: j=3u (0x3)
  370: s.seq[3l].val[3l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=2u (0x2)
  369: j=4u (0x4)
  377: j=0u (0x0)
  377: j=1u (0x1)
  377: j=2u (0x2)
  386: j=0u (0x0)
  387: s.seq[3l].probs.frac[0l].num=0u (0x0)
  388: s.seq[3l].probs.frac[0l].den=1u (0x1)
  386: j=1u (0x1)
  387: s.seq[3l].probs.frac[1l].num=0u (0x0)
  388: s.seq[3l].probs.frac[1l].den=1u (0x1)
  386: j=2u (0x2)
  387: s.seq[3l].probs.frac[2l].num=0u (0x0)
  388: s.seq[3l].probs.frac[2l].den=1u (0x1)
  386: j=3u (0x3)
  387: s.seq[3l].probs.frac[3l].num=0u (0x0)
  388: s.seq[3l].probs.frac[3l].den=1u (0x1)
  386: j=4u (0x4)
  364: i=4u (0x4)
  366: j=0u (0x0)
  367: taken.arr[0l]=0u (0x0)
  366: j=1u (0x1)
  367: taken.arr[1l]=0u (0x0)
  366: j=2u (0x2)
  369: j=0u (0x0)
  370: s.seq[4l].val[0l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  374: taken.arr[0l]=0u (0x0)
  374: taken.arr[1l]=1u (0x1)
  369: j=1u (0x1)
  370: s.seq[4l].val[1l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  369: j=2u (0x2)
  370: s.seq[4l].val[2l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  369: j=3u (0x3)
  370: s.seq[4l].val[3l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=2u (0x2)
  369: j=4u (0x4)
  377: j=0u (0x0)
  377: j=1u (0x1)
  377: j=2u (0x2)
  386: j=0u (0x0)
  387: s.seq[4l].probs.frac[0l].num=0u (0x0)
  388: s.seq[4l].probs.frac[0l].den=1u (0x1)
  386: j=1u (0x1)
  387: s.seq[4l].probs.frac[1l].num=0u (0x0)
  388: s.seq[4l].probs.frac[1l].den=1u (0x1)
  386: j=2u (0x2)
  387: s.seq[4l].probs.frac[2l].num=0u (0x0)
  388: s.seq[4l].probs.frac[2l].den=1u (0x1)
  386: j=3u (0x3)
  387: s.seq[4l].probs.frac[3l].num=0u (0x0)
  388: s.seq[4l].probs.frac[3l].den=1u (0x1)
  386: j=4u (0x4)
  364: i=5u (0x5)
  366: j=0u (0x0)
  367: taken.arr[0l]=0u (0x0)
  366: j=1u (0x1)
  367: taken.arr[1l]=0u (0x0)
  366: j=2u (0x2)
  369: j=0u (0x0)
  370: s.seq[5l].val[0l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=1u (0x1)
  374: taken.arr[0l]=0u (0x0)
  374: taken.arr[1l]=1u (0x1)
  369: j=1u (0x1)
  370: s.seq[5l].val[1l]=2u (0x2)
  371: val=2u (0x2)
  373: idx=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  374: taken.arr[0l]=0u (0x0)
  374: taken.arr[1l]=2u (0x2)
  369: j=2u (0x2)
  370: s.seq[5l].val[2l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[0l]=1u (0x1)
  374: taken.arr[1l]=2u (0x2)
  369: j=3u (0x3)
  370: s.seq[5l].val[3l]=1u (0x1)
  371: val=1u (0x1)
  373: idx=0u (0x0)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[0l]=2u (0x2)
  374: taken.arr[1l]=2u (0x2)
  369: j=4u (0x4)
  377: j=0u (0x0)
  377: j=1u (0x1)
  377: j=2u (0x2)
  386: j=0u (0x0)
  387: s.seq[5l].probs.frac[0l].num=0u (0x0)
  388: s.seq[5l].probs.frac[0l].den=1u (0x1)
  386: j=1u (0x1)
  387: s.seq[5l].probs.frac[1l].num=0u (0x0)
  388: s.seq[5l].probs.frac[1l].den=1u (0x1)
  386: j=2u (0x2)
  387: s.seq[5l].probs.frac[2l].num=0u (0x0)
  388: s.seq[5l].probs.frac[2l].den=1u (0x1)
  386: j=3u (0x3)
  387: s.seq[5l].probs.frac[3l].num=0u (0x0)
  388: s.seq[5l].probs.frac[3l].den=1u (0x1)
  386: j=4u (0x4)
  364: i=6u (0x6)
  392: i=1u (0x1)
  393: checked=0u (0x0)
  394: last=0u (0x0)
  395: j=0u (0x0)
  397: a=1u (0x1)
  398: f=1u (0x1)
  399: checked=0u (0x0)
  395: j=1u (0x1)
  397: a=1u (0x1)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=2u (0x2)
  397: a=2u (0x2)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=3u (0x3)
  397: a=2u (0x2)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=4u (0x4)
  392: i=2u (0x2)
  393: checked=0u (0x0)
  394: last=1u (0x1)
  395: j=0u (0x0)
  397: a=1u (0x1)
  398: f=1u (0x1)
  399: checked=0u (0x0)
  395: j=1u (0x1)
  397: a=2u (0x2)
  398: f=2u (0x2)
  399: checked=0u (0x0)
  395: j=2u (0x2)
  397: a=1u (0x1)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=3u (0x3)
  397: a=2u (0x2)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=4u (0x4)
  392: i=3u (0x3)
  393: checked=0u (0x0)
  394: last=2u (0x2)
  395: j=0u (0x0)
  397: a=1u (0x1)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=1u (0x1)
  397: a=2u (0x2)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=2u (0x2)
  397: a=2u (0x2)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=3u (0x3)
  397: a=1u (0x1)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=4u (0x4)
  392: i=4u (0x4)
  393: checked=0u (0x0)
  394: last=3u (0x3)
  395: j=0u (0x0)
  397: a=2u (0x2)
  398: f=2u (0x2)
  399: checked=0u (0x0)
  395: j=1u (0x1)
  397: a=1u (0x1)
  398: f=1u (0x1)
  399: checked=0u (0x0)
  395: j=2u (0x2)
  397: a=1u (0x1)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=3u (0x3)
  397: a=2u (0x2)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=4u (0x4)
  392: i=5u (0x5)
  393: checked=0u (0x0)
  394: last=4u (0x4)
  395: j=0u (0x0)
  397: a=2u (0x2)
  398: f=2u (0x2)
  399: checked=0u (0x0)
  395: j=1u (0x1)
  397: a=1u (0x1)
  398: f=2u (0x2)
  399: checked=1u (0x1)
  395: j=2u (0x2)
  397: a=2u (0x2)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=3u (0x3)
  397: a=1u (0x1)
  398: f=1u (0x1)
  399: checked=1u (0x1)
  395: j=4u (0x4)
  392: i=6u (0x6)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].val[0l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].val[1l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].val[2l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].val[3l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[0l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[0l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[1l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[1l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[2l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[2l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[3l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[0l].probs.frac[3l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].val[0l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].val[1l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].val[2l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].val[3l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[0l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[0l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[1l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[1l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[2l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[2l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[3l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[1l].probs.frac[3l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].val[0l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].val[1l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].val[2l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].val[3l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[0l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[0l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[1l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[1l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[2l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[2l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[3l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[2l].probs.frac[3l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].val[0l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].val[1l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].val[2l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].val[3l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[0l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[0l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[1l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[1l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[2l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[2l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[3l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[3l].probs.frac[3l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].val[0l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].val[1l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].val[2l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].val[3l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[0l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[0l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[1l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[1l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[2l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[2l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[3l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[4l].probs.frac[3l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].val[0l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].val[1l]=2u (0x2)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].val[2l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].val[3l]=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[0l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[0l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[1l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[1l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[2l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[2l].den=1u (0x1)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[3l].num=0u (0x0)
  404: goto_symex$$return_value$$getEmptyState.seq[5l].probs.frac[3l].den=1u (0x1)
↵
  1102: emptyState.seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  1102: emptyState.seq[0l].val[0l]=1u (0x1)
  1102: emptyState.seq[0l].val[1l]=1u (0x1)
  1102: emptyState.seq[0l].val[2l]=2u (0x2)
  1102: emptyState.seq[0l].val[3l]=2u (0x2)
  1102: emptyState.seq[0l].probs.frac[0l].num=0u (0x0)
  1102: emptyState.seq[0l].probs.frac[0l].den=1u (0x1)
  1102: emptyState.seq[0l].probs.frac[1l].num=0u (0x0)
  1102: emptyState.seq[0l].probs.frac[1l].den=1u (0x1)
  1102: emptyState.seq[0l].probs.frac[2l].num=0u (0x0)
  1102: emptyState.seq[0l].probs.frac[2l].den=1u (0x1)
  1102: emptyState.seq[0l].probs.frac[3l].num=0u (0x0)
  1102: emptyState.seq[0l].probs.frac[3l].den=1u (0x1)
  1102: emptyState.seq[1l].val[0l]=1u (0x1)
  1102: emptyState.seq[1l].val[1l]=2u (0x2)
  1102: emptyState.seq[1l].val[2l]=1u (0x1)
  1102: emptyState.seq[1l].val[3l]=2u (0x2)
  1102: emptyState.seq[1l].probs.frac[0l].num=0u (0x0)
  1102: emptyState.seq[1l].probs.frac[0l].den=1u (0x1)
  1102: emptyState.seq[1l].probs.frac[1l].num=0u (0x0)
  1102: emptyState.seq[1l].probs.frac[1l].den=1u (0x1)
  1102: emptyState.seq[1l].probs.frac[2l].num=0u (0x0)
  1102: emptyState.seq[1l].probs.frac[2l].den=1u (0x1)
  1102: emptyState.seq[1l].probs.frac[3l].num=0u (0x0)
  1102: emptyState.seq[1l].probs.frac[3l].den=1u (0x1)
  1102: emptyState.seq[2l].val[0l]=1u (0x1)
  1102: emptyState.seq[2l].val[1l]=2u (0x2)
  1102: emptyState.seq[2l].val[2l]=2u (0x2)
  1102: emptyState.seq[2l].val[3l]=1u (0x1)
  1102: emptyState.seq[2l].probs.frac[0l].num=0u (0x0)
  1102: emptyState.seq[2l].probs.frac[0l].den=1u (0x1)
  1102: emptyState.seq[2l].probs.frac[1l].num=0u (0x0)
  1102: emptyState.seq[2l].probs.frac[1l].den=1u (0x1)
  1102: emptyState.seq[2l].probs.frac[2l].num=0u (0x0)
  1102: emptyState.seq[2l].probs.frac[2l].den=1u (0x1)
  1102: emptyState.seq[2l].probs.frac[3l].num=0u (0x0)
  1102: emptyState.seq[2l].probs.frac[3l].den=1u (0x1)
  1102: emptyState.seq[3l].val[0l]=2u (0x2)
  1102: emptyState.seq[3l].val[1l]=1u (0x1)
  1102: emptyState.seq[3l].val[2l]=1u (0x1)
  1102: emptyState.seq[3l].val[3l]=2u (0x2)
  1102: emptyState.seq[3l].probs.frac[0l].num=0u (0x0)
  1102: emptyState.seq[3l].probs.frac[0l].den=1u (0x1)
  1102: emptyState.seq[3l].probs.frac[1l].num=0u (0x0)
  1102: emptyState.seq[3l].probs.frac[1l].den=1u (0x1)
  1102: emptyState.seq[3l].probs.frac[2l].num=0u (0x0)
  1102: emptyState.seq[3l].probs.frac[2l].den=1u (0x1)
  1102: emptyState.seq[3l].probs.frac[3l].num=0u (0x0)
  1102: emptyState.seq[3l].probs.frac[3l].den=1u (0x1)
  1102: emptyState.seq[4l].val[0l]=2u (0x2)
  1102: emptyState.seq[4l].val[1l]=1u (0x1)
  1102: emptyState.seq[4l].val[2l]=2u (0x2)
  1102: emptyState.seq[4l].val[3l]=1u (0x1)
  1102: emptyState.seq[4l].probs.frac[0l].num=0u (0x0)
  1102: emptyState.seq[4l].probs.frac[0l].den=1u (0x1)
  1102: emptyState.seq[4l].probs.frac[1l].num=0u (0x0)
  1102: emptyState.seq[4l].probs.frac[1l].den=1u (0x1)
  1102: emptyState.seq[4l].probs.frac[2l].num=0u (0x0)
  1102: emptyState.seq[4l].probs.frac[2l].den=1u (0x1)
  1102: emptyState.seq[4l].probs.frac[3l].num=0u (0x0)
  1102: emptyState.seq[4l].probs.frac[3l].den=1u (0x1)
  1102: emptyState.seq[5l].val[0l]=2u (0x2)
  1102: emptyState.seq[5l].val[1l]=2u (0x2)
  1102: emptyState.seq[5l].val[2l]=1u (0x1)
  1102: emptyState.seq[5l].val[3l]=1u (0x1)
  1102: emptyState.seq[5l].probs.frac[0l].num=0u (0x0)
  1102: emptyState.seq[5l].probs.frac[0l].den=1u (0x1)
  1102: emptyState.seq[5l].probs.frac[1l].num=0u (0x0)
  1102: emptyState.seq[5l].probs.frac[1l].den=1u (0x1)
  1102: emptyState.seq[5l].probs.frac[2l].num=0u (0x0)
  1102: emptyState.seq[5l].probs.frac[2l].den=1u (0x1)
  1102: emptyState.seq[5l].probs.frac[3l].num=0u (0x0)
  1102: emptyState.seq[5l].probs.frac[3l].den=1u (0x1)
  1103: startState.seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  1103: startState.seq[0l].val[0l]=1u (0x1)
  1103: startState.seq[0l].val[1l]=1u (0x1)
  1103: startState.seq[0l].val[2l]=2u (0x2)
  1103: startState.seq[0l].val[3l]=2u (0x2)
  1103: startState.seq[0l].probs.frac[0l].num=0u (0x0)
  1103: startState.seq[0l].probs.frac[0l].den=1u (0x1)
  1103: startState.seq[0l].probs.frac[1l].num=0u (0x0)
  1103: startState.seq[0l].probs.frac[1l].den=1u (0x1)
  1103: startState.seq[0l].probs.frac[2l].num=0u (0x0)
  1103: startState.seq[0l].probs.frac[2l].den=1u (0x1)
  1103: startState.seq[0l].probs.frac[3l].num=0u (0x0)
  1103: startState.seq[0l].probs.frac[3l].den=1u (0x1)
  1103: startState.seq[1l].val[0l]=1u (0x1)
  1103: startState.seq[1l].val[1l]=2u (0x2)
  1103: startState.seq[1l].val[2l]=1u (0x1)
  1103: startState.seq[1l].val[3l]=2u (0x2)
  1103: startState.seq[1l].probs.frac[0l].num=0u (0x0)
  1103: startState.seq[1l].probs.frac[0l].den=1u (0x1)
  1103: startState.seq[1l].probs.frac[1l].num=0u (0x0)
  1103: startState.seq[1l].probs.frac[1l].den=1u (0x1)
  1103: startState.seq[1l].probs.frac[2l].num=0u (0x0)
  1103: startState.seq[1l].probs.frac[2l].den=1u (0x1)
  1103: startState.seq[1l].probs.frac[3l].num=0u (0x0)
  1103: startState.seq[1l].probs.frac[3l].den=1u (0x1)
  1103: startState.seq[2l].val[0l]=1u (0x1)
  1103: startState.seq[2l].val[1l]=2u (0x2)
  1103: startState.seq[2l].val[2l]=2u (0x2)
  1103: startState.seq[2l].val[3l]=1u (0x1)
  1103: startState.seq[2l].probs.frac[0l].num=0u (0x0)
  1103: startState.seq[2l].probs.frac[0l].den=1u (0x1)
  1103: startState.seq[2l].probs.frac[1l].num=0u (0x0)
  1103: startState.seq[2l].probs.frac[1l].den=1u (0x1)
  1103: startState.seq[2l].probs.frac[2l].num=0u (0x0)
  1103: startState.seq[2l].probs.frac[2l].den=1u (0x1)
  1103: startState.seq[2l].probs.frac[3l].num=0u (0x0)
  1103: startState.seq[2l].probs.frac[3l].den=1u (0x1)
  1103: startState.seq[3l].val[0l]=2u (0x2)
  1103: startState.seq[3l].val[1l]=1u (0x1)
  1103: startState.seq[3l].val[2l]=1u (0x1)
  1103: startState.seq[3l].val[3l]=2u (0x2)
  1103: startState.seq[3l].probs.frac[0l].num=0u (0x0)
  1103: startState.seq[3l].probs.frac[0l].den=1u (0x1)
  1103: startState.seq[3l].probs.frac[1l].num=0u (0x0)
  1103: startState.seq[3l].probs.frac[1l].den=1u (0x1)
  1103: startState.seq[3l].probs.frac[2l].num=0u (0x0)
  1103: startState.seq[3l].probs.frac[2l].den=1u (0x1)
  1103: startState.seq[3l].probs.frac[3l].num=0u (0x0)
  1103: startState.seq[3l].probs.frac[3l].den=1u (0x1)
  1103: startState.seq[4l].val[0l]=2u (0x2)
  1103: startState.seq[4l].val[1l]=1u (0x1)
  1103: startState.seq[4l].val[2l]=2u (0x2)
  1103: startState.seq[4l].val[3l]=1u (0x1)
  1103: startState.seq[4l].probs.frac[0l].num=0u (0x0)
  1103: startState.seq[4l].probs.frac[0l].den=1u (0x1)
  1103: startState.seq[4l].probs.frac[1l].num=0u (0x0)
  1103: startState.seq[4l].probs.frac[1l].den=1u (0x1)
  1103: startState.seq[4l].probs.frac[2l].num=0u (0x0)
  1103: startState.seq[4l].probs.frac[2l].den=1u (0x1)
  1103: startState.seq[4l].probs.frac[3l].num=0u (0x0)
  1103: startState.seq[4l].probs.frac[3l].den=1u (0x1)
  1103: startState.seq[5l].val[0l]=2u (0x2)
  1103: startState.seq[5l].val[1l]=2u (0x2)
  1103: startState.seq[5l].val[2l]=1u (0x1)
  1103: startState.seq[5l].val[3l]=1u (0x1)
  1103: startState.seq[5l].probs.frac[0l].num=0u (0x0)
  1103: startState.seq[5l].probs.frac[0l].den=1u (0x1)
  1103: startState.seq[5l].probs.frac[1l].num=0u (0x0)
  1103: startState.seq[5l].probs.frac[1l].den=1u (0x1)
  1103: startState.seq[5l].probs.frac[2l].num=0u (0x0)
  1103: startState.seq[5l].probs.frac[2l].den=1u (0x1)
  1103: startState.seq[5l].probs.frac[3l].num=0u (0x0)
  1103: startState.seq[5l].probs.frac[3l].den=1u (0x1)
  1107: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:1108 getStartSequence()
  425: i=0u (0x0)
  426: taken.arr[0l]=0u (0x0)
  425: i=1u (0x1)
  426: taken.arr[1l]=0u (0x0)
  425: i=2u (0x2)
  429: i=0u (0x0)
  430: res.arr[0l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=0u (0x0)
  429: i=1u (0x1)
  430: res.arr[1l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  429: i=2u (0x2)
  430: res.arr[2l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[1l]=1u (0x1)
  429: i=3u (0x3)
  430: res.arr[3l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=2u (0x2)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[1l]=2u (0x2)
  429: i=4u (0x4)
  440: i=4u (0x4)
  445: goto_symex$$return_value$$getStartSequence.arr[0l]=1u (0x1)
  445: goto_symex$$return_value$$getStartSequence.arr[1l]=2u (0x2)
  445: goto_symex$$return_value$$getStartSequence.arr[2l]=1u (0x1)
  445: goto_symex$$return_value$$getStartSequence.arr[3l]=2u (0x2)
↵
  1108: return_value_getStartSequence.arr[0l]=1u (0x1)
  1108: return_value_getStartSequence.arr[1l]=2u (0x2)
  1108: return_value_getStartSequence.arr[2l]=1u (0x1)
  1108: return_value_getStartSequence.arr[3l]=2u (0x2)
  1108: start[0l].arr={ 1u, 2u, 1u, 2u } ({ 0x1, 0x2, 0x1, 0x2 })
  1108: start[0l].arr[0l]=1u (0x1)
  1108: start[0l].arr[1l]=2u (0x2)
  1108: start[0l].arr[2l]=1u (0x1)
  1108: start[0l].arr[3l]=2u (0x2)
  1107: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:1108 getStartSequence()
  425: i=0u (0x0)
  426: taken.arr[0l]=0u (0x0)
  425: i=1u (0x1)
  426: taken.arr[1l]=0u (0x0)
  425: i=2u (0x2)
  429: i=0u (0x0)
  430: res.arr[0l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=0u (0x0)
  429: i=1u (0x1)
  430: res.arr[1l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  429: i=2u (0x2)
  430: res.arr[2l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=2u (0x2)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=2u (0x2)
  429: i=3u (0x3)
  430: res.arr[3l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[1l]=2u (0x2)
  429: i=4u (0x4)
  440: i=4u (0x4)
  445: goto_symex$$return_value$$getStartSequence.arr[0l]=1u (0x1)
  445: goto_symex$$return_value$$getStartSequence.arr[1l]=2u (0x2)
  445: goto_symex$$return_value$$getStartSequence.arr[2l]=2u (0x2)
  445: goto_symex$$return_value$$getStartSequence.arr[3l]=1u (0x1)
↵
  1108: return_value_getStartSequence.arr[0l]=1u (0x1)
  1108: return_value_getStartSequence.arr[1l]=2u (0x2)
  1108: return_value_getStartSequence.arr[2l]=2u (0x2)
  1108: return_value_getStartSequence.arr[3l]=1u (0x1)
  1108: start[1l].arr={ 1u, 2u, 2u, 1u } ({ 0x1, 0x2, 0x2, 0x1 })
  1108: start[1l].arr[0l]=1u (0x1)
  1108: start[1l].arr[1l]=2u (0x2)
  1108: start[1l].arr[2l]=2u (0x2)
  1108: start[1l].arr[3l]=1u (0x1)
  1107: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:1108 getStartSequence()
  425: i=0u (0x0)
  426: taken.arr[0l]=0u (0x0)
  425: i=1u (0x1)
  426: taken.arr[1l]=0u (0x0)
  425: i=2u (0x2)
  429: i=0u (0x0)
  430: res.arr[0l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  435: taken.arr[0l]=0u (0x0)
  435: taken.arr[1l]=1u (0x1)
  429: i=1u (0x1)
  430: res.arr[1l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  429: i=2u (0x2)
  430: res.arr[2l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[1l]=1u (0x1)
  429: i=3u (0x3)
  430: res.arr[3l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=2u (0x2)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[1l]=2u (0x2)
  429: i=4u (0x4)
  440: i=4u (0x4)
  445: goto_symex$$return_value$$getStartSequence.arr[0l]=2u (0x2)
  445: goto_symex$$return_value$$getStartSequence.arr[1l]=1u (0x1)
  445: goto_symex$$return_value$$getStartSequence.arr[2l]=1u (0x1)
  445: goto_symex$$return_value$$getStartSequence.arr[3l]=2u (0x2)
↵
  1108: return_value_getStartSequence.arr[0l]=2u (0x2)
  1108: return_value_getStartSequence.arr[1l]=1u (0x1)
  1108: return_value_getStartSequence.arr[2l]=1u (0x1)
  1108: return_value_getStartSequence.arr[3l]=2u (0x2)
  1108: start[2l].arr={ 2u, 1u, 1u, 2u } ({ 0x2, 0x1, 0x1, 0x2 })
  1108: start[2l].arr[0l]=2u (0x2)
  1108: start[2l].arr[1l]=1u (0x1)
  1108: start[2l].arr[2l]=1u (0x1)
  1108: start[2l].arr[3l]=2u (0x2)
  1107: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:1108 getStartSequence()
  425: i=0u (0x0)
  426: taken.arr[0l]=0u (0x0)
  425: i=1u (0x1)
  426: taken.arr[1l]=0u (0x0)
  425: i=2u (0x2)
  429: i=0u (0x0)
  430: res.arr[0l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  435: taken.arr[0l]=0u (0x0)
  435: taken.arr[1l]=1u (0x1)
  429: i=1u (0x1)
  430: res.arr[1l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=1u (0x1)
  429: i=2u (0x2)
  430: res.arr[2l]=2u (0x2)
  431: val=2u (0x2)
  433: idx=1u (0x1)
  435: taken.arr[1l]=2u (0x2)
  435: taken.arr[0l]=1u (0x1)
  435: taken.arr[1l]=2u (0x2)
  429: i=3u (0x3)
  430: res.arr[3l]=1u (0x1)
  431: val=1u (0x1)
  433: idx=0u (0x0)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[0l]=2u (0x2)
  435: taken.arr[1l]=2u (0x2)
  429: i=4u (0x4)
  440: i=4u (0x4)
  445: goto_symex$$return_value$$getStartSequence.arr[0l]=2u (0x2)
  445: goto_symex$$return_value$$getStartSequence.arr[1l]=1u (0x1)
  445: goto_symex$$return_value$$getStartSequence.arr[2l]=2u (0x2)
  445: goto_symex$$return_value$$getStartSequence.arr[3l]=1u (0x1)
↵
  1108: return_value_getStartSequence.arr[0l]=2u (0x2)
  1108: return_value_getStartSequence.arr[1l]=1u (0x1)
  1108: return_value_getStartSequence.arr[2l]=2u (0x2)
  1108: return_value_getStartSequence.arr[3l]=1u (0x1)
  1108: start[3l].arr={ 2u, 1u, 2u, 1u } ({ 0x2, 0x1, 0x2, 0x1 })
  1108: start[3l].arr[0l]=2u (0x2)
  1108: start[3l].arr[1l]=1u (0x1)
  1108: start[3l].arr[2l]=2u (0x2)
  1108: start[3l].arr[3l]=1u (0x1)
  1107: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:1110 isZeroZero(start!0@1[0l].arr)

↳ findTwoCardProtocolXOR.c:1057 isZero(1u, 2u)
↵

↳ findTwoCardProtocolXOR.c:1057 isZero(1u, 2u)
↵
↵
  1122: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:1123 getSequenceIndexFromArray({ .arr={ 1u, 2u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1123: compare.arr[0l]=1u (0x1)
  1123: compare.arr[1l]=2u (0x2)
  1123: compare.arr[2l]=1u (0x1)
  1123: compare.arr[3l]=2u (0x2)
  1123: compareState.seq[0l].val[0l]=1u (0x1)
  1123: compareState.seq[0l].val[1l]=1u (0x1)
  1123: compareState.seq[0l].val[2l]=2u (0x2)
  1123: compareState.seq[0l].val[3l]=2u (0x2)
  1123: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[1l].val[0l]=1u (0x1)
  1123: compareState.seq[1l].val[1l]=2u (0x2)
  1123: compareState.seq[1l].val[2l]=1u (0x1)
  1123: compareState.seq[1l].val[3l]=2u (0x2)
  1123: compareState.seq[1l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[2l].val[0l]=1u (0x1)
  1123: compareState.seq[2l].val[1l]=2u (0x2)
  1123: compareState.seq[2l].val[2l]=2u (0x2)
  1123: compareState.seq[2l].val[3l]=1u (0x1)
  1123: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[3l].val[0l]=2u (0x2)
  1123: compareState.seq[3l].val[1l]=1u (0x1)
  1123: compareState.seq[3l].val[2l]=1u (0x1)
  1123: compareState.seq[3l].val[3l]=2u (0x2)
  1123: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[4l].val[0l]=2u (0x2)
  1123: compareState.seq[4l].val[1l]=1u (0x1)
  1123: compareState.seq[4l].val[2l]=2u (0x2)
  1123: compareState.seq[4l].val[3l]=1u (0x1)
  1123: compareState.seq[4l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[5l].val[0l]=2u (0x2)
  1123: compareState.seq[5l].val[1l]=2u (0x2)
  1123: compareState.seq[5l].val[2l]=1u (0x1)
  1123: compareState.seq[5l].val[3l]=1u (0x1)
  1123: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=1u (0x1)
  467: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  1123: arrSeqIdx[0l]=1u (0x1)
  1122: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:1123 getSequenceIndexFromArray({ .arr={ 1u, 2u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1123: compare.arr[0l]=1u (0x1)
  1123: compare.arr[1l]=2u (0x2)
  1123: compare.arr[2l]=2u (0x2)
  1123: compare.arr[3l]=1u (0x1)
  1123: compareState.seq[0l].val[0l]=1u (0x1)
  1123: compareState.seq[0l].val[1l]=1u (0x1)
  1123: compareState.seq[0l].val[2l]=2u (0x2)
  1123: compareState.seq[0l].val[3l]=2u (0x2)
  1123: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[1l].val[0l]=1u (0x1)
  1123: compareState.seq[1l].val[1l]=2u (0x2)
  1123: compareState.seq[1l].val[2l]=1u (0x1)
  1123: compareState.seq[1l].val[3l]=2u (0x2)
  1123: compareState.seq[1l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[2l].val[0l]=1u (0x1)
  1123: compareState.seq[2l].val[1l]=2u (0x2)
  1123: compareState.seq[2l].val[2l]=2u (0x2)
  1123: compareState.seq[2l].val[3l]=1u (0x1)
  1123: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[3l].val[0l]=2u (0x2)
  1123: compareState.seq[3l].val[1l]=1u (0x1)
  1123: compareState.seq[3l].val[2l]=1u (0x1)
  1123: compareState.seq[3l].val[3l]=2u (0x2)
  1123: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[4l].val[0l]=2u (0x2)
  1123: compareState.seq[4l].val[1l]=1u (0x1)
  1123: compareState.seq[4l].val[2l]=2u (0x2)
  1123: compareState.seq[4l].val[3l]=1u (0x1)
  1123: compareState.seq[4l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[5l].val[0l]=2u (0x2)
  1123: compareState.seq[5l].val[1l]=2u (0x2)
  1123: compareState.seq[5l].val[2l]=1u (0x1)
  1123: compareState.seq[5l].val[3l]=1u (0x1)
  1123: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=2u (0x2)
  467: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  1123: arrSeqIdx[1l]=2u (0x2)
  1122: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:1123 getSequenceIndexFromArray({ .arr={ 2u, 1u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1123: compare.arr[0l]=2u (0x2)
  1123: compare.arr[1l]=1u (0x1)
  1123: compare.arr[2l]=1u (0x1)
  1123: compare.arr[3l]=2u (0x2)
  1123: compareState.seq[0l].val[0l]=1u (0x1)
  1123: compareState.seq[0l].val[1l]=1u (0x1)
  1123: compareState.seq[0l].val[2l]=2u (0x2)
  1123: compareState.seq[0l].val[3l]=2u (0x2)
  1123: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[1l].val[0l]=1u (0x1)
  1123: compareState.seq[1l].val[1l]=2u (0x2)
  1123: compareState.seq[1l].val[2l]=1u (0x1)
  1123: compareState.seq[1l].val[3l]=2u (0x2)
  1123: compareState.seq[1l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[2l].val[0l]=1u (0x1)
  1123: compareState.seq[2l].val[1l]=2u (0x2)
  1123: compareState.seq[2l].val[2l]=2u (0x2)
  1123: compareState.seq[2l].val[3l]=1u (0x1)
  1123: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[3l].val[0l]=2u (0x2)
  1123: compareState.seq[3l].val[1l]=1u (0x1)
  1123: compareState.seq[3l].val[2l]=1u (0x1)
  1123: compareState.seq[3l].val[3l]=2u (0x2)
  1123: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[4l].val[0l]=2u (0x2)
  1123: compareState.seq[4l].val[1l]=1u (0x1)
  1123: compareState.seq[4l].val[2l]=2u (0x2)
  1123: compareState.seq[4l].val[3l]=1u (0x1)
  1123: compareState.seq[4l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[5l].val[0l]=2u (0x2)
  1123: compareState.seq[5l].val[1l]=2u (0x2)
  1123: compareState.seq[5l].val[2l]=1u (0x1)
  1123: compareState.seq[5l].val[3l]=1u (0x1)
  1123: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=3u (0x3)
  467: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  1123: arrSeqIdx[2l]=3u (0x3)
  1122: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:1123 getSequenceIndexFromArray({ .arr={ 2u, 1u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1123: compare.arr[0l]=2u (0x2)
  1123: compare.arr[1l]=1u (0x1)
  1123: compare.arr[2l]=2u (0x2)
  1123: compare.arr[3l]=1u (0x1)
  1123: compareState.seq[0l].val[0l]=1u (0x1)
  1123: compareState.seq[0l].val[1l]=1u (0x1)
  1123: compareState.seq[0l].val[2l]=2u (0x2)
  1123: compareState.seq[0l].val[3l]=2u (0x2)
  1123: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[1l].val[0l]=1u (0x1)
  1123: compareState.seq[1l].val[1l]=2u (0x2)
  1123: compareState.seq[1l].val[2l]=1u (0x1)
  1123: compareState.seq[1l].val[3l]=2u (0x2)
  1123: compareState.seq[1l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[2l].val[0l]=1u (0x1)
  1123: compareState.seq[2l].val[1l]=2u (0x2)
  1123: compareState.seq[2l].val[2l]=2u (0x2)
  1123: compareState.seq[2l].val[3l]=1u (0x1)
  1123: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[3l].val[0l]=2u (0x2)
  1123: compareState.seq[3l].val[1l]=1u (0x1)
  1123: compareState.seq[3l].val[2l]=1u (0x1)
  1123: compareState.seq[3l].val[3l]=2u (0x2)
  1123: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[4l].val[0l]=2u (0x2)
  1123: compareState.seq[4l].val[1l]=1u (0x1)
  1123: compareState.seq[4l].val[2l]=2u (0x2)
  1123: compareState.seq[4l].val[3l]=1u (0x1)
  1123: compareState.seq[4l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  1123: compareState.seq[5l].val[0l]=2u (0x2)
  1123: compareState.seq[5l].val[1l]=2u (0x2)
  1123: compareState.seq[5l].val[2l]=1u (0x1)
  1123: compareState.seq[5l].val[3l]=1u (0x1)
  1123: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  1123: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  1123: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=4u (0x4)
  467: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  1123: arrSeqIdx[3l]=4u (0x4)
  1122: i=4u (0x4)
  1126: i=0u (0x0)
  1127: idx=1u (0x1)
  1128: inputPoss=0u (0x0)
  1129: pos=0u (0x0)

↳ findTwoCardProtocolXOR.c:1132 inputProbability(0u, start!0@1[0l].arr)
  1087: res=0u (0x0)

↳ findTwoCardProtocolXOR.c:1089 isZeroZero(start!0@1[0l].arr)

↳ findTwoCardProtocolXOR.c:1057 isZero(1u, 2u)
↵

↳ findTwoCardProtocolXOR.c:1057 isZero(1u, 2u)
↵
↵
  1089: res=1u (0x1)
↵
  1132: inputPoss=1u (0x1)
  1133: pos=0u (0x0)
  1138: startState.seq[(signed long int)idx].probs.frac[0l].num=1u (0x1)
  1138: startState.seq[0l].val[0l]=1u (0x1)
  1138: startState.seq[0l].val[1l]=1u (0x1)
  1138: startState.seq[0l].val[2l]=2u (0x2)
  1138: startState.seq[0l].val[3l]=2u (0x2)
  1138: startState.seq[0l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[1l].val[0l]=1u (0x1)
  1138: startState.seq[1l].val[1l]=2u (0x2)
  1138: startState.seq[1l].val[2l]=1u (0x1)
  1138: startState.seq[1l].val[3l]=2u (0x2)
  1138: startState.seq[1l].probs.frac[0l].num=1u (0x1)
  1138: startState.seq[1l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[2l].val[0l]=1u (0x1)
  1138: startState.seq[2l].val[1l]=2u (0x2)
  1138: startState.seq[2l].val[2l]=2u (0x2)
  1138: startState.seq[2l].val[3l]=1u (0x1)
  1138: startState.seq[2l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[3l].val[0l]=2u (0x2)
  1138: startState.seq[3l].val[1l]=1u (0x1)
  1138: startState.seq[3l].val[2l]=1u (0x1)
  1138: startState.seq[3l].val[3l]=2u (0x2)
  1138: startState.seq[3l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[4l].val[0l]=2u (0x2)
  1138: startState.seq[4l].val[1l]=1u (0x1)
  1138: startState.seq[4l].val[2l]=2u (0x2)
  1138: startState.seq[4l].val[3l]=1u (0x1)
  1138: startState.seq[4l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[5l].val[0l]=2u (0x2)
  1138: startState.seq[5l].val[1l]=2u (0x2)
  1138: startState.seq[5l].val[2l]=1u (0x1)
  1138: startState.seq[5l].val[3l]=1u (0x1)
  1138: startState.seq[5l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[3l].den=1u (0x1)
  1126: i=1u (0x1)
  1127: idx=2u (0x2)
  1128: inputPoss=0u (0x0)
  1129: pos=0u (0x0)

↳ findTwoCardProtocolXOR.c:1132 inputProbability(1u, start!0@1[1l].arr)
  1087: res=0u (0x0)

↳ findTwoCardProtocolXOR.c:1091 isZeroOne(start!0@1[1l].arr)

↳ findTwoCardProtocolXOR.c:1064 isZero(1u, 2u)
↵

↳ findTwoCardProtocolXOR.c:1064 isOne(2u, 1u)
↵
↵
  1091: res=1u (0x1)
↵
  1132: inputPoss=1u (0x1)
  1133: pos=1u (0x1)
  1138: startState.seq[(signed long int)idx].probs.frac[1l].num=1u (0x1)
  1138: startState.seq[0l].val[0l]=1u (0x1)
  1138: startState.seq[0l].val[1l]=1u (0x1)
  1138: startState.seq[0l].val[2l]=2u (0x2)
  1138: startState.seq[0l].val[3l]=2u (0x2)
  1138: startState.seq[0l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[1l].val[0l]=1u (0x1)
  1138: startState.seq[1l].val[1l]=2u (0x2)
  1138: startState.seq[1l].val[2l]=1u (0x1)
  1138: startState.seq[1l].val[3l]=2u (0x2)
  1138: startState.seq[1l].probs.frac[0l].num=1u (0x1)
  1138: startState.seq[1l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[2l].val[0l]=1u (0x1)
  1138: startState.seq[2l].val[1l]=2u (0x2)
  1138: startState.seq[2l].val[2l]=2u (0x2)
  1138: startState.seq[2l].val[3l]=1u (0x1)
  1138: startState.seq[2l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].num=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[3l].val[0l]=2u (0x2)
  1138: startState.seq[3l].val[1l]=1u (0x1)
  1138: startState.seq[3l].val[2l]=1u (0x1)
  1138: startState.seq[3l].val[3l]=2u (0x2)
  1138: startState.seq[3l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[4l].val[0l]=2u (0x2)
  1138: startState.seq[4l].val[1l]=1u (0x1)
  1138: startState.seq[4l].val[2l]=2u (0x2)
  1138: startState.seq[4l].val[3l]=1u (0x1)
  1138: startState.seq[4l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[5l].val[0l]=2u (0x2)
  1138: startState.seq[5l].val[1l]=2u (0x2)
  1138: startState.seq[5l].val[2l]=1u (0x1)
  1138: startState.seq[5l].val[3l]=1u (0x1)
  1138: startState.seq[5l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[3l].den=1u (0x1)
  1126: i=2u (0x2)
  1127: idx=3u (0x3)
  1128: inputPoss=0u (0x0)
  1129: pos=0u (0x0)

↳ findTwoCardProtocolXOR.c:1132 inputProbability(2u, start!0@1[2l].arr)
  1087: res=0u (0x0)

↳ findTwoCardProtocolXOR.c:1093 isOneZero(start!0@1[2l].arr)

↳ findTwoCardProtocolXOR.c:1071 isOne(2u, 1u)
↵

↳ findTwoCardProtocolXOR.c:1071 isZero(1u, 2u)
↵
↵
  1093: res=1u (0x1)
↵
  1132: inputPoss=1u (0x1)
  1133: pos=2u (0x2)
  1138: startState.seq[(signed long int)idx].probs.frac[2l].num=1u (0x1)
  1138: startState.seq[0l].val[0l]=1u (0x1)
  1138: startState.seq[0l].val[1l]=1u (0x1)
  1138: startState.seq[0l].val[2l]=2u (0x2)
  1138: startState.seq[0l].val[3l]=2u (0x2)
  1138: startState.seq[0l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[1l].val[0l]=1u (0x1)
  1138: startState.seq[1l].val[1l]=2u (0x2)
  1138: startState.seq[1l].val[2l]=1u (0x1)
  1138: startState.seq[1l].val[3l]=2u (0x2)
  1138: startState.seq[1l].probs.frac[0l].num=1u (0x1)
  1138: startState.seq[1l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[2l].val[0l]=1u (0x1)
  1138: startState.seq[2l].val[1l]=2u (0x2)
  1138: startState.seq[2l].val[2l]=2u (0x2)
  1138: startState.seq[2l].val[3l]=1u (0x1)
  1138: startState.seq[2l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].num=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[3l].val[0l]=2u (0x2)
  1138: startState.seq[3l].val[1l]=1u (0x1)
  1138: startState.seq[3l].val[2l]=1u (0x1)
  1138: startState.seq[3l].val[3l]=2u (0x2)
  1138: startState.seq[3l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[2l].num=1u (0x1)
  1138: startState.seq[3l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[4l].val[0l]=2u (0x2)
  1138: startState.seq[4l].val[1l]=1u (0x1)
  1138: startState.seq[4l].val[2l]=2u (0x2)
  1138: startState.seq[4l].val[3l]=1u (0x1)
  1138: startState.seq[4l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[5l].val[0l]=2u (0x2)
  1138: startState.seq[5l].val[1l]=2u (0x2)
  1138: startState.seq[5l].val[2l]=1u (0x1)
  1138: startState.seq[5l].val[3l]=1u (0x1)
  1138: startState.seq[5l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[3l].den=1u (0x1)
  1126: i=3u (0x3)
  1127: idx=4u (0x4)
  1128: inputPoss=0u (0x0)
  1129: pos=0u (0x0)

↳ findTwoCardProtocolXOR.c:1132 inputProbability(3u, start!0@1[3l].arr)
  1087: res=0u (0x0)

↳ findTwoCardProtocolXOR.c:1095 isOneOne(start!0@1[3l].arr)

↳ findTwoCardProtocolXOR.c:1078 isOne(2u, 1u)
↵

↳ findTwoCardProtocolXOR.c:1078 isOne(2u, 1u)
↵
↵
  1095: res=1u (0x1)
↵
  1132: inputPoss=1u (0x1)
  1133: pos=3u (0x3)
  1138: startState.seq[(signed long int)idx].probs.frac[3l].num=1u (0x1)
  1138: startState.seq[0l].val[0l]=1u (0x1)
  1138: startState.seq[0l].val[1l]=1u (0x1)
  1138: startState.seq[0l].val[2l]=2u (0x2)
  1138: startState.seq[0l].val[3l]=2u (0x2)
  1138: startState.seq[0l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[0l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[0l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[1l].val[0l]=1u (0x1)
  1138: startState.seq[1l].val[1l]=2u (0x2)
  1138: startState.seq[1l].val[2l]=1u (0x1)
  1138: startState.seq[1l].val[3l]=2u (0x2)
  1138: startState.seq[1l].probs.frac[0l].num=1u (0x1)
  1138: startState.seq[1l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[1l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[1l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[2l].val[0l]=1u (0x1)
  1138: startState.seq[2l].val[1l]=2u (0x2)
  1138: startState.seq[2l].val[2l]=2u (0x2)
  1138: startState.seq[2l].val[3l]=1u (0x1)
  1138: startState.seq[2l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].num=1u (0x1)
  1138: startState.seq[2l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[2l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[2l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[3l].val[0l]=2u (0x2)
  1138: startState.seq[3l].val[1l]=1u (0x1)
  1138: startState.seq[3l].val[2l]=1u (0x1)
  1138: startState.seq[3l].val[3l]=2u (0x2)
  1138: startState.seq[3l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[2l].num=1u (0x1)
  1138: startState.seq[3l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[3l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[3l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[4l].val[0l]=2u (0x2)
  1138: startState.seq[4l].val[1l]=1u (0x1)
  1138: startState.seq[4l].val[2l]=2u (0x2)
  1138: startState.seq[4l].val[3l]=1u (0x1)
  1138: startState.seq[4l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[4l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[4l].probs.frac[3l].num=1u (0x1)
  1138: startState.seq[4l].probs.frac[3l].den=1u (0x1)
  1138: startState.seq[5l].val[0l]=2u (0x2)
  1138: startState.seq[5l].val[1l]=2u (0x2)
  1138: startState.seq[5l].val[2l]=1u (0x1)
  1138: startState.seq[5l].val[3l]=1u (0x1)
  1138: startState.seq[5l].probs.frac[0l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[0l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[1l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[1l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[2l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[2l].den=1u (0x1)
  1138: startState.seq[5l].probs.frac[3l].num=0u (0x0)
  1138: startState.seq[5l].probs.frac[3l].den=1u (0x1)
  1126: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:1155 getStateWithAllPermutations()
  477: i=0u (0x0)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[0l].val[0l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[0l].val[1l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[0l].val[2l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=3u (0x3)
  483: s.seq[0l].val[3l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=1u (0x1)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[1l].val[0l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[1l].val[1l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[1l].val[2l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[1l].val[3l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=2u (0x2)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[2l].val[0l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[2l].val[1l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[2l].val[2l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=3u (0x3)
  483: s.seq[2l].val[3l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=3u (0x3)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[3l].val[0l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[3l].val[1l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[3l].val[2l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[3l].val[3l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=4u (0x4)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[4l].val[0l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[4l].val[1l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[4l].val[2l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[4l].val[3l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=5u (0x5)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[5l].val[0l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[5l].val[1l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[5l].val[2l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[5l].val[3l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=6u (0x6)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[6l].val[0l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[6l].val[1l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[6l].val[2l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=3u (0x3)
  483: s.seq[6l].val[3l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=7u (0x7)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[7l].val[0l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[7l].val[1l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[7l].val[2l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[7l].val[3l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=8u (0x8)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[8l].val[0l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[8l].val[1l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[8l].val[2l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=3u (0x3)
  483: s.seq[8l].val[3l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=9u (0x9)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[9l].val[0l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[9l].val[1l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[9l].val[2l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[9l].val[3l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=10u (0xA)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[10l].val[0l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[10l].val[1l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[10l].val[2l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[10l].val[3l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=11u (0xB)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[11l].val[0l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[11l].val[1l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[11l].val[2l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[11l].val[3l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=12u (0xC)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[12l].val[0l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[12l].val[1l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[12l].val[2l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=3u (0x3)
  483: s.seq[12l].val[3l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=13u (0xD)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[13l].val[0l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[13l].val[1l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[13l].val[2l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[13l].val[3l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=14u (0xE)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[14l].val[0l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[14l].val[1l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[14l].val[2l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=3u (0x3)
  483: s.seq[14l].val[3l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=15u (0xF)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[15l].val[0l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[15l].val[1l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=2u (0x2)
  483: s.seq[15l].val[2l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[15l].val[3l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=16u (0x10)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[16l].val[0l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[16l].val[1l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[16l].val[2l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[16l].val[3l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=17u (0x11)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[17l].val[0l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=0u (0x0)
  482: j=1u (0x1)
  483: s.seq[17l].val[1l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[17l].val[2l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[17l].val[3l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=18u (0x12)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[18l].val[0l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=1u (0x1)
  483: s.seq[18l].val[1l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[18l].val[2l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[18l].val[3l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=19u (0x13)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[19l].val[0l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=1u (0x1)
  483: s.seq[19l].val[1l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[19l].val[2l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[19l].val[3l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=20u (0x14)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[20l].val[0l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=1u (0x1)
  483: s.seq[20l].val[1l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[20l].val[2l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[20l].val[3l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=21u (0x15)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[21l].val[0l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=1u (0x1)
  483: s.seq[21l].val[1l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[21l].val[2l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[21l].val[3l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=22u (0x16)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[22l].val[0l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=1u (0x1)
  483: s.seq[22l].val[1l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[22l].val[2l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[22l].val[3l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=23u (0x17)
  479: j=0u (0x0)
  480: taken.arr[0l]=0u (0x0)
  479: j=1u (0x1)
  480: taken.arr[1l]=0u (0x0)
  479: j=2u (0x2)
  480: taken.arr[2l]=0u (0x0)
  479: j=3u (0x3)
  480: taken.arr[3l]=0u (0x0)
  479: j=4u (0x4)
  482: j=0u (0x0)
  483: s.seq[23l].val[0l]=4u (0x4)
  484: val=4u (0x4)
  486: idx=3u (0x3)
  488: taken.arr[3l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=0u (0x0)
  488: taken.arr[3l]=1u (0x1)
  482: j=1u (0x1)
  483: s.seq[23l].val[1l]=3u (0x3)
  484: val=3u (0x3)
  486: idx=2u (0x2)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=0u (0x0)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=2u (0x2)
  483: s.seq[23l].val[2l]=2u (0x2)
  484: val=2u (0x2)
  486: idx=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[0l]=0u (0x0)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=3u (0x3)
  483: s.seq[23l].val[3l]=1u (0x1)
  484: val=1u (0x1)
  486: idx=0u (0x0)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[0l]=1u (0x1)
  488: taken.arr[1l]=1u (0x1)
  488: taken.arr[2l]=1u (0x1)
  488: taken.arr[3l]=1u (0x1)
  482: j=4u (0x4)
  477: i=24u (0x18)
  493: i=0u (0x0)
  494: j=0u (0x0)
  495: s.seq[0l].probs.frac[0l].num=0u (0x0)
  496: s.seq[0l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[0l].probs.frac[1l].num=0u (0x0)
  496: s.seq[0l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[0l].probs.frac[2l].num=0u (0x0)
  496: s.seq[0l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[0l].probs.frac[3l].num=0u (0x0)
  496: s.seq[0l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=1u (0x1)
  494: j=0u (0x0)
  495: s.seq[1l].probs.frac[0l].num=0u (0x0)
  496: s.seq[1l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[1l].probs.frac[1l].num=0u (0x0)
  496: s.seq[1l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[1l].probs.frac[2l].num=0u (0x0)
  496: s.seq[1l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[1l].probs.frac[3l].num=0u (0x0)
  496: s.seq[1l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=2u (0x2)
  494: j=0u (0x0)
  495: s.seq[2l].probs.frac[0l].num=0u (0x0)
  496: s.seq[2l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[2l].probs.frac[1l].num=0u (0x0)
  496: s.seq[2l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[2l].probs.frac[2l].num=0u (0x0)
  496: s.seq[2l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[2l].probs.frac[3l].num=0u (0x0)
  496: s.seq[2l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=3u (0x3)
  494: j=0u (0x0)
  495: s.seq[3l].probs.frac[0l].num=0u (0x0)
  496: s.seq[3l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[3l].probs.frac[1l].num=0u (0x0)
  496: s.seq[3l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[3l].probs.frac[2l].num=0u (0x0)
  496: s.seq[3l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[3l].probs.frac[3l].num=0u (0x0)
  496: s.seq[3l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=4u (0x4)
  494: j=0u (0x0)
  495: s.seq[4l].probs.frac[0l].num=0u (0x0)
  496: s.seq[4l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[4l].probs.frac[1l].num=0u (0x0)
  496: s.seq[4l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[4l].probs.frac[2l].num=0u (0x0)
  496: s.seq[4l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[4l].probs.frac[3l].num=0u (0x0)
  496: s.seq[4l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=5u (0x5)
  494: j=0u (0x0)
  495: s.seq[5l].probs.frac[0l].num=0u (0x0)
  496: s.seq[5l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[5l].probs.frac[1l].num=0u (0x0)
  496: s.seq[5l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[5l].probs.frac[2l].num=0u (0x0)
  496: s.seq[5l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[5l].probs.frac[3l].num=0u (0x0)
  496: s.seq[5l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=6u (0x6)
  494: j=0u (0x0)
  495: s.seq[6l].probs.frac[0l].num=0u (0x0)
  496: s.seq[6l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[6l].probs.frac[1l].num=0u (0x0)
  496: s.seq[6l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[6l].probs.frac[2l].num=0u (0x0)
  496: s.seq[6l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[6l].probs.frac[3l].num=0u (0x0)
  496: s.seq[6l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=7u (0x7)
  494: j=0u (0x0)
  495: s.seq[7l].probs.frac[0l].num=0u (0x0)
  496: s.seq[7l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[7l].probs.frac[1l].num=0u (0x0)
  496: s.seq[7l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[7l].probs.frac[2l].num=0u (0x0)
  496: s.seq[7l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[7l].probs.frac[3l].num=0u (0x0)
  496: s.seq[7l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=8u (0x8)
  494: j=0u (0x0)
  495: s.seq[8l].probs.frac[0l].num=0u (0x0)
  496: s.seq[8l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[8l].probs.frac[1l].num=0u (0x0)
  496: s.seq[8l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[8l].probs.frac[2l].num=0u (0x0)
  496: s.seq[8l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[8l].probs.frac[3l].num=0u (0x0)
  496: s.seq[8l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=9u (0x9)
  494: j=0u (0x0)
  495: s.seq[9l].probs.frac[0l].num=0u (0x0)
  496: s.seq[9l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[9l].probs.frac[1l].num=0u (0x0)
  496: s.seq[9l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[9l].probs.frac[2l].num=0u (0x0)
  496: s.seq[9l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[9l].probs.frac[3l].num=0u (0x0)
  496: s.seq[9l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=10u (0xA)
  494: j=0u (0x0)
  495: s.seq[10l].probs.frac[0l].num=0u (0x0)
  496: s.seq[10l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[10l].probs.frac[1l].num=0u (0x0)
  496: s.seq[10l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[10l].probs.frac[2l].num=0u (0x0)
  496: s.seq[10l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[10l].probs.frac[3l].num=0u (0x0)
  496: s.seq[10l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=11u (0xB)
  494: j=0u (0x0)
  495: s.seq[11l].probs.frac[0l].num=0u (0x0)
  496: s.seq[11l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[11l].probs.frac[1l].num=0u (0x0)
  496: s.seq[11l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[11l].probs.frac[2l].num=0u (0x0)
  496: s.seq[11l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[11l].probs.frac[3l].num=0u (0x0)
  496: s.seq[11l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=12u (0xC)
  494: j=0u (0x0)
  495: s.seq[12l].probs.frac[0l].num=0u (0x0)
  496: s.seq[12l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[12l].probs.frac[1l].num=0u (0x0)
  496: s.seq[12l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[12l].probs.frac[2l].num=0u (0x0)
  496: s.seq[12l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[12l].probs.frac[3l].num=0u (0x0)
  496: s.seq[12l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=13u (0xD)
  494: j=0u (0x0)
  495: s.seq[13l].probs.frac[0l].num=0u (0x0)
  496: s.seq[13l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[13l].probs.frac[1l].num=0u (0x0)
  496: s.seq[13l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[13l].probs.frac[2l].num=0u (0x0)
  496: s.seq[13l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[13l].probs.frac[3l].num=0u (0x0)
  496: s.seq[13l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=14u (0xE)
  494: j=0u (0x0)
  495: s.seq[14l].probs.frac[0l].num=0u (0x0)
  496: s.seq[14l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[14l].probs.frac[1l].num=0u (0x0)
  496: s.seq[14l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[14l].probs.frac[2l].num=0u (0x0)
  496: s.seq[14l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[14l].probs.frac[3l].num=0u (0x0)
  496: s.seq[14l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=15u (0xF)
  494: j=0u (0x0)
  495: s.seq[15l].probs.frac[0l].num=0u (0x0)
  496: s.seq[15l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[15l].probs.frac[1l].num=0u (0x0)
  496: s.seq[15l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[15l].probs.frac[2l].num=0u (0x0)
  496: s.seq[15l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[15l].probs.frac[3l].num=0u (0x0)
  496: s.seq[15l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=16u (0x10)
  494: j=0u (0x0)
  495: s.seq[16l].probs.frac[0l].num=0u (0x0)
  496: s.seq[16l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[16l].probs.frac[1l].num=0u (0x0)
  496: s.seq[16l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[16l].probs.frac[2l].num=0u (0x0)
  496: s.seq[16l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[16l].probs.frac[3l].num=0u (0x0)
  496: s.seq[16l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=17u (0x11)
  494: j=0u (0x0)
  495: s.seq[17l].probs.frac[0l].num=0u (0x0)
  496: s.seq[17l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[17l].probs.frac[1l].num=0u (0x0)
  496: s.seq[17l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[17l].probs.frac[2l].num=0u (0x0)
  496: s.seq[17l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[17l].probs.frac[3l].num=0u (0x0)
  496: s.seq[17l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=18u (0x12)
  494: j=0u (0x0)
  495: s.seq[18l].probs.frac[0l].num=0u (0x0)
  496: s.seq[18l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[18l].probs.frac[1l].num=0u (0x0)
  496: s.seq[18l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[18l].probs.frac[2l].num=0u (0x0)
  496: s.seq[18l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[18l].probs.frac[3l].num=0u (0x0)
  496: s.seq[18l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=19u (0x13)
  494: j=0u (0x0)
  495: s.seq[19l].probs.frac[0l].num=0u (0x0)
  496: s.seq[19l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[19l].probs.frac[1l].num=0u (0x0)
  496: s.seq[19l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[19l].probs.frac[2l].num=0u (0x0)
  496: s.seq[19l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[19l].probs.frac[3l].num=0u (0x0)
  496: s.seq[19l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=20u (0x14)
  494: j=0u (0x0)
  495: s.seq[20l].probs.frac[0l].num=0u (0x0)
  496: s.seq[20l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[20l].probs.frac[1l].num=0u (0x0)
  496: s.seq[20l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[20l].probs.frac[2l].num=0u (0x0)
  496: s.seq[20l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[20l].probs.frac[3l].num=0u (0x0)
  496: s.seq[20l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=21u (0x15)
  494: j=0u (0x0)
  495: s.seq[21l].probs.frac[0l].num=0u (0x0)
  496: s.seq[21l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[21l].probs.frac[1l].num=0u (0x0)
  496: s.seq[21l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[21l].probs.frac[2l].num=0u (0x0)
  496: s.seq[21l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[21l].probs.frac[3l].num=0u (0x0)
  496: s.seq[21l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=22u (0x16)
  494: j=0u (0x0)
  495: s.seq[22l].probs.frac[0l].num=0u (0x0)
  496: s.seq[22l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[22l].probs.frac[1l].num=0u (0x0)
  496: s.seq[22l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[22l].probs.frac[2l].num=0u (0x0)
  496: s.seq[22l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[22l].probs.frac[3l].num=0u (0x0)
  496: s.seq[22l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=23u (0x17)
  494: j=0u (0x0)
  495: s.seq[23l].probs.frac[0l].num=0u (0x0)
  496: s.seq[23l].probs.frac[0l].den=1u (0x1)
  494: j=1u (0x1)
  495: s.seq[23l].probs.frac[1l].num=0u (0x0)
  496: s.seq[23l].probs.frac[1l].den=1u (0x1)
  494: j=2u (0x2)
  495: s.seq[23l].probs.frac[2l].num=0u (0x0)
  496: s.seq[23l].probs.frac[2l].den=1u (0x1)
  494: j=3u (0x3)
  495: s.seq[23l].probs.frac[3l].num=0u (0x0)
  496: s.seq[23l].probs.frac[3l].den=1u (0x1)
  494: j=4u (0x4)
  493: i=24u (0x18)
  500: i=1u (0x1)
  501: checked=0u (0x0)
  502: last=0u (0x0)
  503: j=0u (0x0)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=4u (0x4)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=2u (0x2)
  501: checked=0u (0x0)
  502: last=1u (0x1)
  503: j=0u (0x0)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=4u (0x4)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=3u (0x3)
  501: checked=0u (0x0)
  502: last=2u (0x2)
  503: j=0u (0x0)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=2u (0x2)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=4u (0x4)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=4u (0x4)
  501: checked=0u (0x0)
  502: last=3u (0x3)
  503: j=0u (0x0)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=4u (0x4)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=5u (0x5)
  501: checked=0u (0x0)
  502: last=4u (0x4)
  503: j=0u (0x0)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=3u (0x3)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=6u (0x6)
  501: checked=0u (0x0)
  502: last=5u (0x5)
  503: j=0u (0x0)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=1u (0x1)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=2u (0x2)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=7u (0x7)
  501: checked=0u (0x0)
  502: last=6u (0x6)
  503: j=0u (0x0)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=4u (0x4)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=8u (0x8)
  501: checked=0u (0x0)
  502: last=7u (0x7)
  503: j=0u (0x0)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=1u (0x1)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=9u (0x9)
  501: checked=0u (0x0)
  502: last=8u (0x8)
  503: j=0u (0x0)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=1u (0x1)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=10u (0xA)
  501: checked=0u (0x0)
  502: last=9u (0x9)
  503: j=0u (0x0)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=1u (0x1)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=11u (0xB)
  501: checked=0u (0x0)
  502: last=10u (0xA)
  503: j=0u (0x0)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=1u (0x1)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=3u (0x3)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=12u (0xC)
  501: checked=0u (0x0)
  502: last=11u (0xB)
  503: j=0u (0x0)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=1u (0x1)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=3u (0x3)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=1u (0x1)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=13u (0xD)
  501: checked=0u (0x0)
  502: last=12u (0xC)
  503: j=0u (0x0)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=2u (0x2)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=4u (0x4)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=14u (0xE)
  501: checked=0u (0x0)
  502: last=13u (0xD)
  503: j=0u (0x0)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=2u (0x2)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=15u (0xF)
  501: checked=0u (0x0)
  502: last=14u (0xE)
  503: j=0u (0x0)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=1u (0x1)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=16u (0x10)
  501: checked=0u (0x0)
  502: last=15u (0xF)
  503: j=0u (0x0)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=2u (0x2)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=17u (0x11)
  501: checked=0u (0x0)
  502: last=16u (0x10)
  503: j=0u (0x0)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=2u (0x2)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=18u (0x12)
  501: checked=0u (0x0)
  502: last=17u (0x11)
  503: j=0u (0x0)
  505: a=3u (0x3)
  506: f=4u (0x4)
  507: checked=1u (0x1)
  503: j=1u (0x1)
  505: a=4u (0x4)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=1u (0x1)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=19u (0x13)
  501: checked=0u (0x0)
  502: last=18u (0x12)
  503: j=0u (0x0)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=1u (0x1)
  506: f=1u (0x1)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=3u (0x3)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=20u (0x14)
  501: checked=0u (0x0)
  502: last=19u (0x13)
  503: j=0u (0x0)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=3u (0x3)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=21u (0x15)
  501: checked=0u (0x0)
  502: last=20u (0x14)
  503: j=0u (0x0)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=2u (0x2)
  506: f=2u (0x2)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=1u (0x1)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=3u (0x3)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=22u (0x16)
  501: checked=0u (0x0)
  502: last=21u (0x15)
  503: j=0u (0x0)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=2u (0x2)
  506: f=3u (0x3)
  507: checked=1u (0x1)
  503: j=2u (0x2)
  505: a=3u (0x3)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=23u (0x17)
  501: checked=0u (0x0)
  502: last=22u (0x16)
  503: j=0u (0x0)
  505: a=4u (0x4)
  506: f=4u (0x4)
  507: checked=0u (0x0)
  503: j=1u (0x1)
  505: a=3u (0x3)
  506: f=3u (0x3)
  507: checked=0u (0x0)
  503: j=2u (0x2)
  505: a=1u (0x1)
  506: f=2u (0x2)
  507: checked=1u (0x1)
  503: j=3u (0x3)
  505: a=2u (0x2)
  506: f=1u (0x1)
  507: checked=1u (0x1)
  503: j=4u (0x4)
  500: i=24u (0x18)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].val[0l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].val[1l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].val[2l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].val[3l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[0l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].val[0l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].val[1l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].val[2l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].val[3l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[1l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].val[0l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].val[1l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].val[2l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].val[3l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[2l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].val[0l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].val[1l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].val[2l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].val[3l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[3l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].val[0l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].val[1l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].val[2l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].val[3l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[4l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].val[0l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].val[1l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].val[2l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].val[3l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[5l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].val[0l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].val[1l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].val[2l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].val[3l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[6l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].val[0l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].val[1l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].val[2l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].val[3l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[7l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].val[0l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].val[1l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].val[2l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].val[3l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[8l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].val[0l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].val[1l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].val[2l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].val[3l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[9l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].val[0l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].val[1l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].val[2l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].val[3l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[10l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].val[0l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].val[1l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].val[2l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].val[3l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[11l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].val[0l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].val[1l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].val[2l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].val[3l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[12l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].val[0l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].val[1l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].val[2l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].val[3l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[13l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].val[0l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].val[1l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].val[2l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].val[3l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[14l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].val[0l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].val[1l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].val[2l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].val[3l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[15l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].val[0l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].val[1l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].val[2l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].val[3l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[16l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].val[0l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].val[1l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].val[2l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].val[3l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[17l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].val[0l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].val[1l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].val[2l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].val[3l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[18l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].val[0l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].val[1l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].val[2l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].val[3l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[19l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].val[0l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].val[1l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].val[2l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].val[3l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[20l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].val[0l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].val[1l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].val[2l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].val[3l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[21l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].val[0l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].val[1l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].val[2l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].val[3l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[22l].probs.frac[3l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].val[0l]=4u (0x4)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].val[1l]=3u (0x3)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].val[2l]=2u (0x2)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].val[3l]=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[0l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[0l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[1l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[1l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[2l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[2l].den=1u (0x1)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[3l].num=0u (0x0)
  512: goto_symex$$return_value$$getStateWithAllPermutations.seq[23l].probs.frac[3l].den=1u (0x1)
↵
  1155: stateWithAllPermutations.seq={ { .val={ 1u, 2u, 3u, 4u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 4u, 3u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 3u, 2u, 4u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 3u, 4u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 4u, 2u, 3u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 4u, 3u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 3u, 4u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 4u, 3u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 3u, 1u, 4u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 3u, 4u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 4u, 1u, 3u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 4u, 3u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 3u, 1u, 2u, 4u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 3u, 1u, 4u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 3u, 2u, 1u, 4u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 3u, 2u, 4u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 3u, 4u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 3u, 4u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 4u, 1u, 2u, 3u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 4u, 1u, 3u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 4u, 2u, 1u, 3u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 4u, 2u, 3u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 4u, 3u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 4u, 3u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x2, 0x3, 0x4 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x4, 0x3 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x3, 0x2, 0x4 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x3, 0x4, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x4, 0x2, 0x3 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x4, 0x3, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x3, 0x4 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x4, 0x3 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x3, 0x1, 0x4 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x3, 0x4, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x4, 0x1, 0x3 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x4, 0x3, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x3, 0x1, 0x2, 0x4 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x3, 0x1, 0x4, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x3, 0x2, 0x1, 0x4 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x3, 0x2, 0x4, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x3, 0x4, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x3, 0x4, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x4, 0x1, 0x2, 0x3 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x4, 0x1, 0x3, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x4, 0x2, 0x1, 0x3 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x4, 0x2, 0x3, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x4, 0x3, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x4, 0x3, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  1155: stateWithAllPermutations.seq[0l].val[0l]=1u (0x1)
  1155: stateWithAllPermutations.seq[0l].val[1l]=2u (0x2)
  1155: stateWithAllPermutations.seq[0l].val[2l]=3u (0x3)
  1155: stateWithAllPermutations.seq[0l].val[3l]=4u (0x4)
  1155: stateWithAllPermutations.seq[0l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[0l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[0l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[0l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[0l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[0l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[0l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[0l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[1l].val[0l]=1u (0x1)
  1155: stateWithAllPermutations.seq[1l].val[1l]=2u (0x2)
  1155: stateWithAllPermutations.seq[1l].val[2l]=4u (0x4)
  1155: stateWithAllPermutations.seq[1l].val[3l]=3u (0x3)
  1155: stateWithAllPermutations.seq[1l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[1l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[1l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[1l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[1l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[1l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[1l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[1l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[2l].val[0l]=1u (0x1)
  1155: stateWithAllPermutations.seq[2l].val[1l]=3u (0x3)
  1155: stateWithAllPermutations.seq[2l].val[2l]=2u (0x2)
  1155: stateWithAllPermutations.seq[2l].val[3l]=4u (0x4)
  1155: stateWithAllPermutations.seq[2l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[2l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[2l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[2l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[2l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[2l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[2l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[2l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[3l].val[0l]=1u (0x1)
  1155: stateWithAllPermutations.seq[3l].val[1l]=3u (0x3)
  1155: stateWithAllPermutations.seq[3l].val[2l]=4u (0x4)
  1155: stateWithAllPermutations.seq[3l].val[3l]=2u (0x2)
  1155: stateWithAllPermutations.seq[3l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[3l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[3l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[3l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[3l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[3l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[3l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[3l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[4l].val[0l]=1u (0x1)
  1155: stateWithAllPermutations.seq[4l].val[1l]=4u (0x4)
  1155: stateWithAllPermutations.seq[4l].val[2l]=2u (0x2)
  1155: stateWithAllPermutations.seq[4l].val[3l]=3u (0x3)
  1155: stateWithAllPermutations.seq[4l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[4l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[4l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[4l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[4l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[4l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[4l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[4l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[5l].val[0l]=1u (0x1)
  1155: stateWithAllPermutations.seq[5l].val[1l]=4u (0x4)
  1155: stateWithAllPermutations.seq[5l].val[2l]=3u (0x3)
  1155: stateWithAllPermutations.seq[5l].val[3l]=2u (0x2)
  1155: stateWithAllPermutations.seq[5l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[5l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[5l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[5l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[5l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[5l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[5l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[5l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[6l].val[0l]=2u (0x2)
  1155: stateWithAllPermutations.seq[6l].val[1l]=1u (0x1)
  1155: stateWithAllPermutations.seq[6l].val[2l]=3u (0x3)
  1155: stateWithAllPermutations.seq[6l].val[3l]=4u (0x4)
  1155: stateWithAllPermutations.seq[6l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[6l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[6l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[6l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[6l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[6l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[6l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[6l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[7l].val[0l]=2u (0x2)
  1155: stateWithAllPermutations.seq[7l].val[1l]=1u (0x1)
  1155: stateWithAllPermutations.seq[7l].val[2l]=4u (0x4)
  1155: stateWithAllPermutations.seq[7l].val[3l]=3u (0x3)
  1155: stateWithAllPermutations.seq[7l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[7l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[7l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[7l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[7l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[7l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[7l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[7l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[8l].val[0l]=2u (0x2)
  1155: stateWithAllPermutations.seq[8l].val[1l]=3u (0x3)
  1155: stateWithAllPermutations.seq[8l].val[2l]=1u (0x1)
  1155: stateWithAllPermutations.seq[8l].val[3l]=4u (0x4)
  1155: stateWithAllPermutations.seq[8l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[8l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[8l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[8l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[8l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[8l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[8l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[8l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[9l].val[0l]=2u (0x2)
  1155: stateWithAllPermutations.seq[9l].val[1l]=3u (0x3)
  1155: stateWithAllPermutations.seq[9l].val[2l]=4u (0x4)
  1155: stateWithAllPermutations.seq[9l].val[3l]=1u (0x1)
  1155: stateWithAllPermutations.seq[9l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[9l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[9l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[9l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[9l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[9l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[9l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[9l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[10l].val[0l]=2u (0x2)
  1155: stateWithAllPermutations.seq[10l].val[1l]=4u (0x4)
  1155: stateWithAllPermutations.seq[10l].val[2l]=1u (0x1)
  1155: stateWithAllPermutations.seq[10l].val[3l]=3u (0x3)
  1155: stateWithAllPermutations.seq[10l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[10l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[10l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[10l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[10l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[10l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[10l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[10l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[11l].val[0l]=2u (0x2)
  1155: stateWithAllPermutations.seq[11l].val[1l]=4u (0x4)
  1155: stateWithAllPermutations.seq[11l].val[2l]=3u (0x3)
  1155: stateWithAllPermutations.seq[11l].val[3l]=1u (0x1)
  1155: stateWithAllPermutations.seq[11l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[11l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[11l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[11l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[11l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[11l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[11l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[11l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[12l].val[0l]=3u (0x3)
  1155: stateWithAllPermutations.seq[12l].val[1l]=1u (0x1)
  1155: stateWithAllPermutations.seq[12l].val[2l]=2u (0x2)
  1155: stateWithAllPermutations.seq[12l].val[3l]=4u (0x4)
  1155: stateWithAllPermutations.seq[12l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[12l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[12l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[12l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[12l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[12l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[12l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[12l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[13l].val[0l]=3u (0x3)
  1155: stateWithAllPermutations.seq[13l].val[1l]=1u (0x1)
  1155: stateWithAllPermutations.seq[13l].val[2l]=4u (0x4)
  1155: stateWithAllPermutations.seq[13l].val[3l]=2u (0x2)
  1155: stateWithAllPermutations.seq[13l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[13l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[13l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[13l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[13l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[13l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[13l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[13l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[14l].val[0l]=3u (0x3)
  1155: stateWithAllPermutations.seq[14l].val[1l]=2u (0x2)
  1155: stateWithAllPermutations.seq[14l].val[2l]=1u (0x1)
  1155: stateWithAllPermutations.seq[14l].val[3l]=4u (0x4)
  1155: stateWithAllPermutations.seq[14l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[14l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[14l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[14l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[14l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[14l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[14l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[14l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[15l].val[0l]=3u (0x3)
  1155: stateWithAllPermutations.seq[15l].val[1l]=2u (0x2)
  1155: stateWithAllPermutations.seq[15l].val[2l]=4u (0x4)
  1155: stateWithAllPermutations.seq[15l].val[3l]=1u (0x1)
  1155: stateWithAllPermutations.seq[15l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[15l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[15l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[15l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[15l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[15l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[15l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[15l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[16l].val[0l]=3u (0x3)
  1155: stateWithAllPermutations.seq[16l].val[1l]=4u (0x4)
  1155: stateWithAllPermutations.seq[16l].val[2l]=1u (0x1)
  1155: stateWithAllPermutations.seq[16l].val[3l]=2u (0x2)
  1155: stateWithAllPermutations.seq[16l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[16l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[16l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[16l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[16l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[16l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[16l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[16l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[17l].val[0l]=3u (0x3)
  1155: stateWithAllPermutations.seq[17l].val[1l]=4u (0x4)
  1155: stateWithAllPermutations.seq[17l].val[2l]=2u (0x2)
  1155: stateWithAllPermutations.seq[17l].val[3l]=1u (0x1)
  1155: stateWithAllPermutations.seq[17l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[17l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[17l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[17l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[17l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[17l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[17l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[17l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[18l].val[0l]=4u (0x4)
  1155: stateWithAllPermutations.seq[18l].val[1l]=1u (0x1)
  1155: stateWithAllPermutations.seq[18l].val[2l]=2u (0x2)
  1155: stateWithAllPermutations.seq[18l].val[3l]=3u (0x3)
  1155: stateWithAllPermutations.seq[18l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[18l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[18l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[18l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[18l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[18l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[18l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[18l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[19l].val[0l]=4u (0x4)
  1155: stateWithAllPermutations.seq[19l].val[1l]=1u (0x1)
  1155: stateWithAllPermutations.seq[19l].val[2l]=3u (0x3)
  1155: stateWithAllPermutations.seq[19l].val[3l]=2u (0x2)
  1155: stateWithAllPermutations.seq[19l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[19l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[19l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[19l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[19l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[19l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[19l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[19l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[20l].val[0l]=4u (0x4)
  1155: stateWithAllPermutations.seq[20l].val[1l]=2u (0x2)
  1155: stateWithAllPermutations.seq[20l].val[2l]=1u (0x1)
  1155: stateWithAllPermutations.seq[20l].val[3l]=3u (0x3)
  1155: stateWithAllPermutations.seq[20l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[20l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[20l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[20l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[20l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[20l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[20l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[20l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[21l].val[0l]=4u (0x4)
  1155: stateWithAllPermutations.seq[21l].val[1l]=2u (0x2)
  1155: stateWithAllPermutations.seq[21l].val[2l]=3u (0x3)
  1155: stateWithAllPermutations.seq[21l].val[3l]=1u (0x1)
  1155: stateWithAllPermutations.seq[21l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[21l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[21l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[21l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[21l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[21l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[21l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[21l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[22l].val[0l]=4u (0x4)
  1155: stateWithAllPermutations.seq[22l].val[1l]=3u (0x3)
  1155: stateWithAllPermutations.seq[22l].val[2l]=1u (0x1)
  1155: stateWithAllPermutations.seq[22l].val[3l]=2u (0x2)
  1155: stateWithAllPermutations.seq[22l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[22l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[22l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[22l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[22l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[22l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[22l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[22l].probs.frac[3l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[23l].val[0l]=4u (0x4)
  1155: stateWithAllPermutations.seq[23l].val[1l]=3u (0x3)
  1155: stateWithAllPermutations.seq[23l].val[2l]=2u (0x2)
  1155: stateWithAllPermutations.seq[23l].val[3l]=1u (0x1)
  1155: stateWithAllPermutations.seq[23l].probs.frac[0l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[23l].probs.frac[0l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[23l].probs.frac[1l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[23l].probs.frac[1l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[23l].probs.frac[2l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[23l].probs.frac[2l].den=1u (0x1)
  1155: stateWithAllPermutations.seq[23l].probs.frac[3l].num=0u (0x0)
  1155: stateWithAllPermutations.seq[23l].probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:1158 performActions({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1158: s.seq[0l].val[0l]=1u (0x1)
  1158: s.seq[0l].val[1l]=1u (0x1)
  1158: s.seq[0l].val[2l]=2u (0x2)
  1158: s.seq[0l].val[3l]=2u (0x2)
  1158: s.seq[0l].probs.frac[0l].num=0u (0x0)
  1158: s.seq[0l].probs.frac[0l].den=1u (0x1)
  1158: s.seq[0l].probs.frac[1l].num=0u (0x0)
  1158: s.seq[0l].probs.frac[1l].den=1u (0x1)
  1158: s.seq[0l].probs.frac[2l].num=0u (0x0)
  1158: s.seq[0l].probs.frac[2l].den=1u (0x1)
  1158: s.seq[0l].probs.frac[3l].num=0u (0x0)
  1158: s.seq[0l].probs.frac[3l].den=1u (0x1)
  1158: s.seq[1l].val[0l]=1u (0x1)
  1158: s.seq[1l].val[1l]=2u (0x2)
  1158: s.seq[1l].val[2l]=1u (0x1)
  1158: s.seq[1l].val[3l]=2u (0x2)
  1158: s.seq[1l].probs.frac[0l].num=1u (0x1)
  1158: s.seq[1l].probs.frac[0l].den=1u (0x1)
  1158: s.seq[1l].probs.frac[1l].num=0u (0x0)
  1158: s.seq[1l].probs.frac[1l].den=1u (0x1)
  1158: s.seq[1l].probs.frac[2l].num=0u (0x0)
  1158: s.seq[1l].probs.frac[2l].den=1u (0x1)
  1158: s.seq[1l].probs.frac[3l].num=0u (0x0)
  1158: s.seq[1l].probs.frac[3l].den=1u (0x1)
  1158: s.seq[2l].val[0l]=1u (0x1)
  1158: s.seq[2l].val[1l]=2u (0x2)
  1158: s.seq[2l].val[2l]=2u (0x2)
  1158: s.seq[2l].val[3l]=1u (0x1)
  1158: s.seq[2l].probs.frac[0l].num=0u (0x0)
  1158: s.seq[2l].probs.frac[0l].den=1u (0x1)
  1158: s.seq[2l].probs.frac[1l].num=1u (0x1)
  1158: s.seq[2l].probs.frac[1l].den=1u (0x1)
  1158: s.seq[2l].probs.frac[2l].num=0u (0x0)
  1158: s.seq[2l].probs.frac[2l].den=1u (0x1)
  1158: s.seq[2l].probs.frac[3l].num=0u (0x0)
  1158: s.seq[2l].probs.frac[3l].den=1u (0x1)
  1158: s.seq[3l].val[0l]=2u (0x2)
  1158: s.seq[3l].val[1l]=1u (0x1)
  1158: s.seq[3l].val[2l]=1u (0x1)
  1158: s.seq[3l].val[3l]=2u (0x2)
  1158: s.seq[3l].probs.frac[0l].num=0u (0x0)
  1158: s.seq[3l].probs.frac[0l].den=1u (0x1)
  1158: s.seq[3l].probs.frac[1l].num=0u (0x0)
  1158: s.seq[3l].probs.frac[1l].den=1u (0x1)
  1158: s.seq[3l].probs.frac[2l].num=1u (0x1)
  1158: s.seq[3l].probs.frac[2l].den=1u (0x1)
  1158: s.seq[3l].probs.frac[3l].num=0u (0x0)
  1158: s.seq[3l].probs.frac[3l].den=1u (0x1)
  1158: s.seq[4l].val[0l]=2u (0x2)
  1158: s.seq[4l].val[1l]=1u (0x1)
  1158: s.seq[4l].val[2l]=2u (0x2)
  1158: s.seq[4l].val[3l]=1u (0x1)
  1158: s.seq[4l].probs.frac[0l].num=0u (0x0)
  1158: s.seq[4l].probs.frac[0l].den=1u (0x1)
  1158: s.seq[4l].probs.frac[1l].num=0u (0x0)
  1158: s.seq[4l].probs.frac[1l].den=1u (0x1)
  1158: s.seq[4l].probs.frac[2l].num=0u (0x0)
  1158: s.seq[4l].probs.frac[2l].den=1u (0x1)
  1158: s.seq[4l].probs.frac[3l].num=1u (0x1)
  1158: s.seq[4l].probs.frac[3l].den=1u (0x1)
  1158: s.seq[5l].val[0l]=2u (0x2)
  1158: s.seq[5l].val[1l]=2u (0x2)
  1158: s.seq[5l].val[2l]=1u (0x1)
  1158: s.seq[5l].val[3l]=1u (0x1)
  1158: s.seq[5l].probs.frac[0l].num=0u (0x0)
  1158: s.seq[5l].probs.frac[0l].den=1u (0x1)
  1158: s.seq[5l].probs.frac[1l].num=0u (0x0)
  1158: s.seq[5l].probs.frac[1l].den=1u (0x1)
  1158: s.seq[5l].probs.frac[2l].num=0u (0x0)
  1158: s.seq[5l].probs.frac[2l].den=1u (0x1)
  1158: s.seq[5l].probs.frac[3l].num=0u (0x0)
  1158: s.seq[5l].probs.frac[3l].den=1u (0x1)
  983: result=0u (0x0)
  987: i=0u (0x0)
  989: reachableStates[0l].seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x1, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x1, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x1, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x1, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  989: reachableStates[0l].seq[0l].val[0l]=1u (0x1)
  989: reachableStates[0l].seq[0l].val[1l]=1u (0x1)
  989: reachableStates[0l].seq[0l].val[2l]=2u (0x2)
  989: reachableStates[0l].seq[0l].val[3l]=2u (0x2)
  989: reachableStates[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[0l].seq[1l].val[0l]=1u (0x1)
  989: reachableStates[0l].seq[1l].val[1l]=2u (0x2)
  989: reachableStates[0l].seq[1l].val[2l]=1u (0x1)
  989: reachableStates[0l].seq[1l].val[3l]=2u (0x2)
  989: reachableStates[0l].seq[1l].probs.frac[0l].num=1u (0x1)
  989: reachableStates[0l].seq[1l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[0l].seq[2l].val[0l]=1u (0x1)
  989: reachableStates[0l].seq[2l].val[1l]=2u (0x2)
  989: reachableStates[0l].seq[2l].val[2l]=2u (0x2)
  989: reachableStates[0l].seq[2l].val[3l]=1u (0x1)
  989: reachableStates[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[0l].seq[2l].probs.frac[1l].num=1u (0x1)
  989: reachableStates[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[0l].seq[3l].val[0l]=2u (0x2)
  989: reachableStates[0l].seq[3l].val[1l]=1u (0x1)
  989: reachableStates[0l].seq[3l].val[2l]=1u (0x1)
  989: reachableStates[0l].seq[3l].val[3l]=2u (0x2)
  989: reachableStates[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[0l].seq[3l].probs.frac[2l].num=1u (0x1)
  989: reachableStates[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[0l].seq[4l].val[0l]=2u (0x2)
  989: reachableStates[0l].seq[4l].val[1l]=1u (0x1)
  989: reachableStates[0l].seq[4l].val[2l]=2u (0x2)
  989: reachableStates[0l].seq[4l].val[3l]=1u (0x1)
  989: reachableStates[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[0l].seq[4l].probs.frac[3l].num=1u (0x1)
  989: reachableStates[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[0l].seq[5l].val[0l]=2u (0x2)
  989: reachableStates[0l].seq[5l].val[1l]=2u (0x2)
  989: reachableStates[0l].seq[5l].val[2l]=1u (0x1)
  989: reachableStates[0l].seq[5l].val[3l]=1u (0x1)
  989: reachableStates[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  987: i=1u (0x1)
  989: reachableStates[1l].seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x1, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x1, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x1, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x1, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  989: reachableStates[1l].seq[0l].val[0l]=1u (0x1)
  989: reachableStates[1l].seq[0l].val[1l]=1u (0x1)
  989: reachableStates[1l].seq[0l].val[2l]=2u (0x2)
  989: reachableStates[1l].seq[0l].val[3l]=2u (0x2)
  989: reachableStates[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[1l].seq[1l].val[0l]=1u (0x1)
  989: reachableStates[1l].seq[1l].val[1l]=2u (0x2)
  989: reachableStates[1l].seq[1l].val[2l]=1u (0x1)
  989: reachableStates[1l].seq[1l].val[3l]=2u (0x2)
  989: reachableStates[1l].seq[1l].probs.frac[0l].num=1u (0x1)
  989: reachableStates[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[1l].seq[2l].val[0l]=1u (0x1)
  989: reachableStates[1l].seq[2l].val[1l]=2u (0x2)
  989: reachableStates[1l].seq[2l].val[2l]=2u (0x2)
  989: reachableStates[1l].seq[2l].val[3l]=1u (0x1)
  989: reachableStates[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[1l].seq[2l].probs.frac[1l].num=1u (0x1)
  989: reachableStates[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[1l].seq[3l].val[0l]=2u (0x2)
  989: reachableStates[1l].seq[3l].val[1l]=1u (0x1)
  989: reachableStates[1l].seq[3l].val[2l]=1u (0x1)
  989: reachableStates[1l].seq[3l].val[3l]=2u (0x2)
  989: reachableStates[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[1l].seq[3l].probs.frac[2l].num=1u (0x1)
  989: reachableStates[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[1l].seq[4l].val[0l]=2u (0x2)
  989: reachableStates[1l].seq[4l].val[1l]=1u (0x1)
  989: reachableStates[1l].seq[4l].val[2l]=2u (0x2)
  989: reachableStates[1l].seq[4l].val[3l]=1u (0x1)
  989: reachableStates[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[1l].seq[4l].probs.frac[3l].num=1u (0x1)
  989: reachableStates[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[1l].seq[5l].val[0l]=2u (0x2)
  989: reachableStates[1l].seq[5l].val[1l]=2u (0x2)
  989: reachableStates[1l].seq[5l].val[2l]=1u (0x1)
  989: reachableStates[1l].seq[5l].val[3l]=1u (0x1)
  989: reachableStates[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  987: i=2u (0x2)
  989: reachableStates[2l].seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x1, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x1, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x1, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x1, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  989: reachableStates[2l].seq[0l].val[0l]=1u (0x1)
  989: reachableStates[2l].seq[0l].val[1l]=1u (0x1)
  989: reachableStates[2l].seq[0l].val[2l]=2u (0x2)
  989: reachableStates[2l].seq[0l].val[3l]=2u (0x2)
  989: reachableStates[2l].seq[0l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[2l].seq[0l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[2l].seq[0l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[2l].seq[0l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[2l].seq[0l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[2l].seq[0l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[2l].seq[0l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[2l].seq[0l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[2l].seq[1l].val[0l]=1u (0x1)
  989: reachableStates[2l].seq[1l].val[1l]=2u (0x2)
  989: reachableStates[2l].seq[1l].val[2l]=1u (0x1)
  989: reachableStates[2l].seq[1l].val[3l]=2u (0x2)
  989: reachableStates[2l].seq[1l].probs.frac[0l].num=1u (0x1)
  989: reachableStates[2l].seq[1l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[2l].seq[1l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[2l].seq[1l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[2l].seq[1l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[2l].seq[1l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[2l].seq[1l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[2l].seq[1l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[2l].seq[2l].val[0l]=1u (0x1)
  989: reachableStates[2l].seq[2l].val[1l]=2u (0x2)
  989: reachableStates[2l].seq[2l].val[2l]=2u (0x2)
  989: reachableStates[2l].seq[2l].val[3l]=1u (0x1)
  989: reachableStates[2l].seq[2l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[2l].seq[2l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[2l].seq[2l].probs.frac[1l].num=1u (0x1)
  989: reachableStates[2l].seq[2l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[2l].seq[2l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[2l].seq[2l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[2l].seq[2l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[2l].seq[2l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[2l].seq[3l].val[0l]=2u (0x2)
  989: reachableStates[2l].seq[3l].val[1l]=1u (0x1)
  989: reachableStates[2l].seq[3l].val[2l]=1u (0x1)
  989: reachableStates[2l].seq[3l].val[3l]=2u (0x2)
  989: reachableStates[2l].seq[3l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[2l].seq[3l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[2l].seq[3l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[2l].seq[3l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[2l].seq[3l].probs.frac[2l].num=1u (0x1)
  989: reachableStates[2l].seq[3l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[2l].seq[3l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[2l].seq[3l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[2l].seq[4l].val[0l]=2u (0x2)
  989: reachableStates[2l].seq[4l].val[1l]=1u (0x1)
  989: reachableStates[2l].seq[4l].val[2l]=2u (0x2)
  989: reachableStates[2l].seq[4l].val[3l]=1u (0x1)
  989: reachableStates[2l].seq[4l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[2l].seq[4l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[2l].seq[4l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[2l].seq[4l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[2l].seq[4l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[2l].seq[4l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[2l].seq[4l].probs.frac[3l].num=1u (0x1)
  989: reachableStates[2l].seq[4l].probs.frac[3l].den=1u (0x1)
  989: reachableStates[2l].seq[5l].val[0l]=2u (0x2)
  989: reachableStates[2l].seq[5l].val[1l]=2u (0x2)
  989: reachableStates[2l].seq[5l].val[2l]=1u (0x1)
  989: reachableStates[2l].seq[5l].val[3l]=1u (0x1)
  989: reachableStates[2l].seq[5l].probs.frac[0l].num=0u (0x0)
  989: reachableStates[2l].seq[5l].probs.frac[0l].den=1u (0x1)
  989: reachableStates[2l].seq[5l].probs.frac[1l].num=0u (0x0)
  989: reachableStates[2l].seq[5l].probs.frac[1l].den=1u (0x1)
  989: reachableStates[2l].seq[5l].probs.frac[2l].num=0u (0x0)
  989: reachableStates[2l].seq[5l].probs.frac[2l].den=1u (0x1)
  989: reachableStates[2l].seq[5l].probs.frac[3l].num=0u (0x0)
  989: reachableStates[2l].seq[5l].probs.frac[3l].den=1u (0x1)
  987: i=3u (0x3)
  992: i=0u (0x0)
  994: action=1u (0x1)
  998: next=1u (0x1)

↳ findTwoCardProtocolXOR.c:1040 applyShuffle({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1040: s.seq[0l].val[0l]=1u (0x1)
  1040: s.seq[0l].val[1l]=1u (0x1)
  1040: s.seq[0l].val[2l]=2u (0x2)
  1040: s.seq[0l].val[3l]=2u (0x2)
  1040: s.seq[0l].probs.frac[0l].num=0u (0x0)
  1040: s.seq[0l].probs.frac[0l].den=1u (0x1)
  1040: s.seq[0l].probs.frac[1l].num=0u (0x0)
  1040: s.seq[0l].probs.frac[1l].den=1u (0x1)
  1040: s.seq[0l].probs.frac[2l].num=0u (0x0)
  1040: s.seq[0l].probs.frac[2l].den=1u (0x1)
  1040: s.seq[0l].probs.frac[3l].num=0u (0x0)
  1040: s.seq[0l].probs.frac[3l].den=1u (0x1)
  1040: s.seq[1l].val[0l]=1u (0x1)
  1040: s.seq[1l].val[1l]=2u (0x2)
  1040: s.seq[1l].val[2l]=1u (0x1)
  1040: s.seq[1l].val[3l]=2u (0x2)
  1040: s.seq[1l].probs.frac[0l].num=1u (0x1)
  1040: s.seq[1l].probs.frac[0l].den=1u (0x1)
  1040: s.seq[1l].probs.frac[1l].num=0u (0x0)
  1040: s.seq[1l].probs.frac[1l].den=1u (0x1)
  1040: s.seq[1l].probs.frac[2l].num=0u (0x0)
  1040: s.seq[1l].probs.frac[2l].den=1u (0x1)
  1040: s.seq[1l].probs.frac[3l].num=0u (0x0)
  1040: s.seq[1l].probs.frac[3l].den=1u (0x1)
  1040: s.seq[2l].val[0l]=1u (0x1)
  1040: s.seq[2l].val[1l]=2u (0x2)
  1040: s.seq[2l].val[2l]=2u (0x2)
  1040: s.seq[2l].val[3l]=1u (0x1)
  1040: s.seq[2l].probs.frac[0l].num=0u (0x0)
  1040: s.seq[2l].probs.frac[0l].den=1u (0x1)
  1040: s.seq[2l].probs.frac[1l].num=1u (0x1)
  1040: s.seq[2l].probs.frac[1l].den=1u (0x1)
  1040: s.seq[2l].probs.frac[2l].num=0u (0x0)
  1040: s.seq[2l].probs.frac[2l].den=1u (0x1)
  1040: s.seq[2l].probs.frac[3l].num=0u (0x0)
  1040: s.seq[2l].probs.frac[3l].den=1u (0x1)
  1040: s.seq[3l].val[0l]=2u (0x2)
  1040: s.seq[3l].val[1l]=1u (0x1)
  1040: s.seq[3l].val[2l]=1u (0x1)
  1040: s.seq[3l].val[3l]=2u (0x2)
  1040: s.seq[3l].probs.frac[0l].num=0u (0x0)
  1040: s.seq[3l].probs.frac[0l].den=1u (0x1)
  1040: s.seq[3l].probs.frac[1l].num=0u (0x0)
  1040: s.seq[3l].probs.frac[1l].den=1u (0x1)
  1040: s.seq[3l].probs.frac[2l].num=1u (0x1)
  1040: s.seq[3l].probs.frac[2l].den=1u (0x1)
  1040: s.seq[3l].probs.frac[3l].num=0u (0x0)
  1040: s.seq[3l].probs.frac[3l].den=1u (0x1)
  1040: s.seq[4l].val[0l]=2u (0x2)
  1040: s.seq[4l].val[1l]=1u (0x1)
  1040: s.seq[4l].val[2l]=2u (0x2)
  1040: s.seq[4l].val[3l]=1u (0x1)
  1040: s.seq[4l].probs.frac[0l].num=0u (0x0)
  1040: s.seq[4l].probs.frac[0l].den=1u (0x1)
  1040: s.seq[4l].probs.frac[1l].num=0u (0x0)
  1040: s.seq[4l].probs.frac[1l].den=1u (0x1)
  1040: s.seq[4l].probs.frac[2l].num=0u (0x0)
  1040: s.seq[4l].probs.frac[2l].den=1u (0x1)
  1040: s.seq[4l].probs.frac[3l].num=1u (0x1)
  1040: s.seq[4l].probs.frac[3l].den=1u (0x1)
  1040: s.seq[5l].val[0l]=2u (0x2)
  1040: s.seq[5l].val[1l]=2u (0x2)
  1040: s.seq[5l].val[2l]=1u (0x1)
  1040: s.seq[5l].val[3l]=1u (0x1)
  1040: s.seq[5l].probs.frac[0l].num=0u (0x0)
  1040: s.seq[5l].probs.frac[0l].den=1u (0x1)
  1040: s.seq[5l].probs.frac[1l].num=0u (0x0)
  1040: s.seq[5l].probs.frac[1l].den=1u (0x1)
  1040: s.seq[5l].probs.frac[2l].num=0u (0x0)
  1040: s.seq[5l].probs.frac[2l].den=1u (0x1)
  1040: s.seq[5l].probs.frac[3l].num=0u (0x0)
  1040: s.seq[5l].probs.frac[3l].den=1u (0x1)
  787: permSetSize=4u (0x4)
  790: permutationSet={ { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u }, { 0u, 0u, 0u, 0u } } ({ { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 }, { 0x0, 0x0, 0x0, 0x0 } })
  790: permutationSet[0l][0l]=0u (0x0)
  790: permutationSet[0l][1l]=0u (0x0)
  790: permutationSet[0l][2l]=0u (0x0)
  790: permutationSet[0l][3l]=0u (0x0)
  790: permutationSet[1l][0l]=0u (0x0)
  790: permutationSet[1l][1l]=0u (0x0)
  790: permutationSet[1l][2l]=0u (0x0)
  790: permutationSet[1l][3l]=0u (0x0)
  790: permutationSet[2l][0l]=0u (0x0)
  790: permutationSet[2l][1l]=0u (0x0)
  790: permutationSet[2l][2l]=0u (0x0)
  790: permutationSet[2l][3l]=0u (0x0)
  790: permutationSet[3l][0l]=0u (0x0)
  790: permutationSet[3l][1l]=0u (0x0)
  790: permutationSet[3l][2l]=0u (0x0)
  790: permutationSet[3l][3l]=0u (0x0)
  790: permutationSet[4l][0l]=0u (0x0)
  790: permutationSet[4l][1l]=0u (0x0)
  790: permutationSet[4l][2l]=0u (0x0)
  790: permutationSet[4l][3l]=0u (0x0)
  790: permutationSet[5l][0l]=0u (0x0)
  790: permutationSet[5l][1l]=0u (0x0)
  790: permutationSet[5l][2l]=0u (0x0)
  790: permutationSet[5l][3l]=0u (0x0)
  790: permutationSet[6l][0l]=0u (0x0)
  790: permutationSet[6l][1l]=0u (0x0)
  790: permutationSet[6l][2l]=0u (0x0)
  790: permutationSet[6l][3l]=0u (0x0)
  790: permutationSet[7l][0l]=0u (0x0)
  790: permutationSet[7l][1l]=0u (0x0)
  790: permutationSet[7l][2l]=0u (0x0)
  790: permutationSet[7l][3l]=0u (0x0)
  790: permutationSet[8l][0l]=0u (0x0)
  790: permutationSet[8l][1l]=0u (0x0)
  790: permutationSet[8l][2l]=0u (0x0)
  790: permutationSet[8l][3l]=0u (0x0)
  790: permutationSet[9l][0l]=0u (0x0)
  790: permutationSet[9l][1l]=0u (0x0)
  790: permutationSet[9l][2l]=0u (0x0)
  790: permutationSet[9l][3l]=0u (0x0)
  790: permutationSet[10l][0l]=0u (0x0)
  790: permutationSet[10l][1l]=0u (0x0)
  790: permutationSet[10l][2l]=0u (0x0)
  790: permutationSet[10l][3l]=0u (0x0)
  790: permutationSet[11l][0l]=0u (0x0)
  790: permutationSet[11l][1l]=0u (0x0)
  790: permutationSet[11l][2l]=0u (0x0)
  790: permutationSet[11l][3l]=0u (0x0)
  790: permutationSet[12l][0l]=0u (0x0)
  790: permutationSet[12l][1l]=0u (0x0)
  790: permutationSet[12l][2l]=0u (0x0)
  790: permutationSet[12l][3l]=0u (0x0)
  790: permutationSet[13l][0l]=0u (0x0)
  790: permutationSet[13l][1l]=0u (0x0)
  790: permutationSet[13l][2l]=0u (0x0)
  790: permutationSet[13l][3l]=0u (0x0)
  790: permutationSet[14l][0l]=0u (0x0)
  790: permutationSet[14l][1l]=0u (0x0)
  790: permutationSet[14l][2l]=0u (0x0)
  790: permutationSet[14l][3l]=0u (0x0)
  790: permutationSet[15l][0l]=0u (0x0)
  790: permutationSet[15l][1l]=0u (0x0)
  790: permutationSet[15l][2l]=0u (0x0)
  790: permutationSet[15l][3l]=0u (0x0)
  790: permutationSet[16l][0l]=0u (0x0)
  790: permutationSet[16l][1l]=0u (0x0)
  790: permutationSet[16l][2l]=0u (0x0)
  790: permutationSet[16l][3l]=0u (0x0)
  790: permutationSet[17l][0l]=0u (0x0)
  790: permutationSet[17l][1l]=0u (0x0)
  790: permutationSet[17l][2l]=0u (0x0)
  790: permutationSet[17l][3l]=0u (0x0)
  790: permutationSet[18l][0l]=0u (0x0)
  790: permutationSet[18l][1l]=0u (0x0)
  790: permutationSet[18l][2l]=0u (0x0)
  790: permutationSet[18l][3l]=0u (0x0)
  790: permutationSet[19l][0l]=0u (0x0)
  790: permutationSet[19l][1l]=0u (0x0)
  790: permutationSet[19l][2l]=0u (0x0)
  790: permutationSet[19l][3l]=0u (0x0)
  790: permutationSet[20l][0l]=0u (0x0)
  790: permutationSet[20l][1l]=0u (0x0)
  790: permutationSet[20l][2l]=0u (0x0)
  790: permutationSet[20l][3l]=0u (0x0)
  790: permutationSet[21l][0l]=0u (0x0)
  790: permutationSet[21l][1l]=0u (0x0)
  790: permutationSet[21l][2l]=0u (0x0)
  790: permutationSet[21l][3l]=0u (0x0)
  790: permutationSet[22l][0l]=0u (0x0)
  790: permutationSet[22l][1l]=0u (0x0)
  790: permutationSet[22l][2l]=0u (0x0)
  790: permutationSet[22l][3l]=0u (0x0)
  790: permutationSet[23l][0l]=0u (0x0)
  790: permutationSet[23l][1l]=0u (0x0)
  790: permutationSet[23l][2l]=0u (0x0)
  790: permutationSet[23l][3l]=0u (0x0)
  791: takenPermutations={ 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 })
  791: takenPermutations[0l]=0u (0x0)
  791: takenPermutations[1l]=0u (0x0)
  791: takenPermutations[2l]=0u (0x0)
  791: takenPermutations[3l]=0u (0x0)
  791: takenPermutations[4l]=0u (0x0)
  791: takenPermutations[5l]=0u (0x0)
  791: takenPermutations[6l]=0u (0x0)
  791: takenPermutations[7l]=0u (0x0)
  791: takenPermutations[8l]=0u (0x0)
  791: takenPermutations[9l]=0u (0x0)
  791: takenPermutations[10l]=0u (0x0)
  791: takenPermutations[11l]=0u (0x0)
  791: takenPermutations[12l]=0u (0x0)
  791: takenPermutations[13l]=0u (0x0)
  791: takenPermutations[14l]=0u (0x0)
  791: takenPermutations[15l]=0u (0x0)
  791: takenPermutations[16l]=0u (0x0)
  791: takenPermutations[17l]=0u (0x0)
  791: takenPermutations[18l]=0u (0x0)
  791: takenPermutations[19l]=0u (0x0)
  791: takenPermutations[20l]=0u (0x0)
  791: takenPermutations[21l]=0u (0x0)
  791: takenPermutations[22l]=0u (0x0)
  791: takenPermutations[23l]=0u (0x0)
  797: lastChosenPermutationIndex=0u (0x0)
  798: i=0u (0x0)
  800: permIndex=0u (0x0)
  806: takenPermutations[0l]=1u (0x1)
  806: takenPermutations[0l]=1u (0x1)
  806: takenPermutations[1l]=0u (0x0)
  806: takenPermutations[2l]=0u (0x0)
  806: takenPermutations[3l]=0u (0x0)
  806: takenPermutations[4l]=0u (0x0)
  806: takenPermutations[5l]=0u (0x0)
  806: takenPermutations[6l]=0u (0x0)
  806: takenPermutations[7l]=0u (0x0)
  806: takenPermutations[8l]=0u (0x0)
  806: takenPermutations[9l]=0u (0x0)
  806: takenPermutations[10l]=0u (0x0)
  806: takenPermutations[11l]=0u (0x0)
  806: takenPermutations[12l]=0u (0x0)
  806: takenPermutations[13l]=0u (0x0)
  806: takenPermutations[14l]=0u (0x0)
  806: takenPermutations[15l]=0u (0x0)
  806: takenPermutations[16l]=0u (0x0)
  806: takenPermutations[17l]=0u (0x0)
  806: takenPermutations[18l]=0u (0x0)
  806: takenPermutations[19l]=0u (0x0)
  806: takenPermutations[20l]=0u (0x0)
  806: takenPermutations[21l]=0u (0x0)
  806: takenPermutations[22l]=0u (0x0)
  806: takenPermutations[23l]=0u (0x0)
  807: lastChosenPermutationIndex=0u (0x0)
  809: j=0u (0x0)
  810: permutationSet[0l][0l]=0u (0x0)
  809: j=1u (0x1)
  810: permutationSet[0l][1l]=1u (0x1)
  809: j=2u (0x2)
  810: permutationSet[0l][2l]=2u (0x2)
  809: j=3u (0x3)
  810: permutationSet[0l][3l]=3u (0x3)
  809: j=4u (0x4)
  798: i=1u (0x1)
  800: permIndex=7u (0x7)
  806: takenPermutations[7l]=1u (0x1)
  806: takenPermutations[0l]=1u (0x1)
  806: takenPermutations[1l]=0u (0x0)
  806: takenPermutations[2l]=0u (0x0)
  806: takenPermutations[3l]=0u (0x0)
  806: takenPermutations[4l]=0u (0x0)
  806: takenPermutations[5l]=0u (0x0)
  806: takenPermutations[6l]=0u (0x0)
  806: takenPermutations[7l]=1u (0x1)
  806: takenPermutations[8l]=0u (0x0)
  806: takenPermutations[9l]=0u (0x0)
  806: takenPermutations[10l]=0u (0x0)
  806: takenPermutations[11l]=0u (0x0)
  806: takenPermutations[12l]=0u (0x0)
  806: takenPermutations[13l]=0u (0x0)
  806: takenPermutations[14l]=0u (0x0)
  806: takenPermutations[15l]=0u (0x0)
  806: takenPermutations[16l]=0u (0x0)
  806: takenPermutations[17l]=0u (0x0)
  806: takenPermutations[18l]=0u (0x0)
  806: takenPermutations[19l]=0u (0x0)
  806: takenPermutations[20l]=0u (0x0)
  806: takenPermutations[21l]=0u (0x0)
  806: takenPermutations[22l]=0u (0x0)
  806: takenPermutations[23l]=0u (0x0)
  807: lastChosenPermutationIndex=7u (0x7)
  809: j=0u (0x0)
  810: permutationSet[1l][0l]=1u (0x1)
  809: j=1u (0x1)
  810: permutationSet[1l][1l]=0u (0x0)
  809: j=2u (0x2)
  810: permutationSet[1l][2l]=3u (0x3)
  809: j=3u (0x3)
  810: permutationSet[1l][3l]=2u (0x2)
  809: j=4u (0x4)
  798: i=2u (0x2)
  800: permIndex=16u (0x10)
  806: takenPermutations[16l]=1u (0x1)
  806: takenPermutations[0l]=1u (0x1)
  806: takenPermutations[1l]=0u (0x0)
  806: takenPermutations[2l]=0u (0x0)
  806: takenPermutations[3l]=0u (0x0)
  806: takenPermutations[4l]=0u (0x0)
  806: takenPermutations[5l]=0u (0x0)
  806: takenPermutations[6l]=0u (0x0)
  806: takenPermutations[7l]=1u (0x1)
  806: takenPermutations[8l]=0u (0x0)
  806: takenPermutations[9l]=0u (0x0)
  806: takenPermutations[10l]=0u (0x0)
  806: takenPermutations[11l]=0u (0x0)
  806: takenPermutations[12l]=0u (0x0)
  806: takenPermutations[13l]=0u (0x0)
  806: takenPermutations[14l]=0u (0x0)
  806: takenPermutations[15l]=0u (0x0)
  806: takenPermutations[16l]=1u (0x1)
  806: takenPermutations[17l]=0u (0x0)
  806: takenPermutations[18l]=0u (0x0)
  806: takenPermutations[19l]=0u (0x0)
  806: takenPermutations[20l]=0u (0x0)
  806: takenPermutations[21l]=0u (0x0)
  806: takenPermutations[22l]=0u (0x0)
  806: takenPermutations[23l]=0u (0x0)
  807: lastChosenPermutationIndex=16u (0x10)
  809: j=0u (0x0)
  810: permutationSet[2l][0l]=2u (0x2)
  809: j=1u (0x1)
  810: permutationSet[2l][1l]=3u (0x3)
  809: j=2u (0x2)
  810: permutationSet[2l][2l]=0u (0x0)
  809: j=3u (0x3)
  810: permutationSet[2l][3l]=1u (0x1)
  809: j=4u (0x4)
  798: i=3u (0x3)
  800: permIndex=23u (0x17)
  806: takenPermutations[23l]=1u (0x1)
  806: takenPermutations[0l]=1u (0x1)
  806: takenPermutations[1l]=0u (0x0)
  806: takenPermutations[2l]=0u (0x0)
  806: takenPermutations[3l]=0u (0x0)
  806: takenPermutations[4l]=0u (0x0)
  806: takenPermutations[5l]=0u (0x0)
  806: takenPermutations[6l]=0u (0x0)
  806: takenPermutations[7l]=1u (0x1)
  806: takenPermutations[8l]=0u (0x0)
  806: takenPermutations[9l]=0u (0x0)
  806: takenPermutations[10l]=0u (0x0)
  806: takenPermutations[11l]=0u (0x0)
  806: takenPermutations[12l]=0u (0x0)
  806: takenPermutations[13l]=0u (0x0)
  806: takenPermutations[14l]=0u (0x0)
  806: takenPermutations[15l]=0u (0x0)
  806: takenPermutations[16l]=1u (0x1)
  806: takenPermutations[17l]=0u (0x0)
  806: takenPermutations[18l]=0u (0x0)
  806: takenPermutations[19l]=0u (0x0)
  806: takenPermutations[20l]=0u (0x0)
  806: takenPermutations[21l]=0u (0x0)
  806: takenPermutations[22l]=0u (0x0)
  806: takenPermutations[23l]=1u (0x1)
  807: lastChosenPermutationIndex=23u (0x17)
  809: j=0u (0x0)
  810: permutationSet[3l][0l]=3u (0x3)
  809: j=1u (0x1)
  810: permutationSet[3l][1l]=2u (0x2)
  809: j=2u (0x2)
  810: permutationSet[3l][2l]=1u (0x1)
  809: j=3u (0x3)
  810: permutationSet[3l][3l]=0u (0x0)
  809: j=4u (0x4)
  798: i=4u (0x4)
  798: i=5u (0x5)
  798: i=6u (0x6)
  798: i=7u (0x7)
  798: i=8u (0x8)
  798: i=9u (0x9)
  798: i=10u (0xA)
  798: i=11u (0xB)
  798: i=12u (0xC)
  798: i=13u (0xD)
  798: i=14u (0xE)
  798: i=15u (0xF)
  798: i=16u (0x10)
  798: i=17u (0x11)
  798: i=18u (0x12)
  798: i=19u (0x13)
  798: i=20u (0x14)
  798: i=21u (0x15)
  798: i=22u (0x16)
  798: i=23u (0x17)
  798: i=24u (0x18)

↳ findTwoCardProtocolXOR.c:826 doShuffle({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } }, permutationSet!0@1, 4u)
  826: s.seq[0l].val[0l]=1u (0x1)
  826: s.seq[0l].val[1l]=1u (0x1)
  826: s.seq[0l].val[2l]=2u (0x2)
  826: s.seq[0l].val[3l]=2u (0x2)
  826: s.seq[0l].probs.frac[0l].num=0u (0x0)
  826: s.seq[0l].probs.frac[0l].den=1u (0x1)
  826: s.seq[0l].probs.frac[1l].num=0u (0x0)
  826: s.seq[0l].probs.frac[1l].den=1u (0x1)
  826: s.seq[0l].probs.frac[2l].num=0u (0x0)
  826: s.seq[0l].probs.frac[2l].den=1u (0x1)
  826: s.seq[0l].probs.frac[3l].num=0u (0x0)
  826: s.seq[0l].probs.frac[3l].den=1u (0x1)
  826: s.seq[1l].val[0l]=1u (0x1)
  826: s.seq[1l].val[1l]=2u (0x2)
  826: s.seq[1l].val[2l]=1u (0x1)
  826: s.seq[1l].val[3l]=2u (0x2)
  826: s.seq[1l].probs.frac[0l].num=1u (0x1)
  826: s.seq[1l].probs.frac[0l].den=1u (0x1)
  826: s.seq[1l].probs.frac[1l].num=0u (0x0)
  826: s.seq[1l].probs.frac[1l].den=1u (0x1)
  826: s.seq[1l].probs.frac[2l].num=0u (0x0)
  826: s.seq[1l].probs.frac[2l].den=1u (0x1)
  826: s.seq[1l].probs.frac[3l].num=0u (0x0)
  826: s.seq[1l].probs.frac[3l].den=1u (0x1)
  826: s.seq[2l].val[0l]=1u (0x1)
  826: s.seq[2l].val[1l]=2u (0x2)
  826: s.seq[2l].val[2l]=2u (0x2)
  826: s.seq[2l].val[3l]=1u (0x1)
  826: s.seq[2l].probs.frac[0l].num=0u (0x0)
  826: s.seq[2l].probs.frac[0l].den=1u (0x1)
  826: s.seq[2l].probs.frac[1l].num=1u (0x1)
  826: s.seq[2l].probs.frac[1l].den=1u (0x1)
  826: s.seq[2l].probs.frac[2l].num=0u (0x0)
  826: s.seq[2l].probs.frac[2l].den=1u (0x1)
  826: s.seq[2l].probs.frac[3l].num=0u (0x0)
  826: s.seq[2l].probs.frac[3l].den=1u (0x1)
  826: s.seq[3l].val[0l]=2u (0x2)
  826: s.seq[3l].val[1l]=1u (0x1)
  826: s.seq[3l].val[2l]=1u (0x1)
  826: s.seq[3l].val[3l]=2u (0x2)
  826: s.seq[3l].probs.frac[0l].num=0u (0x0)
  826: s.seq[3l].probs.frac[0l].den=1u (0x1)
  826: s.seq[3l].probs.frac[1l].num=0u (0x0)
  826: s.seq[3l].probs.frac[1l].den=1u (0x1)
  826: s.seq[3l].probs.frac[2l].num=1u (0x1)
  826: s.seq[3l].probs.frac[2l].den=1u (0x1)
  826: s.seq[3l].probs.frac[3l].num=0u (0x0)
  826: s.seq[3l].probs.frac[3l].den=1u (0x1)
  826: s.seq[4l].val[0l]=2u (0x2)
  826: s.seq[4l].val[1l]=1u (0x1)
  826: s.seq[4l].val[2l]=2u (0x2)
  826: s.seq[4l].val[3l]=1u (0x1)
  826: s.seq[4l].probs.frac[0l].num=0u (0x0)
  826: s.seq[4l].probs.frac[0l].den=1u (0x1)
  826: s.seq[4l].probs.frac[1l].num=0u (0x0)
  826: s.seq[4l].probs.frac[1l].den=1u (0x1)
  826: s.seq[4l].probs.frac[2l].num=0u (0x0)
  826: s.seq[4l].probs.frac[2l].den=1u (0x1)
  826: s.seq[4l].probs.frac[3l].num=1u (0x1)
  826: s.seq[4l].probs.frac[3l].den=1u (0x1)
  826: s.seq[5l].val[0l]=2u (0x2)
  826: s.seq[5l].val[1l]=2u (0x2)
  826: s.seq[5l].val[2l]=1u (0x1)
  826: s.seq[5l].val[3l]=1u (0x1)
  826: s.seq[5l].probs.frac[0l].num=0u (0x0)
  826: s.seq[5l].probs.frac[0l].den=1u (0x1)
  826: s.seq[5l].probs.frac[1l].num=0u (0x0)
  826: s.seq[5l].probs.frac[1l].den=1u (0x1)
  826: s.seq[5l].probs.frac[2l].num=0u (0x0)
  826: s.seq[5l].probs.frac[2l].den=1u (0x1)
  826: s.seq[5l].probs.frac[3l].num=0u (0x0)
  826: s.seq[5l].probs.frac[3l].den=1u (0x1)
  756: res.seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  756: res.seq[0l].val[0l]=1u (0x1)
  756: res.seq[0l].val[1l]=1u (0x1)
  756: res.seq[0l].val[2l]=2u (0x2)
  756: res.seq[0l].val[3l]=2u (0x2)
  756: res.seq[0l].probs.frac[0l].num=0u (0x0)
  756: res.seq[0l].probs.frac[0l].den=1u (0x1)
  756: res.seq[0l].probs.frac[1l].num=0u (0x0)
  756: res.seq[0l].probs.frac[1l].den=1u (0x1)
  756: res.seq[0l].probs.frac[2l].num=0u (0x0)
  756: res.seq[0l].probs.frac[2l].den=1u (0x1)
  756: res.seq[0l].probs.frac[3l].num=0u (0x0)
  756: res.seq[0l].probs.frac[3l].den=1u (0x1)
  756: res.seq[1l].val[0l]=1u (0x1)
  756: res.seq[1l].val[1l]=2u (0x2)
  756: res.seq[1l].val[2l]=1u (0x1)
  756: res.seq[1l].val[3l]=2u (0x2)
  756: res.seq[1l].probs.frac[0l].num=0u (0x0)
  756: res.seq[1l].probs.frac[0l].den=1u (0x1)
  756: res.seq[1l].probs.frac[1l].num=0u (0x0)
  756: res.seq[1l].probs.frac[1l].den=1u (0x1)
  756: res.seq[1l].probs.frac[2l].num=0u (0x0)
  756: res.seq[1l].probs.frac[2l].den=1u (0x1)
  756: res.seq[1l].probs.frac[3l].num=0u (0x0)
  756: res.seq[1l].probs.frac[3l].den=1u (0x1)
  756: res.seq[2l].val[0l]=1u (0x1)
  756: res.seq[2l].val[1l]=2u (0x2)
  756: res.seq[2l].val[2l]=2u (0x2)
  756: res.seq[2l].val[3l]=1u (0x1)
  756: res.seq[2l].probs.frac[0l].num=0u (0x0)
  756: res.seq[2l].probs.frac[0l].den=1u (0x1)
  756: res.seq[2l].probs.frac[1l].num=0u (0x0)
  756: res.seq[2l].probs.frac[1l].den=1u (0x1)
  756: res.seq[2l].probs.frac[2l].num=0u (0x0)
  756: res.seq[2l].probs.frac[2l].den=1u (0x1)
  756: res.seq[2l].probs.frac[3l].num=0u (0x0)
  756: res.seq[2l].probs.frac[3l].den=1u (0x1)
  756: res.seq[3l].val[0l]=2u (0x2)
  756: res.seq[3l].val[1l]=1u (0x1)
  756: res.seq[3l].val[2l]=1u (0x1)
  756: res.seq[3l].val[3l]=2u (0x2)
  756: res.seq[3l].probs.frac[0l].num=0u (0x0)
  756: res.seq[3l].probs.frac[0l].den=1u (0x1)
  756: res.seq[3l].probs.frac[1l].num=0u (0x0)
  756: res.seq[3l].probs.frac[1l].den=1u (0x1)
  756: res.seq[3l].probs.frac[2l].num=0u (0x0)
  756: res.seq[3l].probs.frac[2l].den=1u (0x1)
  756: res.seq[3l].probs.frac[3l].num=0u (0x0)
  756: res.seq[3l].probs.frac[3l].den=1u (0x1)
  756: res.seq[4l].val[0l]=2u (0x2)
  756: res.seq[4l].val[1l]=1u (0x1)
  756: res.seq[4l].val[2l]=2u (0x2)
  756: res.seq[4l].val[3l]=1u (0x1)
  756: res.seq[4l].probs.frac[0l].num=0u (0x0)
  756: res.seq[4l].probs.frac[0l].den=1u (0x1)
  756: res.seq[4l].probs.frac[1l].num=0u (0x0)
  756: res.seq[4l].probs.frac[1l].den=1u (0x1)
  756: res.seq[4l].probs.frac[2l].num=0u (0x0)
  756: res.seq[4l].probs.frac[2l].den=1u (0x1)
  756: res.seq[4l].probs.frac[3l].num=0u (0x0)
  756: res.seq[4l].probs.frac[3l].den=1u (0x1)
  756: res.seq[5l].val[0l]=2u (0x2)
  756: res.seq[5l].val[1l]=2u (0x2)
  756: res.seq[5l].val[2l]=1u (0x1)
  756: res.seq[5l].val[3l]=1u (0x1)
  756: res.seq[5l].probs.frac[0l].num=0u (0x0)
  756: res.seq[5l].probs.frac[0l].den=1u (0x1)
  756: res.seq[5l].probs.frac[1l].num=0u (0x0)
  756: res.seq[5l].probs.frac[1l].den=1u (0x1)
  756: res.seq[5l].probs.frac[2l].num=0u (0x0)
  756: res.seq[5l].probs.frac[2l].den=1u (0x1)
  756: res.seq[5l].probs.frac[3l].num=0u (0x0)
  756: res.seq[5l].probs.frac[3l].den=1u (0x1)
  758: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:759 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  759: probs.frac[0l].num=0u (0x0)
  759: probs.frac[0l].den=1u (0x1)
  759: probs.frac[1l].num=0u (0x0)
  759: probs.frac[1l].den=1u (0x1)
  759: probs.frac[2l].num=0u (0x0)
  759: probs.frac[2l].den=1u (0x1)
  759: probs.frac[3l].num=0u (0x0)
  759: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  758: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:759 isStillPossible({ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  759: probs.frac[0l].num=1u (0x1)
  759: probs.frac[0l].den=1u (0x1)
  759: probs.frac[1l].num=0u (0x0)
  759: probs.frac[1l].den=1u (0x1)
  759: probs.frac[2l].num=0u (0x0)
  759: probs.frac[2l].den=1u (0x1)
  759: probs.frac[3l].num=0u (0x0)
  759: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=1u (0x1)
  455: i=1u (0x1)
  456: res=1u (0x1)
  455: i=2u (0x2)
  456: res=1u (0x1)
  455: i=3u (0x3)
  456: res=1u (0x1)
  455: i=4u (0x4)
↵
  761: j=0u (0x0)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=3u (0x3)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=1u (0x1)
  467: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=1u (0x1)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=1u (0x1)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[0l].den=4u (0x4)
  744: resProbs.frac[0l].num=5u (0x5)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=0u (0x0)
  771: res.seq[2l].probs.frac[1l].den=1u (0x1)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=0u (0x0)
  771: res.seq[3l].probs.frac[1l].den=1u (0x1)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=0u (0x0)
  771: res.seq[4l].probs.frac[0l].den=1u (0x1)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=1u (0x1)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=3u (0x3)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=4u (0x4)
  467: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=4u (0x4)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=1u (0x1)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[0l].den=4u (0x4)
  744: resProbs.frac[0l].num=5u (0x5)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=0u (0x0)
  771: res.seq[2l].probs.frac[1l].den=1u (0x1)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=0u (0x0)
  771: res.seq[3l].probs.frac[1l].den=1u (0x1)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=2u (0x2)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=3u (0x3)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=1u (0x1)
  467: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=5u (0x5)
  467: seq.probs.frac[0l].den=4u (0x4)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=1u (0x1)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=1u (0x1)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=5u (0x5)
  772: resProbs.frac[0l].den=4u (0x4)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[0l].den=4u (0x4)
  744: resProbs.frac[0l].num=5u (0x5)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=0u (0x0)
  771: res.seq[2l].probs.frac[1l].den=1u (0x1)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=0u (0x0)
  771: res.seq[3l].probs.frac[1l].den=1u (0x1)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=3u (0x3)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=3u (0x3)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=4u (0x4)
  467: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=5u (0x5)
  467: seq.probs.frac[0l].den=4u (0x4)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=4u (0x4)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=1u (0x1)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=5u (0x5)
  772: resProbs.frac[0l].den=4u (0x4)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[0l].den=4u (0x4)
  744: resProbs.frac[0l].num=5u (0x5)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=0u (0x0)
  771: res.seq[2l].probs.frac[1l].den=1u (0x1)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=0u (0x0)
  771: res.seq[3l].probs.frac[1l].den=1u (0x1)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=4u (0x4)
  761: j=5u (0x5)
  761: j=6u (0x6)
  761: j=7u (0x7)
  761: j=8u (0x8)
  761: j=9u (0x9)
  761: j=10u (0xA)
  761: j=11u (0xB)
  761: j=12u (0xC)
  761: j=13u (0xD)
  761: j=14u (0xE)
  761: j=15u (0xF)
  761: j=16u (0x10)
  761: j=17u (0x11)
  761: j=18u (0x12)
  761: j=19u (0x13)
  761: j=20u (0x14)
  761: j=21u (0x15)
  761: j=22u (0x16)
  761: j=23u (0x17)
  761: j=24u (0x18)
  758: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:759 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  759: probs.frac[0l].num=0u (0x0)
  759: probs.frac[0l].den=1u (0x1)
  759: probs.frac[1l].num=1u (0x1)
  759: probs.frac[1l].den=1u (0x1)
  759: probs.frac[2l].num=0u (0x0)
  759: probs.frac[2l].den=1u (0x1)
  759: probs.frac[3l].num=0u (0x0)
  759: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=1u (0x1)
  455: i=2u (0x2)
  456: res=1u (0x1)
  455: i=3u (0x3)
  456: res=1u (0x1)
  455: i=4u (0x4)
↵
  761: j=0u (0x0)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=3u (0x3)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=2u (0x2)
  467: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=2u (0x2)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=1u (0x1)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[1l].den=4u (0x4)
  744: resProbs.frac[1l].num=5u (0x5)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=0u (0x0)
  771: res.seq[3l].probs.frac[1l].den=1u (0x1)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=1u (0x1)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=3u (0x3)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=3u (0x3)
  467: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=3u (0x3)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=1u (0x1)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[1l].den=4u (0x4)
  744: resProbs.frac[1l].num=5u (0x5)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=2u (0x2)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=3u (0x3)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=3u (0x3)
  467: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=5u (0x5)
  467: seq.probs.frac[1l].den=4u (0x4)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=3u (0x3)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=1u (0x1)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=5u (0x5)
  772: resProbs.frac[1l].den=4u (0x4)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[1l].den=4u (0x4)
  744: resProbs.frac[1l].num=5u (0x5)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=3u (0x3)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=2u (0x2)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=3u (0x3)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=2u (0x2)
  467: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=5u (0x5)
  467: seq.probs.frac[1l].den=4u (0x4)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=2u (0x2)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=1u (0x1)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=5u (0x5)
  772: resProbs.frac[1l].den=4u (0x4)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[1l].den=4u (0x4)
  744: resProbs.frac[1l].num=5u (0x5)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=0u (0x0)
  771: res.seq[3l].probs.frac[2l].den=1u (0x1)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=4u (0x4)
  761: j=5u (0x5)
  761: j=6u (0x6)
  761: j=7u (0x7)
  761: j=8u (0x8)
  761: j=9u (0x9)
  761: j=10u (0xA)
  761: j=11u (0xB)
  761: j=12u (0xC)
  761: j=13u (0xD)
  761: j=14u (0xE)
  761: j=15u (0xF)
  761: j=16u (0x10)
  761: j=17u (0x11)
  761: j=18u (0x12)
  761: j=19u (0x13)
  761: j=20u (0x14)
  761: j=21u (0x15)
  761: j=22u (0x16)
  761: j=23u (0x17)
  761: j=24u (0x18)
  758: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:759 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } })
  759: probs.frac[0l].num=0u (0x0)
  759: probs.frac[0l].den=1u (0x1)
  759: probs.frac[1l].num=0u (0x0)
  759: probs.frac[1l].den=1u (0x1)
  759: probs.frac[2l].num=1u (0x1)
  759: probs.frac[2l].den=1u (0x1)
  759: probs.frac[3l].num=0u (0x0)
  759: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=1u (0x1)
  455: i=3u (0x3)
  456: res=1u (0x1)
  455: i=4u (0x4)
↵
  761: j=0u (0x0)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=3u (0x3)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=3u (0x3)
  467: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=5u (0x5)
  467: seq.probs.frac[1l].den=4u (0x4)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=3u (0x3)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=1u (0x1)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=5u (0x5)
  772: resProbs.frac[1l].den=4u (0x4)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[2l].den=4u (0x4)
  744: resProbs.frac[2l].num=5u (0x5)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[2l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=0u (0x0)
  771: res.seq[2l].probs.frac[2l].den=1u (0x1)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=1u (0x1)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=3u (0x3)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=2u (0x2)
  467: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=5u (0x5)
  467: seq.probs.frac[1l].den=4u (0x4)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=2u (0x2)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=1u (0x1)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=5u (0x5)
  772: resProbs.frac[1l].den=4u (0x4)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[2l].den=4u (0x4)
  744: resProbs.frac[2l].num=5u (0x5)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[2l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=2u (0x2)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=3u (0x3)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=2u (0x2)
  467: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=5u (0x5)
  467: seq.probs.frac[1l].den=4u (0x4)
  467: seq.probs.frac[2l].num=5u (0x5)
  467: seq.probs.frac[2l].den=4u (0x4)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=2u (0x2)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=1u (0x1)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=5u (0x5)
  772: resProbs.frac[1l].den=4u (0x4)
  772: resProbs.frac[2l].num=5u (0x5)
  772: resProbs.frac[2l].den=4u (0x4)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[2l].den=4u (0x4)
  744: resProbs.frac[2l].num=5u (0x5)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[2l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=3u (0x3)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=3u (0x3)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=3u (0x3)
  467: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=0u (0x0)
  467: seq.probs.frac[0l].den=1u (0x1)
  467: seq.probs.frac[1l].num=5u (0x5)
  467: seq.probs.frac[1l].den=4u (0x4)
  467: seq.probs.frac[2l].num=5u (0x5)
  467: seq.probs.frac[2l].den=4u (0x4)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=3u (0x3)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u }, { .num=0u, .den=1u } } }, { .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=1u (0x1)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=0u (0x0)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=0u (0x0)
  772: resProbs.frac[0l].den=1u (0x1)
  772: resProbs.frac[1l].num=5u (0x5)
  772: resProbs.frac[1l].den=4u (0x4)
  772: resProbs.frac[2l].num=5u (0x5)
  772: resProbs.frac[2l].den=4u (0x4)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[2l].den=4u (0x4)
  744: resProbs.frac[2l].num=5u (0x5)
  729: k=3u (0x3)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=1u (0x1)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[0l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[1l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[1l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[2l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[2l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[3l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[3l].den=1u (0x1)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } ({ { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=0u (0x0)
  771: res.seq[4l].probs.frac[3l].den=1u (0x1)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=4u (0x4)
  761: j=5u (0x5)
  761: j=6u (0x6)
  761: j=7u (0x7)
  761: j=8u (0x8)
  761: j=9u (0x9)
  761: j=10u (0xA)
  761: j=11u (0xB)
  761: j=12u (0xC)
  761: j=13u (0xD)
  761: j=14u (0xE)
  761: j=15u (0xF)
  761: j=16u (0x10)
  761: j=17u (0x11)
  761: j=18u (0x12)
  761: j=19u (0x13)
  761: j=20u (0x14)
  761: j=21u (0x15)
  761: j=22u (0x16)
  761: j=23u (0x17)
  761: j=24u (0x18)
  758: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:759 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } })
  759: probs.frac[0l].num=0u (0x0)
  759: probs.frac[0l].den=1u (0x1)
  759: probs.frac[1l].num=0u (0x0)
  759: probs.frac[1l].den=1u (0x1)
  759: probs.frac[2l].num=0u (0x0)
  759: probs.frac[2l].den=1u (0x1)
  759: probs.frac[3l].num=1u (0x1)
  759: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=1u (0x1)
  455: i=4u (0x4)
↵
  761: j=0u (0x0)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=3u (0x3)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=4u (0x4)
  467: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=5u (0x5)
  467: seq.probs.frac[0l].den=4u (0x4)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=4u (0x4)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } }, { .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=1u (0x1)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=5u (0x5)
  772: resProbs.frac[0l].den=4u (0x4)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[3l].den=4u (0x4)
  744: resProbs.frac[3l].num=5u (0x5)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=4u (0x4)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[3l].den=4u (0x4)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=0u (0x0)
  771: res.seq[1l].probs.frac[3l].den=1u (0x1)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=5u (0x5)
  771: res.seq[4l].probs.frac[3l].den=4u (0x4)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=1u (0x1)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=2u (0x2)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=3u (0x3)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[3l].den=4u (0x4)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=1u (0x1)
  467: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=5u (0x5)
  467: seq.probs.frac[0l].den=4u (0x4)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=0u (0x0)
  467: seq.probs.frac[3l].den=1u (0x1)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=1u (0x1)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } }, { .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=1u (0x1)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=5u (0x5)
  772: resProbs.frac[0l].den=4u (0x4)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=0u (0x0)
  772: resProbs.frac[3l].den=1u (0x1)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[3l].den=4u (0x4)
  744: resProbs.frac[3l].num=5u (0x5)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=4u (0x4)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[3l].den=4u (0x4)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=5u (0x5)
  771: res.seq[1l].probs.frac[3l].den=4u (0x4)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=5u (0x5)
  771: res.seq[4l].probs.frac[3l].den=4u (0x4)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=2u (0x2)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=0u (0x0)
  764: k=1u (0x1)
  766: resultingSeq.arr[3l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=3u (0x3)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[0l]=2u (0x2)
  766: resultingSeq.arr[1l]=1u (0x1)
  766: resultingSeq.arr[2l]=2u (0x2)
  766: resultingSeq.arr[3l]=1u (0x1)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 2u, 1u, 2u, 1u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=2u (0x2)
  769: compare.arr[1l]=1u (0x1)
  769: compare.arr[2l]=2u (0x2)
  769: compare.arr[3l]=1u (0x1)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[3l].den=4u (0x4)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[3l].den=4u (0x4)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=4u (0x4)
  467: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  467: seq.val[0l]=2u (0x2)
  467: seq.val[1l]=1u (0x1)
  467: seq.val[2l]=2u (0x2)
  467: seq.val[3l]=1u (0x1)
  467: seq.probs.frac[0l].num=5u (0x5)
  467: seq.probs.frac[0l].den=4u (0x4)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=5u (0x5)
  467: seq.probs.frac[3l].den=4u (0x4)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=4u (0x4)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } }, { .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=1u (0x1)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=5u (0x5)
  772: resProbs.frac[0l].den=4u (0x4)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=5u (0x5)
  772: resProbs.frac[3l].den=4u (0x4)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[3l].den=4u (0x4)
  744: resProbs.frac[3l].num=5u (0x5)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=4u (0x4)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[3l].den=4u (0x4)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=5u (0x5)
  771: res.seq[1l].probs.frac[3l].den=4u (0x4)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=5u (0x5)
  771: res.seq[4l].probs.frac[3l].den=4u (0x4)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=3u (0x3)
  763: resultingSeq.arr={ 0u, 0u, 0u, 0u } ({ 0x0, 0x0, 0x0, 0x0 })
  763: resultingSeq.arr[0l]=0u (0x0)
  763: resultingSeq.arr[1l]=0u (0x0)
  763: resultingSeq.arr[2l]=0u (0x0)
  763: resultingSeq.arr[3l]=0u (0x0)
  764: k=0u (0x0)
  766: resultingSeq.arr[3l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=0u (0x0)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=1u (0x1)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=0u (0x0)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=2u (0x2)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[0l]=0u (0x0)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=3u (0x3)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[0l]=1u (0x1)
  766: resultingSeq.arr[1l]=2u (0x2)
  766: resultingSeq.arr[2l]=1u (0x1)
  766: resultingSeq.arr[3l]=2u (0x2)
  764: k=4u (0x4)

↳ findTwoCardProtocolXOR.c:769 getSequenceIndexFromArray({ .arr={ 1u, 2u, 1u, 2u } }, { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  769: compare.arr[0l]=1u (0x1)
  769: compare.arr[1l]=2u (0x2)
  769: compare.arr[2l]=1u (0x1)
  769: compare.arr[3l]=2u (0x2)
  769: compareState.seq[0l].val[0l]=1u (0x1)
  769: compareState.seq[0l].val[1l]=1u (0x1)
  769: compareState.seq[0l].val[2l]=2u (0x2)
  769: compareState.seq[0l].val[3l]=2u (0x2)
  769: compareState.seq[0l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[0l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[0l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[1l].val[0l]=1u (0x1)
  769: compareState.seq[1l].val[1l]=2u (0x2)
  769: compareState.seq[1l].val[2l]=1u (0x1)
  769: compareState.seq[1l].val[3l]=2u (0x2)
  769: compareState.seq[1l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[1l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[1l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[1l].probs.frac[3l].num=5u (0x5)
  769: compareState.seq[1l].probs.frac[3l].den=4u (0x4)
  769: compareState.seq[2l].val[0l]=1u (0x1)
  769: compareState.seq[2l].val[1l]=2u (0x2)
  769: compareState.seq[2l].val[2l]=2u (0x2)
  769: compareState.seq[2l].val[3l]=1u (0x1)
  769: compareState.seq[2l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[2l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[2l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[2l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[2l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[3l].val[0l]=2u (0x2)
  769: compareState.seq[3l].val[1l]=1u (0x1)
  769: compareState.seq[3l].val[2l]=1u (0x1)
  769: compareState.seq[3l].val[3l]=2u (0x2)
  769: compareState.seq[3l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[3l].probs.frac[1l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[1l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[2l].num=5u (0x5)
  769: compareState.seq[3l].probs.frac[2l].den=4u (0x4)
  769: compareState.seq[3l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[3l].probs.frac[3l].den=1u (0x1)
  769: compareState.seq[4l].val[0l]=2u (0x2)
  769: compareState.seq[4l].val[1l]=1u (0x1)
  769: compareState.seq[4l].val[2l]=2u (0x2)
  769: compareState.seq[4l].val[3l]=1u (0x1)
  769: compareState.seq[4l].probs.frac[0l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[0l].den=4u (0x4)
  769: compareState.seq[4l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[4l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[4l].probs.frac[3l].num=5u (0x5)
  769: compareState.seq[4l].probs.frac[3l].den=4u (0x4)
  769: compareState.seq[5l].val[0l]=2u (0x2)
  769: compareState.seq[5l].val[1l]=2u (0x2)
  769: compareState.seq[5l].val[2l]=1u (0x1)
  769: compareState.seq[5l].val[3l]=1u (0x1)
  769: compareState.seq[5l].probs.frac[0l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[0l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[1l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[1l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[2l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[2l].den=1u (0x1)
  769: compareState.seq[5l].probs.frac[3l].num=0u (0x0)
  769: compareState.seq[5l].probs.frac[3l].den=1u (0x1)
  465: seqIdx=1u (0x1)
  467: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  467: seq.val[0l]=1u (0x1)
  467: seq.val[1l]=2u (0x2)
  467: seq.val[2l]=1u (0x1)
  467: seq.val[3l]=2u (0x2)
  467: seq.probs.frac[0l].num=5u (0x5)
  467: seq.probs.frac[0l].den=4u (0x4)
  467: seq.probs.frac[1l].num=0u (0x0)
  467: seq.probs.frac[1l].den=1u (0x1)
  467: seq.probs.frac[2l].num=0u (0x0)
  467: seq.probs.frac[2l].den=1u (0x1)
  467: seq.probs.frac[3l].num=5u (0x5)
  467: seq.probs.frac[3l].den=4u (0x4)
  469: i=0u (0x0)
  469: i=1u (0x1)
  469: i=2u (0x2)
  469: i=3u (0x3)
  469: i=4u (0x4)
↵
  769: resultSeqIndex=1u (0x1)

↳ findTwoCardProtocolXOR.c:772 recalculatePossibilities({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=1u, .den=1u } } }, { .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } }, 4u)
  772: probs.frac[0l].num=0u (0x0)
  772: probs.frac[0l].den=1u (0x1)
  772: probs.frac[1l].num=0u (0x0)
  772: probs.frac[1l].den=1u (0x1)
  772: probs.frac[2l].num=0u (0x0)
  772: probs.frac[2l].den=1u (0x1)
  772: probs.frac[3l].num=1u (0x1)
  772: probs.frac[3l].den=1u (0x1)
  772: resProbs.frac[0l].num=5u (0x5)
  772: resProbs.frac[0l].den=4u (0x4)
  772: resProbs.frac[1l].num=0u (0x0)
  772: resProbs.frac[1l].den=1u (0x1)
  772: resProbs.frac[2l].num=0u (0x0)
  772: resProbs.frac[2l].den=1u (0x1)
  772: resProbs.frac[3l].num=5u (0x5)
  772: resProbs.frac[3l].den=4u (0x4)
  729: k=0u (0x0)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=1u (0x1)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=2u (0x2)
  730: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  730: prob.num=0u (0x0)
  730: prob.den=1u (0x1)
  731: num=0u (0x0)
  732: denom=1u (0x1)
  729: k=3u (0x3)
  730: prob={ .num=1u, .den=1u } ({ 0x1, 0x1 })
  730: prob.num=1u (0x1)
  730: prob.den=1u (0x1)
  731: num=1u (0x1)
  732: denom=1u (0x1)
  742: resProbs.frac[3l].den=4u (0x4)
  744: resProbs.frac[3l].num=5u (0x5)
  729: k=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[0l].den=4u (0x4)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[1l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].num=0u (0x0)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[2l].den=1u (0x1)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].num=5u (0x5)
  747: goto_symex$$return_value$$recalculatePossibilities.frac[3l].den=4u (0x4)
↵
  772: return_value_recalculatePossibilities.frac[0l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[0l].den=4u (0x4)
  772: return_value_recalculatePossibilities.frac[1l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[1l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[2l].num=0u (0x0)
  772: return_value_recalculatePossibilities.frac[2l].den=1u (0x1)
  772: return_value_recalculatePossibilities.frac[3l].num=5u (0x5)
  772: return_value_recalculatePossibilities.frac[3l].den=4u (0x4)
  771: res.seq[(signed long int)resultSeqIndex].probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } ({ { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } })
  771: res.seq[0l].val[0l]=1u (0x1)
  771: res.seq[0l].val[1l]=1u (0x1)
  771: res.seq[0l].val[2l]=2u (0x2)
  771: res.seq[0l].val[3l]=2u (0x2)
  771: res.seq[0l].probs.frac[0l].num=0u (0x0)
  771: res.seq[0l].probs.frac[0l].den=1u (0x1)
  771: res.seq[0l].probs.frac[1l].num=0u (0x0)
  771: res.seq[0l].probs.frac[1l].den=1u (0x1)
  771: res.seq[0l].probs.frac[2l].num=0u (0x0)
  771: res.seq[0l].probs.frac[2l].den=1u (0x1)
  771: res.seq[0l].probs.frac[3l].num=0u (0x0)
  771: res.seq[0l].probs.frac[3l].den=1u (0x1)
  771: res.seq[1l].val[0l]=1u (0x1)
  771: res.seq[1l].val[1l]=2u (0x2)
  771: res.seq[1l].val[2l]=1u (0x1)
  771: res.seq[1l].val[3l]=2u (0x2)
  771: res.seq[1l].probs.frac[0l].num=5u (0x5)
  771: res.seq[1l].probs.frac[0l].den=4u (0x4)
  771: res.seq[1l].probs.frac[1l].num=0u (0x0)
  771: res.seq[1l].probs.frac[1l].den=1u (0x1)
  771: res.seq[1l].probs.frac[2l].num=0u (0x0)
  771: res.seq[1l].probs.frac[2l].den=1u (0x1)
  771: res.seq[1l].probs.frac[3l].num=5u (0x5)
  771: res.seq[1l].probs.frac[3l].den=4u (0x4)
  771: res.seq[2l].val[0l]=1u (0x1)
  771: res.seq[2l].val[1l]=2u (0x2)
  771: res.seq[2l].val[2l]=2u (0x2)
  771: res.seq[2l].val[3l]=1u (0x1)
  771: res.seq[2l].probs.frac[0l].num=0u (0x0)
  771: res.seq[2l].probs.frac[0l].den=1u (0x1)
  771: res.seq[2l].probs.frac[1l].num=5u (0x5)
  771: res.seq[2l].probs.frac[1l].den=4u (0x4)
  771: res.seq[2l].probs.frac[2l].num=5u (0x5)
  771: res.seq[2l].probs.frac[2l].den=4u (0x4)
  771: res.seq[2l].probs.frac[3l].num=0u (0x0)
  771: res.seq[2l].probs.frac[3l].den=1u (0x1)
  771: res.seq[3l].val[0l]=2u (0x2)
  771: res.seq[3l].val[1l]=1u (0x1)
  771: res.seq[3l].val[2l]=1u (0x1)
  771: res.seq[3l].val[3l]=2u (0x2)
  771: res.seq[3l].probs.frac[0l].num=0u (0x0)
  771: res.seq[3l].probs.frac[0l].den=1u (0x1)
  771: res.seq[3l].probs.frac[1l].num=5u (0x5)
  771: res.seq[3l].probs.frac[1l].den=4u (0x4)
  771: res.seq[3l].probs.frac[2l].num=5u (0x5)
  771: res.seq[3l].probs.frac[2l].den=4u (0x4)
  771: res.seq[3l].probs.frac[3l].num=0u (0x0)
  771: res.seq[3l].probs.frac[3l].den=1u (0x1)
  771: res.seq[4l].val[0l]=2u (0x2)
  771: res.seq[4l].val[1l]=1u (0x1)
  771: res.seq[4l].val[2l]=2u (0x2)
  771: res.seq[4l].val[3l]=1u (0x1)
  771: res.seq[4l].probs.frac[0l].num=5u (0x5)
  771: res.seq[4l].probs.frac[0l].den=4u (0x4)
  771: res.seq[4l].probs.frac[1l].num=0u (0x0)
  771: res.seq[4l].probs.frac[1l].den=1u (0x1)
  771: res.seq[4l].probs.frac[2l].num=0u (0x0)
  771: res.seq[4l].probs.frac[2l].den=1u (0x1)
  771: res.seq[4l].probs.frac[3l].num=5u (0x5)
  771: res.seq[4l].probs.frac[3l].den=4u (0x4)
  771: res.seq[5l].val[0l]=2u (0x2)
  771: res.seq[5l].val[1l]=2u (0x2)
  771: res.seq[5l].val[2l]=1u (0x1)
  771: res.seq[5l].val[3l]=1u (0x1)
  771: res.seq[5l].probs.frac[0l].num=0u (0x0)
  771: res.seq[5l].probs.frac[0l].den=1u (0x1)
  771: res.seq[5l].probs.frac[1l].num=0u (0x0)
  771: res.seq[5l].probs.frac[1l].den=1u (0x1)
  771: res.seq[5l].probs.frac[2l].num=0u (0x0)
  771: res.seq[5l].probs.frac[2l].den=1u (0x1)
  771: res.seq[5l].probs.frac[3l].num=0u (0x0)
  771: res.seq[5l].probs.frac[3l].den=1u (0x1)
  761: j=4u (0x4)
  761: j=5u (0x5)
  761: j=6u (0x6)
  761: j=7u (0x7)
  761: j=8u (0x8)
  761: j=9u (0x9)
  761: j=10u (0xA)
  761: j=11u (0xB)
  761: j=12u (0xC)
  761: j=13u (0xD)
  761: j=14u (0xE)
  761: j=15u (0xF)
  761: j=16u (0x10)
  761: j=17u (0x11)
  761: j=18u (0x12)
  761: j=19u (0x13)
  761: j=20u (0x14)
  761: j=21u (0x15)
  761: j=22u (0x16)
  761: j=23u (0x17)
  761: j=24u (0x18)
  758: i=5u (0x5)

↳ findTwoCardProtocolXOR.c:759 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  759: probs.frac[0l].num=0u (0x0)
  759: probs.frac[0l].den=1u (0x1)
  759: probs.frac[1l].num=0u (0x0)
  759: probs.frac[1l].den=1u (0x1)
  759: probs.frac[2l].num=0u (0x0)
  759: probs.frac[2l].den=1u (0x1)
  759: probs.frac[3l].num=0u (0x0)
  759: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  758: i=6u (0x6)
  779: goto_symex$$return_value$$doShuffle.seq[0l].val[0l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[0l].val[1l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[0l].val[2l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[0l].val[3l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[0l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[0l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[1l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[1l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[2l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[2l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[3l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[0l].probs.frac[3l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[1l].val[0l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[1l].val[1l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[1l].val[2l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[1l].val[3l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[0l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[0l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[1l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[1l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[2l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[2l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[3l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[1l].probs.frac[3l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[2l].val[0l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[2l].val[1l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[2l].val[2l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[2l].val[3l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[0l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[0l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[1l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[1l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[2l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[2l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[3l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[2l].probs.frac[3l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[3l].val[0l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[3l].val[1l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[3l].val[2l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[3l].val[3l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[0l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[0l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[1l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[1l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[2l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[2l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[3l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[3l].probs.frac[3l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[4l].val[0l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[4l].val[1l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[4l].val[2l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[4l].val[3l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[0l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[0l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[1l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[1l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[2l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[2l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[3l].num=5u (0x5)
  779: goto_symex$$return_value$$doShuffle.seq[4l].probs.frac[3l].den=4u (0x4)
  779: goto_symex$$return_value$$doShuffle.seq[5l].val[0l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[5l].val[1l]=2u (0x2)
  779: goto_symex$$return_value$$doShuffle.seq[5l].val[2l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[5l].val[3l]=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[0l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[0l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[1l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[1l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[2l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[2l].den=1u (0x1)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[3l].num=0u (0x0)
  779: goto_symex$$return_value$$doShuffle.seq[5l].probs.frac[3l].den=1u (0x1)
↵
  826: return_value_doShuffle.seq[0l].val[0l]=1u (0x1)
  826: return_value_doShuffle.seq[0l].val[1l]=1u (0x1)
  826: return_value_doShuffle.seq[0l].val[2l]=2u (0x2)
  826: return_value_doShuffle.seq[0l].val[3l]=2u (0x2)
  826: return_value_doShuffle.seq[0l].probs.frac[0l].num=0u (0x0)
  826: return_value_doShuffle.seq[0l].probs.frac[0l].den=1u (0x1)
  826: return_value_doShuffle.seq[0l].probs.frac[1l].num=0u (0x0)
  826: return_value_doShuffle.seq[0l].probs.frac[1l].den=1u (0x1)
  826: return_value_doShuffle.seq[0l].probs.frac[2l].num=0u (0x0)
  826: return_value_doShuffle.seq[0l].probs.frac[2l].den=1u (0x1)
  826: return_value_doShuffle.seq[0l].probs.frac[3l].num=0u (0x0)
  826: return_value_doShuffle.seq[0l].probs.frac[3l].den=1u (0x1)
  826: return_value_doShuffle.seq[1l].val[0l]=1u (0x1)
  826: return_value_doShuffle.seq[1l].val[1l]=2u (0x2)
  826: return_value_doShuffle.seq[1l].val[2l]=1u (0x1)
  826: return_value_doShuffle.seq[1l].val[3l]=2u (0x2)
  826: return_value_doShuffle.seq[1l].probs.frac[0l].num=5u (0x5)
  826: return_value_doShuffle.seq[1l].probs.frac[0l].den=4u (0x4)
  826: return_value_doShuffle.seq[1l].probs.frac[1l].num=0u (0x0)
  826: return_value_doShuffle.seq[1l].probs.frac[1l].den=1u (0x1)
  826: return_value_doShuffle.seq[1l].probs.frac[2l].num=0u (0x0)
  826: return_value_doShuffle.seq[1l].probs.frac[2l].den=1u (0x1)
  826: return_value_doShuffle.seq[1l].probs.frac[3l].num=5u (0x5)
  826: return_value_doShuffle.seq[1l].probs.frac[3l].den=4u (0x4)
  826: return_value_doShuffle.seq[2l].val[0l]=1u (0x1)
  826: return_value_doShuffle.seq[2l].val[1l]=2u (0x2)
  826: return_value_doShuffle.seq[2l].val[2l]=2u (0x2)
  826: return_value_doShuffle.seq[2l].val[3l]=1u (0x1)
  826: return_value_doShuffle.seq[2l].probs.frac[0l].num=0u (0x0)
  826: return_value_doShuffle.seq[2l].probs.frac[0l].den=1u (0x1)
  826: return_value_doShuffle.seq[2l].probs.frac[1l].num=5u (0x5)
  826: return_value_doShuffle.seq[2l].probs.frac[1l].den=4u (0x4)
  826: return_value_doShuffle.seq[2l].probs.frac[2l].num=5u (0x5)
  826: return_value_doShuffle.seq[2l].probs.frac[2l].den=4u (0x4)
  826: return_value_doShuffle.seq[2l].probs.frac[3l].num=0u (0x0)
  826: return_value_doShuffle.seq[2l].probs.frac[3l].den=1u (0x1)
  826: return_value_doShuffle.seq[3l].val[0l]=2u (0x2)
  826: return_value_doShuffle.seq[3l].val[1l]=1u (0x1)
  826: return_value_doShuffle.seq[3l].val[2l]=1u (0x1)
  826: return_value_doShuffle.seq[3l].val[3l]=2u (0x2)
  826: return_value_doShuffle.seq[3l].probs.frac[0l].num=0u (0x0)
  826: return_value_doShuffle.seq[3l].probs.frac[0l].den=1u (0x1)
  826: return_value_doShuffle.seq[3l].probs.frac[1l].num=5u (0x5)
  826: return_value_doShuffle.seq[3l].probs.frac[1l].den=4u (0x4)
  826: return_value_doShuffle.seq[3l].probs.frac[2l].num=5u (0x5)
  826: return_value_doShuffle.seq[3l].probs.frac[2l].den=4u (0x4)
  826: return_value_doShuffle.seq[3l].probs.frac[3l].num=0u (0x0)
  826: return_value_doShuffle.seq[3l].probs.frac[3l].den=1u (0x1)
  826: return_value_doShuffle.seq[4l].val[0l]=2u (0x2)
  826: return_value_doShuffle.seq[4l].val[1l]=1u (0x1)
  826: return_value_doShuffle.seq[4l].val[2l]=2u (0x2)
  826: return_value_doShuffle.seq[4l].val[3l]=1u (0x1)
  826: return_value_doShuffle.seq[4l].probs.frac[0l].num=5u (0x5)
  826: return_value_doShuffle.seq[4l].probs.frac[0l].den=4u (0x4)
  826: return_value_doShuffle.seq[4l].probs.frac[1l].num=0u (0x0)
  826: return_value_doShuffle.seq[4l].probs.frac[1l].den=1u (0x1)
  826: return_value_doShuffle.seq[4l].probs.frac[2l].num=0u (0x0)
  826: return_value_doShuffle.seq[4l].probs.frac[2l].den=1u (0x1)
  826: return_value_doShuffle.seq[4l].probs.frac[3l].num=5u (0x5)
  826: return_value_doShuffle.seq[4l].probs.frac[3l].den=4u (0x4)
  826: return_value_doShuffle.seq[5l].val[0l]=2u (0x2)
  826: return_value_doShuffle.seq[5l].val[1l]=2u (0x2)
  826: return_value_doShuffle.seq[5l].val[2l]=1u (0x1)
  826: return_value_doShuffle.seq[5l].val[3l]=1u (0x1)
  826: return_value_doShuffle.seq[5l].probs.frac[0l].num=0u (0x0)
  826: return_value_doShuffle.seq[5l].probs.frac[0l].den=1u (0x1)
  826: return_value_doShuffle.seq[5l].probs.frac[1l].num=0u (0x0)
  826: return_value_doShuffle.seq[5l].probs.frac[1l].den=1u (0x1)
  826: return_value_doShuffle.seq[5l].probs.frac[2l].num=0u (0x0)
  826: return_value_doShuffle.seq[5l].probs.frac[2l].den=1u (0x1)
  826: return_value_doShuffle.seq[5l].probs.frac[3l].num=0u (0x0)
  826: return_value_doShuffle.seq[5l].probs.frac[3l].den=1u (0x1)
  826: res.seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  826: res.seq[0l].val[0l]=1u (0x1)
  826: res.seq[0l].val[1l]=1u (0x1)
  826: res.seq[0l].val[2l]=2u (0x2)
  826: res.seq[0l].val[3l]=2u (0x2)
  826: res.seq[0l].probs.frac[0l].num=0u (0x0)
  826: res.seq[0l].probs.frac[0l].den=1u (0x1)
  826: res.seq[0l].probs.frac[1l].num=0u (0x0)
  826: res.seq[0l].probs.frac[1l].den=1u (0x1)
  826: res.seq[0l].probs.frac[2l].num=0u (0x0)
  826: res.seq[0l].probs.frac[2l].den=1u (0x1)
  826: res.seq[0l].probs.frac[3l].num=0u (0x0)
  826: res.seq[0l].probs.frac[3l].den=1u (0x1)
  826: res.seq[1l].val[0l]=1u (0x1)
  826: res.seq[1l].val[1l]=2u (0x2)
  826: res.seq[1l].val[2l]=1u (0x1)
  826: res.seq[1l].val[3l]=2u (0x2)
  826: res.seq[1l].probs.frac[0l].num=5u (0x5)
  826: res.seq[1l].probs.frac[0l].den=4u (0x4)
  826: res.seq[1l].probs.frac[1l].num=0u (0x0)
  826: res.seq[1l].probs.frac[1l].den=1u (0x1)
  826: res.seq[1l].probs.frac[2l].num=0u (0x0)
  826: res.seq[1l].probs.frac[2l].den=1u (0x1)
  826: res.seq[1l].probs.frac[3l].num=5u (0x5)
  826: res.seq[1l].probs.frac[3l].den=4u (0x4)
  826: res.seq[2l].val[0l]=1u (0x1)
  826: res.seq[2l].val[1l]=2u (0x2)
  826: res.seq[2l].val[2l]=2u (0x2)
  826: res.seq[2l].val[3l]=1u (0x1)
  826: res.seq[2l].probs.frac[0l].num=0u (0x0)
  826: res.seq[2l].probs.frac[0l].den=1u (0x1)
  826: res.seq[2l].probs.frac[1l].num=5u (0x5)
  826: res.seq[2l].probs.frac[1l].den=4u (0x4)
  826: res.seq[2l].probs.frac[2l].num=5u (0x5)
  826: res.seq[2l].probs.frac[2l].den=4u (0x4)
  826: res.seq[2l].probs.frac[3l].num=0u (0x0)
  826: res.seq[2l].probs.frac[3l].den=1u (0x1)
  826: res.seq[3l].val[0l]=2u (0x2)
  826: res.seq[3l].val[1l]=1u (0x1)
  826: res.seq[3l].val[2l]=1u (0x1)
  826: res.seq[3l].val[3l]=2u (0x2)
  826: res.seq[3l].probs.frac[0l].num=0u (0x0)
  826: res.seq[3l].probs.frac[0l].den=1u (0x1)
  826: res.seq[3l].probs.frac[1l].num=5u (0x5)
  826: res.seq[3l].probs.frac[1l].den=4u (0x4)
  826: res.seq[3l].probs.frac[2l].num=5u (0x5)
  826: res.seq[3l].probs.frac[2l].den=4u (0x4)
  826: res.seq[3l].probs.frac[3l].num=0u (0x0)
  826: res.seq[3l].probs.frac[3l].den=1u (0x1)
  826: res.seq[4l].val[0l]=2u (0x2)
  826: res.seq[4l].val[1l]=1u (0x1)
  826: res.seq[4l].val[2l]=2u (0x2)
  826: res.seq[4l].val[3l]=1u (0x1)
  826: res.seq[4l].probs.frac[0l].num=5u (0x5)
  826: res.seq[4l].probs.frac[0l].den=4u (0x4)
  826: res.seq[4l].probs.frac[1l].num=0u (0x0)
  826: res.seq[4l].probs.frac[1l].den=1u (0x1)
  826: res.seq[4l].probs.frac[2l].num=0u (0x0)
  826: res.seq[4l].probs.frac[2l].den=1u (0x1)
  826: res.seq[4l].probs.frac[3l].num=5u (0x5)
  826: res.seq[4l].probs.frac[3l].den=4u (0x4)
  826: res.seq[5l].val[0l]=2u (0x2)
  826: res.seq[5l].val[1l]=2u (0x2)
  826: res.seq[5l].val[2l]=1u (0x1)
  826: res.seq[5l].val[3l]=1u (0x1)
  826: res.seq[5l].probs.frac[0l].num=0u (0x0)
  826: res.seq[5l].probs.frac[0l].den=1u (0x1)
  826: res.seq[5l].probs.frac[1l].num=0u (0x0)
  826: res.seq[5l].probs.frac[1l].den=1u (0x1)
  826: res.seq[5l].probs.frac[2l].num=0u (0x0)
  826: res.seq[5l].probs.frac[2l].den=1u (0x1)
  826: res.seq[5l].probs.frac[3l].num=0u (0x0)
  826: res.seq[5l].probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:828 isBottomFree({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  828: s.seq[0l].val[0l]=1u (0x1)
  828: s.seq[0l].val[1l]=1u (0x1)
  828: s.seq[0l].val[2l]=2u (0x2)
  828: s.seq[0l].val[3l]=2u (0x2)
  828: s.seq[0l].probs.frac[0l].num=0u (0x0)
  828: s.seq[0l].probs.frac[0l].den=1u (0x1)
  828: s.seq[0l].probs.frac[1l].num=0u (0x0)
  828: s.seq[0l].probs.frac[1l].den=1u (0x1)
  828: s.seq[0l].probs.frac[2l].num=0u (0x0)
  828: s.seq[0l].probs.frac[2l].den=1u (0x1)
  828: s.seq[0l].probs.frac[3l].num=0u (0x0)
  828: s.seq[0l].probs.frac[3l].den=1u (0x1)
  828: s.seq[1l].val[0l]=1u (0x1)
  828: s.seq[1l].val[1l]=2u (0x2)
  828: s.seq[1l].val[2l]=1u (0x1)
  828: s.seq[1l].val[3l]=2u (0x2)
  828: s.seq[1l].probs.frac[0l].num=5u (0x5)
  828: s.seq[1l].probs.frac[0l].den=4u (0x4)
  828: s.seq[1l].probs.frac[1l].num=0u (0x0)
  828: s.seq[1l].probs.frac[1l].den=1u (0x1)
  828: s.seq[1l].probs.frac[2l].num=0u (0x0)
  828: s.seq[1l].probs.frac[2l].den=1u (0x1)
  828: s.seq[1l].probs.frac[3l].num=5u (0x5)
  828: s.seq[1l].probs.frac[3l].den=4u (0x4)
  828: s.seq[2l].val[0l]=1u (0x1)
  828: s.seq[2l].val[1l]=2u (0x2)
  828: s.seq[2l].val[2l]=2u (0x2)
  828: s.seq[2l].val[3l]=1u (0x1)
  828: s.seq[2l].probs.frac[0l].num=0u (0x0)
  828: s.seq[2l].probs.frac[0l].den=1u (0x1)
  828: s.seq[2l].probs.frac[1l].num=5u (0x5)
  828: s.seq[2l].probs.frac[1l].den=4u (0x4)
  828: s.seq[2l].probs.frac[2l].num=5u (0x5)
  828: s.seq[2l].probs.frac[2l].den=4u (0x4)
  828: s.seq[2l].probs.frac[3l].num=0u (0x0)
  828: s.seq[2l].probs.frac[3l].den=1u (0x1)
  828: s.seq[3l].val[0l]=2u (0x2)
  828: s.seq[3l].val[1l]=1u (0x1)
  828: s.seq[3l].val[2l]=1u (0x1)
  828: s.seq[3l].val[3l]=2u (0x2)
  828: s.seq[3l].probs.frac[0l].num=0u (0x0)
  828: s.seq[3l].probs.frac[0l].den=1u (0x1)
  828: s.seq[3l].probs.frac[1l].num=5u (0x5)
  828: s.seq[3l].probs.frac[1l].den=4u (0x4)
  828: s.seq[3l].probs.frac[2l].num=5u (0x5)
  828: s.seq[3l].probs.frac[2l].den=4u (0x4)
  828: s.seq[3l].probs.frac[3l].num=0u (0x0)
  828: s.seq[3l].probs.frac[3l].den=1u (0x1)
  828: s.seq[4l].val[0l]=2u (0x2)
  828: s.seq[4l].val[1l]=1u (0x1)
  828: s.seq[4l].val[2l]=2u (0x2)
  828: s.seq[4l].val[3l]=1u (0x1)
  828: s.seq[4l].probs.frac[0l].num=5u (0x5)
  828: s.seq[4l].probs.frac[0l].den=4u (0x4)
  828: s.seq[4l].probs.frac[1l].num=0u (0x0)
  828: s.seq[4l].probs.frac[1l].den=1u (0x1)
  828: s.seq[4l].probs.frac[2l].num=0u (0x0)
  828: s.seq[4l].probs.frac[2l].den=1u (0x1)
  828: s.seq[4l].probs.frac[3l].num=5u (0x5)
  828: s.seq[4l].probs.frac[3l].den=4u (0x4)
  828: s.seq[5l].val[0l]=2u (0x2)
  828: s.seq[5l].val[1l]=2u (0x2)
  828: s.seq[5l].val[2l]=1u (0x1)
  828: s.seq[5l].val[3l]=1u (0x1)
  828: s.seq[5l].probs.frac[0l].num=0u (0x0)
  828: s.seq[5l].probs.frac[0l].den=1u (0x1)
  828: s.seq[5l].probs.frac[1l].num=0u (0x0)
  828: s.seq[5l].probs.frac[1l].den=1u (0x1)
  828: s.seq[5l].probs.frac[2l].num=0u (0x0)
  828: s.seq[5l].probs.frac[2l].den=1u (0x1)
  828: s.seq[5l].probs.frac[3l].num=0u (0x0)
  828: s.seq[5l].probs.frac[3l].den=1u (0x1)
  547: res=1u (0x1)
  548: done=0u (0x0)
  549: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  550: probs.frac[0l].num=5u (0x5)
  550: probs.frac[0l].den=4u (0x4)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=5u (0x5)
  550: probs.frac[3l].den=4u (0x4)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=5u (0x5)
  550: probs.frac[1l].den=4u (0x4)
  550: probs.frac[2l].num=5u (0x5)
  550: probs.frac[2l].den=4u (0x4)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=5u (0x5)
  550: probs.frac[1l].den=4u (0x4)
  550: probs.frac[2l].num=5u (0x5)
  550: probs.frac[2l].den=4u (0x4)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  550: probs.frac[0l].num=5u (0x5)
  550: probs.frac[0l].den=4u (0x4)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=5u (0x5)
  550: probs.frac[3l].den=4u (0x4)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=5u (0x5)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=6u (0x6)
↵
  829: goto_symex$$return_value$$applyShuffle.seq[0l].val[0l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].val[1l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].val[2l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].val[3l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[0l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[0l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[1l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[1l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[2l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[2l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[3l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[0l].probs.frac[3l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].val[0l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].val[1l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].val[2l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].val[3l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[0l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[0l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[1l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[1l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[2l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[2l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[3l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[1l].probs.frac[3l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].val[0l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].val[1l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].val[2l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].val[3l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[0l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[0l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[1l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[1l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[2l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[2l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[3l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[2l].probs.frac[3l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].val[0l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].val[1l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].val[2l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].val[3l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[0l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[0l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[1l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[1l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[2l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[2l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[3l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[3l].probs.frac[3l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].val[0l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].val[1l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].val[2l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].val[3l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[0l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[0l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[1l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[1l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[2l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[2l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[3l].num=5u (0x5)
  829: goto_symex$$return_value$$applyShuffle.seq[4l].probs.frac[3l].den=4u (0x4)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].val[0l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].val[1l]=2u (0x2)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].val[2l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].val[3l]=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[0l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[0l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[1l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[1l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[2l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[2l].den=1u (0x1)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[3l].num=0u (0x0)
  829: goto_symex$$return_value$$applyShuffle.seq[5l].probs.frac[3l].den=1u (0x1)
↵
  1040: return_value_applyShuffle.seq[0l].val[0l]=1u (0x1)
  1040: return_value_applyShuffle.seq[0l].val[1l]=1u (0x1)
  1040: return_value_applyShuffle.seq[0l].val[2l]=2u (0x2)
  1040: return_value_applyShuffle.seq[0l].val[3l]=2u (0x2)
  1040: return_value_applyShuffle.seq[0l].probs.frac[0l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[0l].probs.frac[0l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[0l].probs.frac[1l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[0l].probs.frac[1l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[0l].probs.frac[2l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[0l].probs.frac[2l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[0l].probs.frac[3l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[0l].probs.frac[3l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[1l].val[0l]=1u (0x1)
  1040: return_value_applyShuffle.seq[1l].val[1l]=2u (0x2)
  1040: return_value_applyShuffle.seq[1l].val[2l]=1u (0x1)
  1040: return_value_applyShuffle.seq[1l].val[3l]=2u (0x2)
  1040: return_value_applyShuffle.seq[1l].probs.frac[0l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[1l].probs.frac[0l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[1l].probs.frac[1l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[1l].probs.frac[1l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[1l].probs.frac[2l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[1l].probs.frac[2l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[1l].probs.frac[3l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[1l].probs.frac[3l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[2l].val[0l]=1u (0x1)
  1040: return_value_applyShuffle.seq[2l].val[1l]=2u (0x2)
  1040: return_value_applyShuffle.seq[2l].val[2l]=2u (0x2)
  1040: return_value_applyShuffle.seq[2l].val[3l]=1u (0x1)
  1040: return_value_applyShuffle.seq[2l].probs.frac[0l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[2l].probs.frac[0l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[2l].probs.frac[1l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[2l].probs.frac[1l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[2l].probs.frac[2l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[2l].probs.frac[2l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[2l].probs.frac[3l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[2l].probs.frac[3l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[3l].val[0l]=2u (0x2)
  1040: return_value_applyShuffle.seq[3l].val[1l]=1u (0x1)
  1040: return_value_applyShuffle.seq[3l].val[2l]=1u (0x1)
  1040: return_value_applyShuffle.seq[3l].val[3l]=2u (0x2)
  1040: return_value_applyShuffle.seq[3l].probs.frac[0l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[3l].probs.frac[0l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[3l].probs.frac[1l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[3l].probs.frac[1l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[3l].probs.frac[2l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[3l].probs.frac[2l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[3l].probs.frac[3l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[3l].probs.frac[3l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[4l].val[0l]=2u (0x2)
  1040: return_value_applyShuffle.seq[4l].val[1l]=1u (0x1)
  1040: return_value_applyShuffle.seq[4l].val[2l]=2u (0x2)
  1040: return_value_applyShuffle.seq[4l].val[3l]=1u (0x1)
  1040: return_value_applyShuffle.seq[4l].probs.frac[0l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[4l].probs.frac[0l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[4l].probs.frac[1l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[4l].probs.frac[1l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[4l].probs.frac[2l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[4l].probs.frac[2l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[4l].probs.frac[3l].num=5u (0x5)
  1040: return_value_applyShuffle.seq[4l].probs.frac[3l].den=4u (0x4)
  1040: return_value_applyShuffle.seq[5l].val[0l]=2u (0x2)
  1040: return_value_applyShuffle.seq[5l].val[1l]=2u (0x2)
  1040: return_value_applyShuffle.seq[5l].val[2l]=1u (0x1)
  1040: return_value_applyShuffle.seq[5l].val[3l]=1u (0x1)
  1040: return_value_applyShuffle.seq[5l].probs.frac[0l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[5l].probs.frac[0l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[5l].probs.frac[1l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[5l].probs.frac[1l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[5l].probs.frac[2l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[5l].probs.frac[2l].den=1u (0x1)
  1040: return_value_applyShuffle.seq[5l].probs.frac[3l].num=0u (0x0)
  1040: return_value_applyShuffle.seq[5l].probs.frac[3l].den=1u (0x1)
  1040: reachableStates[1l].seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  1040: reachableStates[1l].seq[0l].val[0l]=1u (0x1)
  1040: reachableStates[1l].seq[0l].val[1l]=1u (0x1)
  1040: reachableStates[1l].seq[0l].val[2l]=2u (0x2)
  1040: reachableStates[1l].seq[0l].val[3l]=2u (0x2)
  1040: reachableStates[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  1040: reachableStates[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  1040: reachableStates[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  1040: reachableStates[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  1040: reachableStates[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  1040: reachableStates[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  1040: reachableStates[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  1040: reachableStates[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  1040: reachableStates[1l].seq[1l].val[0l]=1u (0x1)
  1040: reachableStates[1l].seq[1l].val[1l]=2u (0x2)
  1040: reachableStates[1l].seq[1l].val[2l]=1u (0x1)
  1040: reachableStates[1l].seq[1l].val[3l]=2u (0x2)
  1040: reachableStates[1l].seq[1l].probs.frac[0l].num=5u (0x5)
  1040: reachableStates[1l].seq[1l].probs.frac[0l].den=4u (0x4)
  1040: reachableStates[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  1040: reachableStates[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  1040: reachableStates[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  1040: reachableStates[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  1040: reachableStates[1l].seq[1l].probs.frac[3l].num=5u (0x5)
  1040: reachableStates[1l].seq[1l].probs.frac[3l].den=4u (0x4)
  1040: reachableStates[1l].seq[2l].val[0l]=1u (0x1)
  1040: reachableStates[1l].seq[2l].val[1l]=2u (0x2)
  1040: reachableStates[1l].seq[2l].val[2l]=2u (0x2)
  1040: reachableStates[1l].seq[2l].val[3l]=1u (0x1)
  1040: reachableStates[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  1040: reachableStates[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  1040: reachableStates[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  1040: reachableStates[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  1040: reachableStates[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  1040: reachableStates[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  1040: reachableStates[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  1040: reachableStates[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  1040: reachableStates[1l].seq[3l].val[0l]=2u (0x2)
  1040: reachableStates[1l].seq[3l].val[1l]=1u (0x1)
  1040: reachableStates[1l].seq[3l].val[2l]=1u (0x1)
  1040: reachableStates[1l].seq[3l].val[3l]=2u (0x2)
  1040: reachableStates[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  1040: reachableStates[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  1040: reachableStates[1l].seq[3l].probs.frac[1l].num=5u (0x5)
  1040: reachableStates[1l].seq[3l].probs.frac[1l].den=4u (0x4)
  1040: reachableStates[1l].seq[3l].probs.frac[2l].num=5u (0x5)
  1040: reachableStates[1l].seq[3l].probs.frac[2l].den=4u (0x4)
  1040: reachableStates[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  1040: reachableStates[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  1040: reachableStates[1l].seq[4l].val[0l]=2u (0x2)
  1040: reachableStates[1l].seq[4l].val[1l]=1u (0x1)
  1040: reachableStates[1l].seq[4l].val[2l]=2u (0x2)
  1040: reachableStates[1l].seq[4l].val[3l]=1u (0x1)
  1040: reachableStates[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  1040: reachableStates[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  1040: reachableStates[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  1040: reachableStates[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  1040: reachableStates[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  1040: reachableStates[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  1040: reachableStates[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  1040: reachableStates[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  1040: reachableStates[1l].seq[5l].val[0l]=2u (0x2)
  1040: reachableStates[1l].seq[5l].val[1l]=2u (0x2)
  1040: reachableStates[1l].seq[5l].val[2l]=1u (0x1)
  1040: reachableStates[1l].seq[5l].val[3l]=1u (0x1)
  1040: reachableStates[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  1040: reachableStates[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  1040: reachableStates[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  1040: reachableStates[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  1040: reachableStates[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  1040: reachableStates[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  1040: reachableStates[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  1040: reachableStates[1l].seq[5l].probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:1041 isFinalState({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1041: s.seq[0l].val[0l]=1u (0x1)
  1041: s.seq[0l].val[1l]=1u (0x1)
  1041: s.seq[0l].val[2l]=2u (0x2)
  1041: s.seq[0l].val[3l]=2u (0x2)
  1041: s.seq[0l].probs.frac[0l].num=0u (0x0)
  1041: s.seq[0l].probs.frac[0l].den=1u (0x1)
  1041: s.seq[0l].probs.frac[1l].num=0u (0x0)
  1041: s.seq[0l].probs.frac[1l].den=1u (0x1)
  1041: s.seq[0l].probs.frac[2l].num=0u (0x0)
  1041: s.seq[0l].probs.frac[2l].den=1u (0x1)
  1041: s.seq[0l].probs.frac[3l].num=0u (0x0)
  1041: s.seq[0l].probs.frac[3l].den=1u (0x1)
  1041: s.seq[1l].val[0l]=1u (0x1)
  1041: s.seq[1l].val[1l]=2u (0x2)
  1041: s.seq[1l].val[2l]=1u (0x1)
  1041: s.seq[1l].val[3l]=2u (0x2)
  1041: s.seq[1l].probs.frac[0l].num=5u (0x5)
  1041: s.seq[1l].probs.frac[0l].den=4u (0x4)
  1041: s.seq[1l].probs.frac[1l].num=0u (0x0)
  1041: s.seq[1l].probs.frac[1l].den=1u (0x1)
  1041: s.seq[1l].probs.frac[2l].num=0u (0x0)
  1041: s.seq[1l].probs.frac[2l].den=1u (0x1)
  1041: s.seq[1l].probs.frac[3l].num=5u (0x5)
  1041: s.seq[1l].probs.frac[3l].den=4u (0x4)
  1041: s.seq[2l].val[0l]=1u (0x1)
  1041: s.seq[2l].val[1l]=2u (0x2)
  1041: s.seq[2l].val[2l]=2u (0x2)
  1041: s.seq[2l].val[3l]=1u (0x1)
  1041: s.seq[2l].probs.frac[0l].num=0u (0x0)
  1041: s.seq[2l].probs.frac[0l].den=1u (0x1)
  1041: s.seq[2l].probs.frac[1l].num=5u (0x5)
  1041: s.seq[2l].probs.frac[1l].den=4u (0x4)
  1041: s.seq[2l].probs.frac[2l].num=5u (0x5)
  1041: s.seq[2l].probs.frac[2l].den=4u (0x4)
  1041: s.seq[2l].probs.frac[3l].num=0u (0x0)
  1041: s.seq[2l].probs.frac[3l].den=1u (0x1)
  1041: s.seq[3l].val[0l]=2u (0x2)
  1041: s.seq[3l].val[1l]=1u (0x1)
  1041: s.seq[3l].val[2l]=1u (0x1)
  1041: s.seq[3l].val[3l]=2u (0x2)
  1041: s.seq[3l].probs.frac[0l].num=0u (0x0)
  1041: s.seq[3l].probs.frac[0l].den=1u (0x1)
  1041: s.seq[3l].probs.frac[1l].num=5u (0x5)
  1041: s.seq[3l].probs.frac[1l].den=4u (0x4)
  1041: s.seq[3l].probs.frac[2l].num=5u (0x5)
  1041: s.seq[3l].probs.frac[2l].den=4u (0x4)
  1041: s.seq[3l].probs.frac[3l].num=0u (0x0)
  1041: s.seq[3l].probs.frac[3l].den=1u (0x1)
  1041: s.seq[4l].val[0l]=2u (0x2)
  1041: s.seq[4l].val[1l]=1u (0x1)
  1041: s.seq[4l].val[2l]=2u (0x2)
  1041: s.seq[4l].val[3l]=1u (0x1)
  1041: s.seq[4l].probs.frac[0l].num=5u (0x5)
  1041: s.seq[4l].probs.frac[0l].den=4u (0x4)
  1041: s.seq[4l].probs.frac[1l].num=0u (0x0)
  1041: s.seq[4l].probs.frac[1l].den=1u (0x1)
  1041: s.seq[4l].probs.frac[2l].num=0u (0x0)
  1041: s.seq[4l].probs.frac[2l].den=1u (0x1)
  1041: s.seq[4l].probs.frac[3l].num=5u (0x5)
  1041: s.seq[4l].probs.frac[3l].den=4u (0x4)
  1041: s.seq[5l].val[0l]=2u (0x2)
  1041: s.seq[5l].val[1l]=2u (0x2)
  1041: s.seq[5l].val[2l]=1u (0x1)
  1041: s.seq[5l].val[3l]=1u (0x1)
  1041: s.seq[5l].probs.frac[0l].num=0u (0x0)
  1041: s.seq[5l].probs.frac[0l].den=1u (0x1)
  1041: s.seq[5l].probs.frac[1l].num=0u (0x0)
  1041: s.seq[5l].probs.frac[1l].den=1u (0x1)
  1041: s.seq[5l].probs.frac[2l].num=0u (0x0)
  1041: s.seq[5l].probs.frac[2l].den=1u (0x1)
  1041: s.seq[5l].probs.frac[3l].num=0u (0x0)
  1041: s.seq[5l].probs.frac[3l].den=1u (0x1)
  591: res=0u (0x0)

↳ findTwoCardProtocolXOR.c:593 isValid({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  593: s.seq[0l].val[0l]=1u (0x1)
  593: s.seq[0l].val[1l]=1u (0x1)
  593: s.seq[0l].val[2l]=2u (0x2)
  593: s.seq[0l].val[3l]=2u (0x2)
  593: s.seq[0l].probs.frac[0l].num=0u (0x0)
  593: s.seq[0l].probs.frac[0l].den=1u (0x1)
  593: s.seq[0l].probs.frac[1l].num=0u (0x0)
  593: s.seq[0l].probs.frac[1l].den=1u (0x1)
  593: s.seq[0l].probs.frac[2l].num=0u (0x0)
  593: s.seq[0l].probs.frac[2l].den=1u (0x1)
  593: s.seq[0l].probs.frac[3l].num=0u (0x0)
  593: s.seq[0l].probs.frac[3l].den=1u (0x1)
  593: s.seq[1l].val[0l]=1u (0x1)
  593: s.seq[1l].val[1l]=2u (0x2)
  593: s.seq[1l].val[2l]=1u (0x1)
  593: s.seq[1l].val[3l]=2u (0x2)
  593: s.seq[1l].probs.frac[0l].num=5u (0x5)
  593: s.seq[1l].probs.frac[0l].den=4u (0x4)
  593: s.seq[1l].probs.frac[1l].num=0u (0x0)
  593: s.seq[1l].probs.frac[1l].den=1u (0x1)
  593: s.seq[1l].probs.frac[2l].num=0u (0x0)
  593: s.seq[1l].probs.frac[2l].den=1u (0x1)
  593: s.seq[1l].probs.frac[3l].num=5u (0x5)
  593: s.seq[1l].probs.frac[3l].den=4u (0x4)
  593: s.seq[2l].val[0l]=1u (0x1)
  593: s.seq[2l].val[1l]=2u (0x2)
  593: s.seq[2l].val[2l]=2u (0x2)
  593: s.seq[2l].val[3l]=1u (0x1)
  593: s.seq[2l].probs.frac[0l].num=0u (0x0)
  593: s.seq[2l].probs.frac[0l].den=1u (0x1)
  593: s.seq[2l].probs.frac[1l].num=5u (0x5)
  593: s.seq[2l].probs.frac[1l].den=4u (0x4)
  593: s.seq[2l].probs.frac[2l].num=5u (0x5)
  593: s.seq[2l].probs.frac[2l].den=4u (0x4)
  593: s.seq[2l].probs.frac[3l].num=0u (0x0)
  593: s.seq[2l].probs.frac[3l].den=1u (0x1)
  593: s.seq[3l].val[0l]=2u (0x2)
  593: s.seq[3l].val[1l]=1u (0x1)
  593: s.seq[3l].val[2l]=1u (0x1)
  593: s.seq[3l].val[3l]=2u (0x2)
  593: s.seq[3l].probs.frac[0l].num=0u (0x0)
  593: s.seq[3l].probs.frac[0l].den=1u (0x1)
  593: s.seq[3l].probs.frac[1l].num=5u (0x5)
  593: s.seq[3l].probs.frac[1l].den=4u (0x4)
  593: s.seq[3l].probs.frac[2l].num=5u (0x5)
  593: s.seq[3l].probs.frac[2l].den=4u (0x4)
  593: s.seq[3l].probs.frac[3l].num=0u (0x0)
  593: s.seq[3l].probs.frac[3l].den=1u (0x1)
  593: s.seq[4l].val[0l]=2u (0x2)
  593: s.seq[4l].val[1l]=1u (0x1)
  593: s.seq[4l].val[2l]=2u (0x2)
  593: s.seq[4l].val[3l]=1u (0x1)
  593: s.seq[4l].probs.frac[0l].num=5u (0x5)
  593: s.seq[4l].probs.frac[0l].den=4u (0x4)
  593: s.seq[4l].probs.frac[1l].num=0u (0x0)
  593: s.seq[4l].probs.frac[1l].den=1u (0x1)
  593: s.seq[4l].probs.frac[2l].num=0u (0x0)
  593: s.seq[4l].probs.frac[2l].den=1u (0x1)
  593: s.seq[4l].probs.frac[3l].num=5u (0x5)
  593: s.seq[4l].probs.frac[3l].den=4u (0x4)
  593: s.seq[5l].val[0l]=2u (0x2)
  593: s.seq[5l].val[1l]=2u (0x2)
  593: s.seq[5l].val[2l]=1u (0x1)
  593: s.seq[5l].val[3l]=1u (0x1)
  593: s.seq[5l].probs.frac[0l].num=0u (0x0)
  593: s.seq[5l].probs.frac[0l].den=1u (0x1)
  593: s.seq[5l].probs.frac[1l].num=0u (0x0)
  593: s.seq[5l].probs.frac[1l].den=1u (0x1)
  593: s.seq[5l].probs.frac[2l].num=0u (0x0)
  593: s.seq[5l].probs.frac[2l].den=1u (0x1)
  593: s.seq[5l].probs.frac[3l].num=0u (0x0)
  593: s.seq[5l].probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:569 isBottomFree({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  569: s.seq[0l].val[0l]=1u (0x1)
  569: s.seq[0l].val[1l]=1u (0x1)
  569: s.seq[0l].val[2l]=2u (0x2)
  569: s.seq[0l].val[3l]=2u (0x2)
  569: s.seq[0l].probs.frac[0l].num=0u (0x0)
  569: s.seq[0l].probs.frac[0l].den=1u (0x1)
  569: s.seq[0l].probs.frac[1l].num=0u (0x0)
  569: s.seq[0l].probs.frac[1l].den=1u (0x1)
  569: s.seq[0l].probs.frac[2l].num=0u (0x0)
  569: s.seq[0l].probs.frac[2l].den=1u (0x1)
  569: s.seq[0l].probs.frac[3l].num=0u (0x0)
  569: s.seq[0l].probs.frac[3l].den=1u (0x1)
  569: s.seq[1l].val[0l]=1u (0x1)
  569: s.seq[1l].val[1l]=2u (0x2)
  569: s.seq[1l].val[2l]=1u (0x1)
  569: s.seq[1l].val[3l]=2u (0x2)
  569: s.seq[1l].probs.frac[0l].num=5u (0x5)
  569: s.seq[1l].probs.frac[0l].den=4u (0x4)
  569: s.seq[1l].probs.frac[1l].num=0u (0x0)
  569: s.seq[1l].probs.frac[1l].den=1u (0x1)
  569: s.seq[1l].probs.frac[2l].num=0u (0x0)
  569: s.seq[1l].probs.frac[2l].den=1u (0x1)
  569: s.seq[1l].probs.frac[3l].num=5u (0x5)
  569: s.seq[1l].probs.frac[3l].den=4u (0x4)
  569: s.seq[2l].val[0l]=1u (0x1)
  569: s.seq[2l].val[1l]=2u (0x2)
  569: s.seq[2l].val[2l]=2u (0x2)
  569: s.seq[2l].val[3l]=1u (0x1)
  569: s.seq[2l].probs.frac[0l].num=0u (0x0)
  569: s.seq[2l].probs.frac[0l].den=1u (0x1)
  569: s.seq[2l].probs.frac[1l].num=5u (0x5)
  569: s.seq[2l].probs.frac[1l].den=4u (0x4)
  569: s.seq[2l].probs.frac[2l].num=5u (0x5)
  569: s.seq[2l].probs.frac[2l].den=4u (0x4)
  569: s.seq[2l].probs.frac[3l].num=0u (0x0)
  569: s.seq[2l].probs.frac[3l].den=1u (0x1)
  569: s.seq[3l].val[0l]=2u (0x2)
  569: s.seq[3l].val[1l]=1u (0x1)
  569: s.seq[3l].val[2l]=1u (0x1)
  569: s.seq[3l].val[3l]=2u (0x2)
  569: s.seq[3l].probs.frac[0l].num=0u (0x0)
  569: s.seq[3l].probs.frac[0l].den=1u (0x1)
  569: s.seq[3l].probs.frac[1l].num=5u (0x5)
  569: s.seq[3l].probs.frac[1l].den=4u (0x4)
  569: s.seq[3l].probs.frac[2l].num=5u (0x5)
  569: s.seq[3l].probs.frac[2l].den=4u (0x4)
  569: s.seq[3l].probs.frac[3l].num=0u (0x0)
  569: s.seq[3l].probs.frac[3l].den=1u (0x1)
  569: s.seq[4l].val[0l]=2u (0x2)
  569: s.seq[4l].val[1l]=1u (0x1)
  569: s.seq[4l].val[2l]=2u (0x2)
  569: s.seq[4l].val[3l]=1u (0x1)
  569: s.seq[4l].probs.frac[0l].num=5u (0x5)
  569: s.seq[4l].probs.frac[0l].den=4u (0x4)
  569: s.seq[4l].probs.frac[1l].num=0u (0x0)
  569: s.seq[4l].probs.frac[1l].den=1u (0x1)
  569: s.seq[4l].probs.frac[2l].num=0u (0x0)
  569: s.seq[4l].probs.frac[2l].den=1u (0x1)
  569: s.seq[4l].probs.frac[3l].num=5u (0x5)
  569: s.seq[4l].probs.frac[3l].den=4u (0x4)
  569: s.seq[5l].val[0l]=2u (0x2)
  569: s.seq[5l].val[1l]=2u (0x2)
  569: s.seq[5l].val[2l]=1u (0x1)
  569: s.seq[5l].val[3l]=1u (0x1)
  569: s.seq[5l].probs.frac[0l].num=0u (0x0)
  569: s.seq[5l].probs.frac[0l].den=1u (0x1)
  569: s.seq[5l].probs.frac[1l].num=0u (0x0)
  569: s.seq[5l].probs.frac[1l].den=1u (0x1)
  569: s.seq[5l].probs.frac[2l].num=0u (0x0)
  569: s.seq[5l].probs.frac[2l].den=1u (0x1)
  569: s.seq[5l].probs.frac[3l].num=0u (0x0)
  569: s.seq[5l].probs.frac[3l].den=1u (0x1)
  547: res=1u (0x1)
  548: done=0u (0x0)
  549: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  550: probs.frac[0l].num=5u (0x5)
  550: probs.frac[0l].den=4u (0x4)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=5u (0x5)
  550: probs.frac[3l].den=4u (0x4)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=5u (0x5)
  550: probs.frac[1l].den=4u (0x4)
  550: probs.frac[2l].num=5u (0x5)
  550: probs.frac[2l].den=4u (0x4)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=5u (0x5)
  550: probs.frac[1l].den=4u (0x4)
  550: probs.frac[2l].num=5u (0x5)
  550: probs.frac[2l].den=4u (0x4)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  550: probs.frac[0l].num=5u (0x5)
  550: probs.frac[0l].den=4u (0x4)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=5u (0x5)
  550: probs.frac[3l].den=4u (0x4)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=5u (0x5)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=1u (0x1)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=1u (0x1)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=1u (0x1)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=1u (0x1)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=6u (0x6)
↵
  569: res=1u (0x1)
  572: k=0u (0x0)
  573: seqIndexForThisProbability=1u (0x1)
  575: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  575: seq.val[0l]=1u (0x1)
  575: seq.val[1l]=2u (0x2)
  575: seq.val[2l]=1u (0x1)
  575: seq.val[3l]=2u (0x2)
  575: seq.probs.frac[0l].num=5u (0x5)
  575: seq.probs.frac[0l].den=4u (0x4)
  575: seq.probs.frac[1l].num=0u (0x0)
  575: seq.probs.frac[1l].den=1u (0x1)
  575: seq.probs.frac[2l].num=0u (0x0)
  575: seq.probs.frac[2l].den=1u (0x1)
  575: seq.probs.frac[3l].num=5u (0x5)
  575: seq.probs.frac[3l].den=4u (0x4)
  572: k=1u (0x1)
  573: seqIndexForThisProbability=3u (0x3)
  575: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  575: seq.val[0l]=2u (0x2)
  575: seq.val[1l]=1u (0x1)
  575: seq.val[2l]=1u (0x1)
  575: seq.val[3l]=2u (0x2)
  575: seq.probs.frac[0l].num=0u (0x0)
  575: seq.probs.frac[0l].den=1u (0x1)
  575: seq.probs.frac[1l].num=5u (0x5)
  575: seq.probs.frac[1l].den=4u (0x4)
  575: seq.probs.frac[2l].num=5u (0x5)
  575: seq.probs.frac[2l].den=4u (0x4)
  575: seq.probs.frac[3l].num=0u (0x0)
  575: seq.probs.frac[3l].den=1u (0x1)
  572: k=2u (0x2)
  573: seqIndexForThisProbability=3u (0x3)
  575: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  575: seq.val[0l]=2u (0x2)
  575: seq.val[1l]=1u (0x1)
  575: seq.val[2l]=1u (0x1)
  575: seq.val[3l]=2u (0x2)
  575: seq.probs.frac[0l].num=0u (0x0)
  575: seq.probs.frac[0l].den=1u (0x1)
  575: seq.probs.frac[1l].num=5u (0x5)
  575: seq.probs.frac[1l].den=4u (0x4)
  575: seq.probs.frac[2l].num=5u (0x5)
  575: seq.probs.frac[2l].den=4u (0x4)
  575: seq.probs.frac[3l].num=0u (0x0)
  575: seq.probs.frac[3l].den=1u (0x1)
  572: k=3u (0x3)
  573: seqIndexForThisProbability=1u (0x1)
  575: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  575: seq.val[0l]=1u (0x1)
  575: seq.val[1l]=2u (0x2)
  575: seq.val[2l]=1u (0x1)
  575: seq.val[3l]=2u (0x2)
  575: seq.probs.frac[0l].num=5u (0x5)
  575: seq.probs.frac[0l].den=4u (0x4)
  575: seq.probs.frac[1l].num=0u (0x0)
  575: seq.probs.frac[1l].den=1u (0x1)
  575: seq.probs.frac[2l].num=0u (0x0)
  575: seq.probs.frac[2l].den=1u (0x1)
  575: seq.probs.frac[3l].num=5u (0x5)
  575: seq.probs.frac[3l].den=4u (0x4)
  572: k=4u (0x4)
↵
  594: res=1u (0x1)
  600: a=1u (0x1)
  601: b=0u (0x0)
  604: lowerCard=0u (0x0)
  605: higherCard=0u (0x0)
  607: done=0u (0x0)
  608: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=1u (0x1)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=1u (0x1)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=1u (0x1)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  608: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  609: probs.frac[0l].num=5u (0x5)
  609: probs.frac[0l].den=4u (0x4)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=1u (0x1)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=1u (0x1)
  609: probs.frac[3l].num=5u (0x5)
  609: probs.frac[3l].den=4u (0x4)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=5u (0x5)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  611: deciding=0u (0x0)
  612: first=2u (0x2)
  613: second=1u (0x1)
  617: higherCard=1u (0x1)
  618: lowerCard=2u (0x2)
  608: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=1u (0x1)
  609: probs.frac[1l].num=5u (0x5)
  609: probs.frac[1l].den=4u (0x4)
  609: probs.frac[2l].num=5u (0x5)
  609: probs.frac[2l].den=4u (0x4)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  611: deciding=1u (0x1)
  612: first=2u (0x2)
  613: second=1u (0x1)
  631: done=1u (0x1)
  632: res=0u (0x0)
  608: i=3u (0x3)
  608: i=4u (0x4)
  608: i=5u (0x5)
  608: i=6u (0x6)
↵
  992: i=1u (0x1)
  994: action=0u (0x0)
  998: next=2u (0x2)

↳ findTwoCardProtocolXOR.c:1006 applyTurn({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } })
  1006: s.seq[0l].val[0l]=1u (0x1)
  1006: s.seq[0l].val[1l]=1u (0x1)
  1006: s.seq[0l].val[2l]=2u (0x2)
  1006: s.seq[0l].val[3l]=2u (0x2)
  1006: s.seq[0l].probs.frac[0l].num=0u (0x0)
  1006: s.seq[0l].probs.frac[0l].den=1u (0x1)
  1006: s.seq[0l].probs.frac[1l].num=0u (0x0)
  1006: s.seq[0l].probs.frac[1l].den=1u (0x1)
  1006: s.seq[0l].probs.frac[2l].num=0u (0x0)
  1006: s.seq[0l].probs.frac[2l].den=1u (0x1)
  1006: s.seq[0l].probs.frac[3l].num=0u (0x0)
  1006: s.seq[0l].probs.frac[3l].den=1u (0x1)
  1006: s.seq[1l].val[0l]=1u (0x1)
  1006: s.seq[1l].val[1l]=2u (0x2)
  1006: s.seq[1l].val[2l]=1u (0x1)
  1006: s.seq[1l].val[3l]=2u (0x2)
  1006: s.seq[1l].probs.frac[0l].num=5u (0x5)
  1006: s.seq[1l].probs.frac[0l].den=4u (0x4)
  1006: s.seq[1l].probs.frac[1l].num=0u (0x0)
  1006: s.seq[1l].probs.frac[1l].den=1u (0x1)
  1006: s.seq[1l].probs.frac[2l].num=0u (0x0)
  1006: s.seq[1l].probs.frac[2l].den=1u (0x1)
  1006: s.seq[1l].probs.frac[3l].num=5u (0x5)
  1006: s.seq[1l].probs.frac[3l].den=4u (0x4)
  1006: s.seq[2l].val[0l]=1u (0x1)
  1006: s.seq[2l].val[1l]=2u (0x2)
  1006: s.seq[2l].val[2l]=2u (0x2)
  1006: s.seq[2l].val[3l]=1u (0x1)
  1006: s.seq[2l].probs.frac[0l].num=0u (0x0)
  1006: s.seq[2l].probs.frac[0l].den=1u (0x1)
  1006: s.seq[2l].probs.frac[1l].num=5u (0x5)
  1006: s.seq[2l].probs.frac[1l].den=4u (0x4)
  1006: s.seq[2l].probs.frac[2l].num=5u (0x5)
  1006: s.seq[2l].probs.frac[2l].den=4u (0x4)
  1006: s.seq[2l].probs.frac[3l].num=0u (0x0)
  1006: s.seq[2l].probs.frac[3l].den=1u (0x1)
  1006: s.seq[3l].val[0l]=2u (0x2)
  1006: s.seq[3l].val[1l]=1u (0x1)
  1006: s.seq[3l].val[2l]=1u (0x1)
  1006: s.seq[3l].val[3l]=2u (0x2)
  1006: s.seq[3l].probs.frac[0l].num=0u (0x0)
  1006: s.seq[3l].probs.frac[0l].den=1u (0x1)
  1006: s.seq[3l].probs.frac[1l].num=5u (0x5)
  1006: s.seq[3l].probs.frac[1l].den=4u (0x4)
  1006: s.seq[3l].probs.frac[2l].num=5u (0x5)
  1006: s.seq[3l].probs.frac[2l].den=4u (0x4)
  1006: s.seq[3l].probs.frac[3l].num=0u (0x0)
  1006: s.seq[3l].probs.frac[3l].den=1u (0x1)
  1006: s.seq[4l].val[0l]=2u (0x2)
  1006: s.seq[4l].val[1l]=1u (0x1)
  1006: s.seq[4l].val[2l]=2u (0x2)
  1006: s.seq[4l].val[3l]=1u (0x1)
  1006: s.seq[4l].probs.frac[0l].num=5u (0x5)
  1006: s.seq[4l].probs.frac[0l].den=4u (0x4)
  1006: s.seq[4l].probs.frac[1l].num=0u (0x0)
  1006: s.seq[4l].probs.frac[1l].den=1u (0x1)
  1006: s.seq[4l].probs.frac[2l].num=0u (0x0)
  1006: s.seq[4l].probs.frac[2l].den=1u (0x1)
  1006: s.seq[4l].probs.frac[3l].num=5u (0x5)
  1006: s.seq[4l].probs.frac[3l].den=4u (0x4)
  1006: s.seq[5l].val[0l]=2u (0x2)
  1006: s.seq[5l].val[1l]=2u (0x2)
  1006: s.seq[5l].val[2l]=1u (0x1)
  1006: s.seq[5l].val[3l]=1u (0x1)
  1006: s.seq[5l].probs.frac[0l].num=0u (0x0)
  1006: s.seq[5l].probs.frac[0l].den=1u (0x1)
  1006: s.seq[5l].probs.frac[1l].num=0u (0x0)
  1006: s.seq[5l].probs.frac[1l].den=1u (0x1)
  1006: s.seq[5l].probs.frac[2l].num=0u (0x0)
  1006: s.seq[5l].probs.frac[2l].den=1u (0x1)
  1006: s.seq[5l].probs.frac[3l].num=0u (0x0)
  1006: s.seq[5l].probs.frac[3l].den=1u (0x1)
  950: turnPosition=2u (0x2)

↳ findTwoCardProtocolXOR.c:953 copyObservations({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } }, 2u)
  953: s.seq[0l].val[0l]=1u (0x1)
  953: s.seq[0l].val[1l]=1u (0x1)
  953: s.seq[0l].val[2l]=2u (0x2)
  953: s.seq[0l].val[3l]=2u (0x2)
  953: s.seq[0l].probs.frac[0l].num=0u (0x0)
  953: s.seq[0l].probs.frac[0l].den=1u (0x1)
  953: s.seq[0l].probs.frac[1l].num=0u (0x0)
  953: s.seq[0l].probs.frac[1l].den=1u (0x1)
  953: s.seq[0l].probs.frac[2l].num=0u (0x0)
  953: s.seq[0l].probs.frac[2l].den=1u (0x1)
  953: s.seq[0l].probs.frac[3l].num=0u (0x0)
  953: s.seq[0l].probs.frac[3l].den=1u (0x1)
  953: s.seq[1l].val[0l]=1u (0x1)
  953: s.seq[1l].val[1l]=2u (0x2)
  953: s.seq[1l].val[2l]=1u (0x1)
  953: s.seq[1l].val[3l]=2u (0x2)
  953: s.seq[1l].probs.frac[0l].num=5u (0x5)
  953: s.seq[1l].probs.frac[0l].den=4u (0x4)
  953: s.seq[1l].probs.frac[1l].num=0u (0x0)
  953: s.seq[1l].probs.frac[1l].den=1u (0x1)
  953: s.seq[1l].probs.frac[2l].num=0u (0x0)
  953: s.seq[1l].probs.frac[2l].den=1u (0x1)
  953: s.seq[1l].probs.frac[3l].num=5u (0x5)
  953: s.seq[1l].probs.frac[3l].den=4u (0x4)
  953: s.seq[2l].val[0l]=1u (0x1)
  953: s.seq[2l].val[1l]=2u (0x2)
  953: s.seq[2l].val[2l]=2u (0x2)
  953: s.seq[2l].val[3l]=1u (0x1)
  953: s.seq[2l].probs.frac[0l].num=0u (0x0)
  953: s.seq[2l].probs.frac[0l].den=1u (0x1)
  953: s.seq[2l].probs.frac[1l].num=5u (0x5)
  953: s.seq[2l].probs.frac[1l].den=4u (0x4)
  953: s.seq[2l].probs.frac[2l].num=5u (0x5)
  953: s.seq[2l].probs.frac[2l].den=4u (0x4)
  953: s.seq[2l].probs.frac[3l].num=0u (0x0)
  953: s.seq[2l].probs.frac[3l].den=1u (0x1)
  953: s.seq[3l].val[0l]=2u (0x2)
  953: s.seq[3l].val[1l]=1u (0x1)
  953: s.seq[3l].val[2l]=1u (0x1)
  953: s.seq[3l].val[3l]=2u (0x2)
  953: s.seq[3l].probs.frac[0l].num=0u (0x0)
  953: s.seq[3l].probs.frac[0l].den=1u (0x1)
  953: s.seq[3l].probs.frac[1l].num=5u (0x5)
  953: s.seq[3l].probs.frac[1l].den=4u (0x4)
  953: s.seq[3l].probs.frac[2l].num=5u (0x5)
  953: s.seq[3l].probs.frac[2l].den=4u (0x4)
  953: s.seq[3l].probs.frac[3l].num=0u (0x0)
  953: s.seq[3l].probs.frac[3l].den=1u (0x1)
  953: s.seq[4l].val[0l]=2u (0x2)
  953: s.seq[4l].val[1l]=1u (0x1)
  953: s.seq[4l].val[2l]=2u (0x2)
  953: s.seq[4l].val[3l]=1u (0x1)
  953: s.seq[4l].probs.frac[0l].num=5u (0x5)
  953: s.seq[4l].probs.frac[0l].den=4u (0x4)
  953: s.seq[4l].probs.frac[1l].num=0u (0x0)
  953: s.seq[4l].probs.frac[1l].den=1u (0x1)
  953: s.seq[4l].probs.frac[2l].num=0u (0x0)
  953: s.seq[4l].probs.frac[2l].den=1u (0x1)
  953: s.seq[4l].probs.frac[3l].num=5u (0x5)
  953: s.seq[4l].probs.frac[3l].den=4u (0x4)
  953: s.seq[5l].val[0l]=2u (0x2)
  953: s.seq[5l].val[1l]=2u (0x2)
  953: s.seq[5l].val[2l]=1u (0x1)
  953: s.seq[5l].val[3l]=1u (0x1)
  953: s.seq[5l].probs.frac[0l].num=0u (0x0)
  953: s.seq[5l].probs.frac[0l].den=1u (0x1)
  953: s.seq[5l].probs.frac[1l].num=0u (0x0)
  953: s.seq[5l].probs.frac[1l].den=1u (0x1)
  953: s.seq[5l].probs.frac[2l].num=0u (0x0)
  953: s.seq[5l].probs.frac[2l].den=1u (0x1)
  953: s.seq[5l].probs.frac[3l].num=0u (0x0)
  953: s.seq[5l].probs.frac[3l].den=1u (0x1)
  910: i=0u (0x0)
  911: result.states[0l].seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  911: result.states[0l].seq[0l].val[0l]=1u (0x1)
  911: result.states[0l].seq[0l].val[1l]=1u (0x1)
  911: result.states[0l].seq[0l].val[2l]=2u (0x2)
  911: result.states[0l].seq[0l].val[3l]=2u (0x2)
  911: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  911: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  911: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  911: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  911: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  911: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  911: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  911: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  911: result.states[0l].seq[1l].val[0l]=1u (0x1)
  911: result.states[0l].seq[1l].val[1l]=2u (0x2)
  911: result.states[0l].seq[1l].val[2l]=1u (0x1)
  911: result.states[0l].seq[1l].val[3l]=2u (0x2)
  911: result.states[0l].seq[1l].probs.frac[0l].num=0u (0x0)
  911: result.states[0l].seq[1l].probs.frac[0l].den=1u (0x1)
  911: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  911: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  911: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  911: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  911: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  911: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  911: result.states[0l].seq[2l].val[0l]=1u (0x1)
  911: result.states[0l].seq[2l].val[1l]=2u (0x2)
  911: result.states[0l].seq[2l].val[2l]=2u (0x2)
  911: result.states[0l].seq[2l].val[3l]=1u (0x1)
  911: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  911: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  911: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  911: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  911: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  911: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  911: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  911: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  911: result.states[0l].seq[3l].val[0l]=2u (0x2)
  911: result.states[0l].seq[3l].val[1l]=1u (0x1)
  911: result.states[0l].seq[3l].val[2l]=1u (0x1)
  911: result.states[0l].seq[3l].val[3l]=2u (0x2)
  911: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  911: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  911: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  911: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  911: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  911: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  911: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  911: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  911: result.states[0l].seq[4l].val[0l]=2u (0x2)
  911: result.states[0l].seq[4l].val[1l]=1u (0x1)
  911: result.states[0l].seq[4l].val[2l]=2u (0x2)
  911: result.states[0l].seq[4l].val[3l]=1u (0x1)
  911: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  911: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  911: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  911: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  911: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  911: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  911: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  911: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  911: result.states[0l].seq[5l].val[0l]=2u (0x2)
  911: result.states[0l].seq[5l].val[1l]=2u (0x2)
  911: result.states[0l].seq[5l].val[2l]=1u (0x1)
  911: result.states[0l].seq[5l].val[3l]=1u (0x1)
  911: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  911: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  911: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  911: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  911: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  911: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  911: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  911: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  912: result.isUsed[0l]=0u (0x0)
  910: i=1u (0x1)
  911: result.states[1l].seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } ({ { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } })
  911: result.states[1l].seq[0l].val[0l]=1u (0x1)
  911: result.states[1l].seq[0l].val[1l]=1u (0x1)
  911: result.states[1l].seq[0l].val[2l]=2u (0x2)
  911: result.states[1l].seq[0l].val[3l]=2u (0x2)
  911: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  911: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  911: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  911: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  911: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  911: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  911: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  911: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  911: result.states[1l].seq[1l].val[0l]=1u (0x1)
  911: result.states[1l].seq[1l].val[1l]=2u (0x2)
  911: result.states[1l].seq[1l].val[2l]=1u (0x1)
  911: result.states[1l].seq[1l].val[3l]=2u (0x2)
  911: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  911: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  911: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  911: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  911: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  911: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  911: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  911: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  911: result.states[1l].seq[2l].val[0l]=1u (0x1)
  911: result.states[1l].seq[2l].val[1l]=2u (0x2)
  911: result.states[1l].seq[2l].val[2l]=2u (0x2)
  911: result.states[1l].seq[2l].val[3l]=1u (0x1)
  911: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  911: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  911: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  911: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  911: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  911: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  911: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  911: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  911: result.states[1l].seq[3l].val[0l]=2u (0x2)
  911: result.states[1l].seq[3l].val[1l]=1u (0x1)
  911: result.states[1l].seq[3l].val[2l]=1u (0x1)
  911: result.states[1l].seq[3l].val[3l]=2u (0x2)
  911: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  911: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  911: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  911: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  911: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  911: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  911: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  911: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  911: result.states[1l].seq[4l].val[0l]=2u (0x2)
  911: result.states[1l].seq[4l].val[1l]=1u (0x1)
  911: result.states[1l].seq[4l].val[2l]=2u (0x2)
  911: result.states[1l].seq[4l].val[3l]=1u (0x1)
  911: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  911: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  911: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  911: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  911: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  911: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  911: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  911: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  911: result.states[1l].seq[5l].val[0l]=2u (0x2)
  911: result.states[1l].seq[5l].val[1l]=2u (0x2)
  911: result.states[1l].seq[5l].val[2l]=1u (0x1)
  911: result.states[1l].seq[5l].val[3l]=1u (0x1)
  911: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  911: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  911: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  911: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  911: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  911: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  911: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  911: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  912: result.isUsed[1l]=0u (0x0)
  910: i=2u (0x2)
  914: cntTurnObservations=0u (0x0)
  919: i=0u (0x0)
  920: seq={ .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  920: seq.val[0l]=1u (0x1)
  920: seq.val[1l]=1u (0x1)
  920: seq.val[2l]=2u (0x2)
  920: seq.val[3l]=2u (0x2)
  920: seq.probs.frac[0l].num=0u (0x0)
  920: seq.probs.frac[0l].den=1u (0x1)
  920: seq.probs.frac[1l].num=0u (0x0)
  920: seq.probs.frac[1l].den=1u (0x1)
  920: seq.probs.frac[2l].num=0u (0x0)
  920: seq.probs.frac[2l].den=1u (0x1)
  920: seq.probs.frac[3l].num=0u (0x0)
  920: seq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:921 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  921: probs.frac[0l].num=0u (0x0)
  921: probs.frac[0l].den=1u (0x1)
  921: probs.frac[1l].num=0u (0x0)
  921: probs.frac[1l].den=1u (0x1)
  921: probs.frac[2l].num=0u (0x0)
  921: probs.frac[2l].den=1u (0x1)
  921: probs.frac[3l].num=0u (0x0)
  921: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  919: i=1u (0x1)
  920: seq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  920: seq.val[0l]=1u (0x1)
  920: seq.val[1l]=2u (0x2)
  920: seq.val[2l]=1u (0x1)
  920: seq.val[3l]=2u (0x2)
  920: seq.probs.frac[0l].num=5u (0x5)
  920: seq.probs.frac[0l].den=4u (0x4)
  920: seq.probs.frac[1l].num=0u (0x0)
  920: seq.probs.frac[1l].den=1u (0x1)
  920: seq.probs.frac[2l].num=0u (0x0)
  920: seq.probs.frac[2l].den=1u (0x1)
  920: seq.probs.frac[3l].num=5u (0x5)
  920: seq.probs.frac[3l].den=4u (0x4)

↳ findTwoCardProtocolXOR.c:921 isStillPossible({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  921: probs.frac[0l].num=5u (0x5)
  921: probs.frac[0l].den=4u (0x4)
  921: probs.frac[1l].num=0u (0x0)
  921: probs.frac[1l].den=1u (0x1)
  921: probs.frac[2l].num=0u (0x0)
  921: probs.frac[2l].den=1u (0x1)
  921: probs.frac[3l].num=5u (0x5)
  921: probs.frac[3l].den=4u (0x4)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=5u (0x5)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  922: turnedCardNumber=1u (0x1)
  923: turnIdx=0u (0x0)
  924: cntTurnObservations=1u (0x1)
  925: result.isUsed[0l]=1u (0x1)
  925: result.isUsed[0l]=1u (0x1)
  925: result.isUsed[1l]=0u (0x0)
  927: j=0u (0x0)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=1u (0x1)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=2u (0x2)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=3u (0x3)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=4u (0x4)
  919: i=2u (0x2)
  920: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  920: seq.val[0l]=1u (0x1)
  920: seq.val[1l]=2u (0x2)
  920: seq.val[2l]=2u (0x2)
  920: seq.val[3l]=1u (0x1)
  920: seq.probs.frac[0l].num=0u (0x0)
  920: seq.probs.frac[0l].den=1u (0x1)
  920: seq.probs.frac[1l].num=5u (0x5)
  920: seq.probs.frac[1l].den=4u (0x4)
  920: seq.probs.frac[2l].num=5u (0x5)
  920: seq.probs.frac[2l].den=4u (0x4)
  920: seq.probs.frac[3l].num=0u (0x0)
  920: seq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:921 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  921: probs.frac[0l].num=0u (0x0)
  921: probs.frac[0l].den=1u (0x1)
  921: probs.frac[1l].num=5u (0x5)
  921: probs.frac[1l].den=4u (0x4)
  921: probs.frac[2l].num=5u (0x5)
  921: probs.frac[2l].den=4u (0x4)
  921: probs.frac[3l].num=0u (0x0)
  921: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  922: turnedCardNumber=2u (0x2)
  923: turnIdx=1u (0x1)
  924: cntTurnObservations=2u (0x2)
  925: result.isUsed[1l]=1u (0x1)
  925: result.isUsed[0l]=1u (0x1)
  925: result.isUsed[1l]=1u (0x1)
  927: j=0u (0x0)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=1u (0x1)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=2u (0x2)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=3u (0x3)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=4u (0x4)
  919: i=3u (0x3)
  920: seq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  920: seq.val[0l]=2u (0x2)
  920: seq.val[1l]=1u (0x1)
  920: seq.val[2l]=1u (0x1)
  920: seq.val[3l]=2u (0x2)
  920: seq.probs.frac[0l].num=0u (0x0)
  920: seq.probs.frac[0l].den=1u (0x1)
  920: seq.probs.frac[1l].num=5u (0x5)
  920: seq.probs.frac[1l].den=4u (0x4)
  920: seq.probs.frac[2l].num=5u (0x5)
  920: seq.probs.frac[2l].den=4u (0x4)
  920: seq.probs.frac[3l].num=0u (0x0)
  920: seq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:921 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  921: probs.frac[0l].num=0u (0x0)
  921: probs.frac[0l].den=1u (0x1)
  921: probs.frac[1l].num=5u (0x5)
  921: probs.frac[1l].den=4u (0x4)
  921: probs.frac[2l].num=5u (0x5)
  921: probs.frac[2l].den=4u (0x4)
  921: probs.frac[3l].num=0u (0x0)
  921: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  922: turnedCardNumber=1u (0x1)
  923: turnIdx=0u (0x0)
  924: cntTurnObservations=2u (0x2)
  925: result.isUsed[0l]=1u (0x1)
  925: result.isUsed[0l]=1u (0x1)
  925: result.isUsed[1l]=1u (0x1)
  927: j=0u (0x0)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=1u (0x1)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=2u (0x2)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=3u (0x3)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=4u (0x4)
  919: i=4u (0x4)
  920: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  920: seq.val[0l]=2u (0x2)
  920: seq.val[1l]=1u (0x1)
  920: seq.val[2l]=2u (0x2)
  920: seq.val[3l]=1u (0x1)
  920: seq.probs.frac[0l].num=5u (0x5)
  920: seq.probs.frac[0l].den=4u (0x4)
  920: seq.probs.frac[1l].num=0u (0x0)
  920: seq.probs.frac[1l].den=1u (0x1)
  920: seq.probs.frac[2l].num=0u (0x0)
  920: seq.probs.frac[2l].den=1u (0x1)
  920: seq.probs.frac[3l].num=5u (0x5)
  920: seq.probs.frac[3l].den=4u (0x4)

↳ findTwoCardProtocolXOR.c:921 isStillPossible({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  921: probs.frac[0l].num=5u (0x5)
  921: probs.frac[0l].den=4u (0x4)
  921: probs.frac[1l].num=0u (0x0)
  921: probs.frac[1l].den=1u (0x1)
  921: probs.frac[2l].num=0u (0x0)
  921: probs.frac[2l].den=1u (0x1)
  921: probs.frac[3l].num=5u (0x5)
  921: probs.frac[3l].den=4u (0x4)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=5u (0x5)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  922: turnedCardNumber=2u (0x2)
  923: turnIdx=1u (0x1)
  924: cntTurnObservations=2u (0x2)
  925: result.isUsed[1l]=1u (0x1)
  925: result.isUsed[0l]=1u (0x1)
  925: result.isUsed[1l]=1u (0x1)
  927: j=0u (0x0)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[4l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  930: result.states[1l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[4l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  933: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=1u (0x1)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  930: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  933: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=2u (0x2)
  928: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  928: prob.num=0u (0x0)
  928: prob.den=1u (0x1)
  930: result.states[(signed long int)turnIdx].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  930: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  933: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=3u (0x3)
  928: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  928: prob.num=5u (0x5)
  928: prob.den=4u (0x4)
  930: result.states[(signed long int)turnIdx].seq[4l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[0l].val[0l]=1u (0x1)
  930: result.states[0l].seq[0l].val[1l]=1u (0x1)
  930: result.states[0l].seq[0l].val[2l]=2u (0x2)
  930: result.states[0l].seq[0l].val[3l]=2u (0x2)
  930: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[1l].val[0l]=1u (0x1)
  930: result.states[0l].seq[1l].val[1l]=2u (0x2)
  930: result.states[0l].seq[1l].val[2l]=1u (0x1)
  930: result.states[0l].seq[1l].val[3l]=2u (0x2)
  930: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  930: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  930: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  930: result.states[0l].seq[2l].val[0l]=1u (0x1)
  930: result.states[0l].seq[2l].val[1l]=2u (0x2)
  930: result.states[0l].seq[2l].val[2l]=2u (0x2)
  930: result.states[0l].seq[2l].val[3l]=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[3l].val[0l]=2u (0x2)
  930: result.states[0l].seq[3l].val[1l]=1u (0x1)
  930: result.states[0l].seq[3l].val[2l]=1u (0x1)
  930: result.states[0l].seq[3l].val[3l]=2u (0x2)
  930: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  930: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  930: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[4l].val[0l]=2u (0x2)
  930: result.states[0l].seq[4l].val[1l]=1u (0x1)
  930: result.states[0l].seq[4l].val[2l]=2u (0x2)
  930: result.states[0l].seq[4l].val[3l]=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[0l].seq[5l].val[0l]=2u (0x2)
  930: result.states[0l].seq[5l].val[1l]=2u (0x2)
  930: result.states[0l].seq[5l].val[2l]=1u (0x1)
  930: result.states[0l].seq[5l].val[3l]=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[0l].val[0l]=1u (0x1)
  930: result.states[1l].seq[0l].val[1l]=1u (0x1)
  930: result.states[1l].seq[0l].val[2l]=2u (0x2)
  930: result.states[1l].seq[0l].val[3l]=2u (0x2)
  930: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[1l].val[0l]=1u (0x1)
  930: result.states[1l].seq[1l].val[1l]=2u (0x2)
  930: result.states[1l].seq[1l].val[2l]=1u (0x1)
  930: result.states[1l].seq[1l].val[3l]=2u (0x2)
  930: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[2l].val[0l]=1u (0x1)
  930: result.states[1l].seq[2l].val[1l]=2u (0x2)
  930: result.states[1l].seq[2l].val[2l]=2u (0x2)
  930: result.states[1l].seq[2l].val[3l]=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  930: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  930: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[3l].val[0l]=2u (0x2)
  930: result.states[1l].seq[3l].val[1l]=1u (0x1)
  930: result.states[1l].seq[3l].val[2l]=1u (0x1)
  930: result.states[1l].seq[3l].val[3l]=2u (0x2)
  930: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[4l].val[0l]=2u (0x2)
  930: result.states[1l].seq[4l].val[1l]=1u (0x1)
  930: result.states[1l].seq[4l].val[2l]=2u (0x2)
  930: result.states[1l].seq[4l].val[3l]=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  930: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  930: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  930: result.states[1l].seq[4l].probs.frac[3l].den=1u (0x1)
  930: result.states[1l].seq[5l].val[0l]=2u (0x2)
  930: result.states[1l].seq[5l].val[1l]=2u (0x2)
  930: result.states[1l].seq[5l].val[2l]=1u (0x1)
  930: result.states[1l].seq[5l].val[3l]=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  930: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  930: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[(signed long int)turnIdx].seq[4l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[0l].val[0l]=1u (0x1)
  933: result.states[0l].seq[0l].val[1l]=1u (0x1)
  933: result.states[0l].seq[0l].val[2l]=2u (0x2)
  933: result.states[0l].seq[0l].val[3l]=2u (0x2)
  933: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[1l].val[0l]=1u (0x1)
  933: result.states[0l].seq[1l].val[1l]=2u (0x2)
  933: result.states[0l].seq[1l].val[2l]=1u (0x1)
  933: result.states[0l].seq[1l].val[3l]=2u (0x2)
  933: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  933: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  933: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  933: result.states[0l].seq[2l].val[0l]=1u (0x1)
  933: result.states[0l].seq[2l].val[1l]=2u (0x2)
  933: result.states[0l].seq[2l].val[2l]=2u (0x2)
  933: result.states[0l].seq[2l].val[3l]=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[3l].val[0l]=2u (0x2)
  933: result.states[0l].seq[3l].val[1l]=1u (0x1)
  933: result.states[0l].seq[3l].val[2l]=1u (0x1)
  933: result.states[0l].seq[3l].val[3l]=2u (0x2)
  933: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  933: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  933: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[4l].val[0l]=2u (0x2)
  933: result.states[0l].seq[4l].val[1l]=1u (0x1)
  933: result.states[0l].seq[4l].val[2l]=2u (0x2)
  933: result.states[0l].seq[4l].val[3l]=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  933: result.states[0l].seq[5l].val[0l]=2u (0x2)
  933: result.states[0l].seq[5l].val[1l]=2u (0x2)
  933: result.states[0l].seq[5l].val[2l]=1u (0x1)
  933: result.states[0l].seq[5l].val[3l]=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[0l].val[0l]=1u (0x1)
  933: result.states[1l].seq[0l].val[1l]=1u (0x1)
  933: result.states[1l].seq[0l].val[2l]=2u (0x2)
  933: result.states[1l].seq[0l].val[3l]=2u (0x2)
  933: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[1l].val[0l]=1u (0x1)
  933: result.states[1l].seq[1l].val[1l]=2u (0x2)
  933: result.states[1l].seq[1l].val[2l]=1u (0x1)
  933: result.states[1l].seq[1l].val[3l]=2u (0x2)
  933: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[2l].val[0l]=1u (0x1)
  933: result.states[1l].seq[2l].val[1l]=2u (0x2)
  933: result.states[1l].seq[2l].val[2l]=2u (0x2)
  933: result.states[1l].seq[2l].val[3l]=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  933: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  933: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[3l].val[0l]=2u (0x2)
  933: result.states[1l].seq[3l].val[1l]=1u (0x1)
  933: result.states[1l].seq[3l].val[2l]=1u (0x1)
  933: result.states[1l].seq[3l].val[3l]=2u (0x2)
  933: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  933: result.states[1l].seq[4l].val[0l]=2u (0x2)
  933: result.states[1l].seq[4l].val[1l]=1u (0x1)
  933: result.states[1l].seq[4l].val[2l]=2u (0x2)
  933: result.states[1l].seq[4l].val[3l]=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  933: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  933: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  933: result.states[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  933: result.states[1l].seq[5l].val[0l]=2u (0x2)
  933: result.states[1l].seq[5l].val[1l]=2u (0x2)
  933: result.states[1l].seq[5l].val[2l]=1u (0x1)
  933: result.states[1l].seq[5l].val[3l]=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  933: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  933: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  927: j=4u (0x4)
  919: i=5u (0x5)
  920: seq={ .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  920: seq.val[0l]=2u (0x2)
  920: seq.val[1l]=2u (0x2)
  920: seq.val[2l]=1u (0x1)
  920: seq.val[3l]=1u (0x1)
  920: seq.probs.frac[0l].num=0u (0x0)
  920: seq.probs.frac[0l].den=1u (0x1)
  920: seq.probs.frac[1l].num=0u (0x0)
  920: seq.probs.frac[1l].den=1u (0x1)
  920: seq.probs.frac[2l].num=0u (0x0)
  920: seq.probs.frac[2l].den=1u (0x1)
  920: seq.probs.frac[3l].num=0u (0x0)
  920: seq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:921 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  921: probs.frac[0l].num=0u (0x0)
  921: probs.frac[0l].den=1u (0x1)
  921: probs.frac[1l].num=0u (0x0)
  921: probs.frac[1l].den=1u (0x1)
  921: probs.frac[2l].num=0u (0x0)
  921: probs.frac[2l].den=1u (0x1)
  921: probs.frac[3l].num=0u (0x0)
  921: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  919: i=6u (0x6)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].val[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].val[1l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].val[2l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].val[3l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].val[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].val[1l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].val[2l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].val[3l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].val[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].val[1l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].val[2l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].val[3l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].val[0l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].val[1l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].val[2l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].val[3l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].val[0l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].val[1l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].val[2l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].val[3l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].val[0l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].val[1l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].val[2l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].val[3l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].val[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].val[1l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].val[2l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].val[3l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].val[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].val[1l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].val[2l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].val[3l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].val[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].val[1l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].val[2l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].val[3l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].val[0l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].val[1l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].val[2l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].val[3l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].val[0l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].val[1l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].val[2l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].val[3l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].val[0l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].val[1l]=2u (0x2)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].val[2l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].val[3l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  939: goto_symex$$return_value$$copyObservations.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.isUsed[0l]=1u (0x1)
  939: goto_symex$$return_value$$copyObservations.isUsed[1l]=1u (0x1)
↵
  953: return_value_copyObservations.states[0l].seq[0l].val[0l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[0l].val[1l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[0l].val[2l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[0l].val[3l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[1l].val[0l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[1l].val[1l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[1l].val[2l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[1l].val[3l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  953: return_value_copyObservations.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  953: return_value_copyObservations.states[0l].seq[2l].val[0l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[2l].val[1l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[2l].val[2l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[2l].val[3l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[3l].val[0l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[3l].val[1l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[3l].val[2l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[3l].val[3l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[4l].val[0l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[4l].val[1l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[4l].val[2l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[4l].val[3l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[5l].val[0l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[5l].val[1l]=2u (0x2)
  953: return_value_copyObservations.states[0l].seq[5l].val[2l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[5l].val[3l]=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[0l].val[0l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[0l].val[1l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[0l].val[2l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[0l].val[3l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[1l].val[0l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[1l].val[1l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[1l].val[2l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[1l].val[3l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[2l].val[0l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[2l].val[1l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[2l].val[2l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[2l].val[3l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[3l].val[0l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[3l].val[1l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[3l].val[2l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[3l].val[3l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[4l].val[0l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[4l].val[1l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[4l].val[2l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[4l].val[3l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  953: return_value_copyObservations.states[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  953: return_value_copyObservations.states[1l].seq[5l].val[0l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[5l].val[1l]=2u (0x2)
  953: return_value_copyObservations.states[1l].seq[5l].val[2l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[5l].val[3l]=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  953: return_value_copyObservations.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  953: return_value_copyObservations.isUsed[0l]=1u (0x1)
  953: return_value_copyObservations.isUsed[1l]=1u (0x1)
  953: result.states={ { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } }, 
    { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } } } ({ { { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } } }, { { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } } } })
  953: result.states[0l].seq[0l].val[0l]=1u (0x1)
  953: result.states[0l].seq[0l].val[1l]=1u (0x1)
  953: result.states[0l].seq[0l].val[2l]=2u (0x2)
  953: result.states[0l].seq[0l].val[3l]=2u (0x2)
  953: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  953: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  953: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  953: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  953: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  953: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  953: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  953: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  953: result.states[0l].seq[1l].val[0l]=1u (0x1)
  953: result.states[0l].seq[1l].val[1l]=2u (0x2)
  953: result.states[0l].seq[1l].val[2l]=1u (0x1)
  953: result.states[0l].seq[1l].val[3l]=2u (0x2)
  953: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  953: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  953: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  953: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  953: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  953: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  953: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  953: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  953: result.states[0l].seq[2l].val[0l]=1u (0x1)
  953: result.states[0l].seq[2l].val[1l]=2u (0x2)
  953: result.states[0l].seq[2l].val[2l]=2u (0x2)
  953: result.states[0l].seq[2l].val[3l]=1u (0x1)
  953: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  953: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  953: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  953: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  953: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  953: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  953: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  953: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  953: result.states[0l].seq[3l].val[0l]=2u (0x2)
  953: result.states[0l].seq[3l].val[1l]=1u (0x1)
  953: result.states[0l].seq[3l].val[2l]=1u (0x1)
  953: result.states[0l].seq[3l].val[3l]=2u (0x2)
  953: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  953: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  953: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  953: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  953: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  953: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  953: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  953: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  953: result.states[0l].seq[4l].val[0l]=2u (0x2)
  953: result.states[0l].seq[4l].val[1l]=1u (0x1)
  953: result.states[0l].seq[4l].val[2l]=2u (0x2)
  953: result.states[0l].seq[4l].val[3l]=1u (0x1)
  953: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  953: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  953: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  953: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  953: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  953: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  953: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  953: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  953: result.states[0l].seq[5l].val[0l]=2u (0x2)
  953: result.states[0l].seq[5l].val[1l]=2u (0x2)
  953: result.states[0l].seq[5l].val[2l]=1u (0x1)
  953: result.states[0l].seq[5l].val[3l]=1u (0x1)
  953: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  953: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  953: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  953: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  953: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  953: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  953: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  953: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  953: result.states[1l].seq[0l].val[0l]=1u (0x1)
  953: result.states[1l].seq[0l].val[1l]=1u (0x1)
  953: result.states[1l].seq[0l].val[2l]=2u (0x2)
  953: result.states[1l].seq[0l].val[3l]=2u (0x2)
  953: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  953: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  953: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  953: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  953: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  953: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  953: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  953: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  953: result.states[1l].seq[1l].val[0l]=1u (0x1)
  953: result.states[1l].seq[1l].val[1l]=2u (0x2)
  953: result.states[1l].seq[1l].val[2l]=1u (0x1)
  953: result.states[1l].seq[1l].val[3l]=2u (0x2)
  953: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  953: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  953: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  953: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  953: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  953: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  953: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  953: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  953: result.states[1l].seq[2l].val[0l]=1u (0x1)
  953: result.states[1l].seq[2l].val[1l]=2u (0x2)
  953: result.states[1l].seq[2l].val[2l]=2u (0x2)
  953: result.states[1l].seq[2l].val[3l]=1u (0x1)
  953: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  953: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  953: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  953: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  953: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  953: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  953: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  953: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  953: result.states[1l].seq[3l].val[0l]=2u (0x2)
  953: result.states[1l].seq[3l].val[1l]=1u (0x1)
  953: result.states[1l].seq[3l].val[2l]=1u (0x1)
  953: result.states[1l].seq[3l].val[3l]=2u (0x2)
  953: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  953: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  953: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  953: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  953: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  953: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  953: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  953: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  953: result.states[1l].seq[4l].val[0l]=2u (0x2)
  953: result.states[1l].seq[4l].val[1l]=1u (0x1)
  953: result.states[1l].seq[4l].val[2l]=2u (0x2)
  953: result.states[1l].seq[4l].val[3l]=1u (0x1)
  953: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  953: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  953: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  953: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  953: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  953: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  953: result.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  953: result.states[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  953: result.states[1l].seq[5l].val[0l]=2u (0x2)
  953: result.states[1l].seq[5l].val[1l]=2u (0x2)
  953: result.states[1l].seq[5l].val[2l]=1u (0x1)
  953: result.states[1l].seq[5l].val[3l]=1u (0x1)
  953: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  953: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  953: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  953: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  953: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  953: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  953: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  953: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  953: result.isUsed={ 1u, 1u } ({ 0x1, 0x1 })
  953: result.isUsed[0l]=1u (0x1)
  953: result.isUsed[1l]=1u (0x1)

↳ findTwoCardProtocolXOR.c:969 computeTurnProbabilities({ .states={ { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } }, 
    { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } } }, .isUsed={ 1u, 1u } })
  969: result.states[0l].seq[0l].val[0l]=1u (0x1)
  969: result.states[0l].seq[0l].val[1l]=1u (0x1)
  969: result.states[0l].seq[0l].val[2l]=2u (0x2)
  969: result.states[0l].seq[0l].val[3l]=2u (0x2)
  969: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  969: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  969: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  969: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  969: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  969: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  969: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  969: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  969: result.states[0l].seq[1l].val[0l]=1u (0x1)
  969: result.states[0l].seq[1l].val[1l]=2u (0x2)
  969: result.states[0l].seq[1l].val[2l]=1u (0x1)
  969: result.states[0l].seq[1l].val[3l]=2u (0x2)
  969: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  969: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  969: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  969: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  969: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  969: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  969: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  969: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  969: result.states[0l].seq[2l].val[0l]=1u (0x1)
  969: result.states[0l].seq[2l].val[1l]=2u (0x2)
  969: result.states[0l].seq[2l].val[2l]=2u (0x2)
  969: result.states[0l].seq[2l].val[3l]=1u (0x1)
  969: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  969: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  969: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  969: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  969: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  969: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  969: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  969: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  969: result.states[0l].seq[3l].val[0l]=2u (0x2)
  969: result.states[0l].seq[3l].val[1l]=1u (0x1)
  969: result.states[0l].seq[3l].val[2l]=1u (0x1)
  969: result.states[0l].seq[3l].val[3l]=2u (0x2)
  969: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  969: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  969: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  969: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  969: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  969: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  969: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  969: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  969: result.states[0l].seq[4l].val[0l]=2u (0x2)
  969: result.states[0l].seq[4l].val[1l]=1u (0x1)
  969: result.states[0l].seq[4l].val[2l]=2u (0x2)
  969: result.states[0l].seq[4l].val[3l]=1u (0x1)
  969: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  969: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  969: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  969: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  969: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  969: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  969: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  969: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  969: result.states[0l].seq[5l].val[0l]=2u (0x2)
  969: result.states[0l].seq[5l].val[1l]=2u (0x2)
  969: result.states[0l].seq[5l].val[2l]=1u (0x1)
  969: result.states[0l].seq[5l].val[3l]=1u (0x1)
  969: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  969: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  969: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  969: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  969: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  969: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  969: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  969: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  969: result.states[1l].seq[0l].val[0l]=1u (0x1)
  969: result.states[1l].seq[0l].val[1l]=1u (0x1)
  969: result.states[1l].seq[0l].val[2l]=2u (0x2)
  969: result.states[1l].seq[0l].val[3l]=2u (0x2)
  969: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  969: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  969: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  969: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  969: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  969: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  969: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  969: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  969: result.states[1l].seq[1l].val[0l]=1u (0x1)
  969: result.states[1l].seq[1l].val[1l]=2u (0x2)
  969: result.states[1l].seq[1l].val[2l]=1u (0x1)
  969: result.states[1l].seq[1l].val[3l]=2u (0x2)
  969: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  969: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  969: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  969: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  969: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  969: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  969: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  969: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  969: result.states[1l].seq[2l].val[0l]=1u (0x1)
  969: result.states[1l].seq[2l].val[1l]=2u (0x2)
  969: result.states[1l].seq[2l].val[2l]=2u (0x2)
  969: result.states[1l].seq[2l].val[3l]=1u (0x1)
  969: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  969: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  969: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  969: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  969: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  969: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  969: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  969: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  969: result.states[1l].seq[3l].val[0l]=2u (0x2)
  969: result.states[1l].seq[3l].val[1l]=1u (0x1)
  969: result.states[1l].seq[3l].val[2l]=1u (0x1)
  969: result.states[1l].seq[3l].val[3l]=2u (0x2)
  969: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  969: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  969: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  969: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  969: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  969: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  969: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  969: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  969: result.states[1l].seq[4l].val[0l]=2u (0x2)
  969: result.states[1l].seq[4l].val[1l]=1u (0x1)
  969: result.states[1l].seq[4l].val[2l]=2u (0x2)
  969: result.states[1l].seq[4l].val[3l]=1u (0x1)
  969: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  969: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  969: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  969: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  969: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  969: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  969: result.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  969: result.states[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  969: result.states[1l].seq[5l].val[0l]=2u (0x2)
  969: result.states[1l].seq[5l].val[1l]=2u (0x2)
  969: result.states[1l].seq[5l].val[2l]=1u (0x1)
  969: result.states[1l].seq[5l].val[3l]=1u (0x1)
  969: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  969: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  969: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  969: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  969: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  969: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  969: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  969: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  969: result.isUsed[0l]=1u (0x1)
  969: result.isUsed[1l]=1u (0x1)
  867: i=0u (0x0)
  868: probs.frac[0l].num=0u (0x0)
  870: probs.frac[0l].den=1u (0x1)
  867: i=1u (0x1)
  868: probs.frac[1l].num=0u (0x0)
  870: probs.frac[1l].den=1u (0x1)
  867: i=2u (0x2)
  868: probs.frac[2l].num=0u (0x0)
  870: probs.frac[2l].den=1u (0x1)
  867: i=3u (0x3)
  868: probs.frac[3l].num=0u (0x0)
  870: probs.frac[3l].den=1u (0x1)
  867: i=4u (0x4)
  872: i=0u (0x0)
  874: resultState={ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } } ({ { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } } })
  874: resultState.seq[0l].val[0l]=1u (0x1)
  874: resultState.seq[0l].val[1l]=1u (0x1)
  874: resultState.seq[0l].val[2l]=2u (0x2)
  874: resultState.seq[0l].val[3l]=2u (0x2)
  874: resultState.seq[0l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[0l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[0l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[0l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[1l].val[0l]=1u (0x1)
  874: resultState.seq[1l].val[1l]=2u (0x2)
  874: resultState.seq[1l].val[2l]=1u (0x1)
  874: resultState.seq[1l].val[3l]=2u (0x2)
  874: resultState.seq[1l].probs.frac[0l].num=5u (0x5)
  874: resultState.seq[1l].probs.frac[0l].den=4u (0x4)
  874: resultState.seq[1l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[1l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[1l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[1l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[1l].probs.frac[3l].num=5u (0x5)
  874: resultState.seq[1l].probs.frac[3l].den=4u (0x4)
  874: resultState.seq[2l].val[0l]=1u (0x1)
  874: resultState.seq[2l].val[1l]=2u (0x2)
  874: resultState.seq[2l].val[2l]=2u (0x2)
  874: resultState.seq[2l].val[3l]=1u (0x1)
  874: resultState.seq[2l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[2l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[2l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[2l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[2l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[2l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[2l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[2l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[3l].val[0l]=2u (0x2)
  874: resultState.seq[3l].val[1l]=1u (0x1)
  874: resultState.seq[3l].val[2l]=1u (0x1)
  874: resultState.seq[3l].val[3l]=2u (0x2)
  874: resultState.seq[3l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[3l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[3l].probs.frac[1l].num=5u (0x5)
  874: resultState.seq[3l].probs.frac[1l].den=4u (0x4)
  874: resultState.seq[3l].probs.frac[2l].num=5u (0x5)
  874: resultState.seq[3l].probs.frac[2l].den=4u (0x4)
  874: resultState.seq[3l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[3l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[4l].val[0l]=2u (0x2)
  874: resultState.seq[4l].val[1l]=1u (0x1)
  874: resultState.seq[4l].val[2l]=2u (0x2)
  874: resultState.seq[4l].val[3l]=1u (0x1)
  874: resultState.seq[4l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[4l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[4l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[4l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[4l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[4l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[4l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[4l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[5l].val[0l]=2u (0x2)
  874: resultState.seq[5l].val[1l]=2u (0x2)
  874: resultState.seq[5l].val[2l]=1u (0x1)
  874: resultState.seq[5l].val[3l]=1u (0x1)
  874: resultState.seq[5l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[5l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[5l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[5l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[3l].den=1u (0x1)
  876: j=0u (0x0)
  877: resultSeq={ .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=1u (0x1)
  877: resultSeq.val[1l]=1u (0x1)
  877: resultSeq.val[2l]=2u (0x2)
  877: resultSeq.val[3l]=2u (0x2)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=1u (0x1)
  877: resultSeq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  877: resultSeq.val[0l]=1u (0x1)
  877: resultSeq.val[1l]=2u (0x2)
  877: resultSeq.val[2l]=1u (0x1)
  877: resultSeq.val[3l]=2u (0x2)
  877: resultSeq.probs.frac[0l].num=5u (0x5)
  877: resultSeq.probs.frac[0l].den=4u (0x4)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=5u (0x5)
  877: resultSeq.probs.frac[3l].den=4u (0x4)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  878: probs.frac[0l].num=5u (0x5)
  878: probs.frac[0l].den=4u (0x4)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=5u (0x5)
  878: probs.frac[3l].den=4u (0x4)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=5u (0x5)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  879: k=0u (0x0)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=0u (0x0)
  884: newDenom=1u (0x1)
  892: probs.frac[0l].num=5u (0x5)
  893: probs.frac[0l].den=4u (0x4)
  879: k=1u (0x1)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=0u (0x0)
  884: newDenom=1u (0x1)
  879: k=2u (0x2)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=0u (0x0)
  884: newDenom=1u (0x1)
  879: k=3u (0x3)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=0u (0x0)
  884: newDenom=1u (0x1)
  892: probs.frac[3l].num=5u (0x5)
  893: probs.frac[3l].den=4u (0x4)
  879: k=4u (0x4)
  876: j=2u (0x2)
  877: resultSeq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=1u (0x1)
  877: resultSeq.val[1l]=2u (0x2)
  877: resultSeq.val[2l]=2u (0x2)
  877: resultSeq.val[3l]=1u (0x1)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=3u (0x3)
  877: resultSeq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=2u (0x2)
  877: resultSeq.val[1l]=1u (0x1)
  877: resultSeq.val[2l]=1u (0x1)
  877: resultSeq.val[3l]=2u (0x2)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=5u (0x5)
  877: resultSeq.probs.frac[1l].den=4u (0x4)
  877: resultSeq.probs.frac[2l].num=5u (0x5)
  877: resultSeq.probs.frac[2l].den=4u (0x4)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=5u (0x5)
  878: probs.frac[1l].den=4u (0x4)
  878: probs.frac[2l].num=5u (0x5)
  878: probs.frac[2l].den=4u (0x4)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  879: k=0u (0x0)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  879: k=1u (0x1)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=0u (0x0)
  884: newDenom=1u (0x1)
  892: probs.frac[1l].num=5u (0x5)
  893: probs.frac[1l].den=4u (0x4)
  879: k=2u (0x2)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=0u (0x0)
  884: newDenom=1u (0x1)
  892: probs.frac[2l].num=5u (0x5)
  893: probs.frac[2l].den=4u (0x4)
  879: k=3u (0x3)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  879: k=4u (0x4)
  876: j=4u (0x4)
  877: resultSeq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=2u (0x2)
  877: resultSeq.val[1l]=1u (0x1)
  877: resultSeq.val[2l]=2u (0x2)
  877: resultSeq.val[3l]=1u (0x1)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=5u (0x5)
  877: resultSeq={ .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=2u (0x2)
  877: resultSeq.val[1l]=2u (0x2)
  877: resultSeq.val[2l]=1u (0x1)
  877: resultSeq.val[3l]=1u (0x1)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=6u (0x6)
  872: i=1u (0x1)
  874: resultState={ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } } ({ { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } } } })
  874: resultState.seq[0l].val[0l]=1u (0x1)
  874: resultState.seq[0l].val[1l]=1u (0x1)
  874: resultState.seq[0l].val[2l]=2u (0x2)
  874: resultState.seq[0l].val[3l]=2u (0x2)
  874: resultState.seq[0l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[0l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[0l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[0l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[0l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[1l].val[0l]=1u (0x1)
  874: resultState.seq[1l].val[1l]=2u (0x2)
  874: resultState.seq[1l].val[2l]=1u (0x1)
  874: resultState.seq[1l].val[3l]=2u (0x2)
  874: resultState.seq[1l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[1l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[1l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[1l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[1l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[1l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[1l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[1l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[2l].val[0l]=1u (0x1)
  874: resultState.seq[2l].val[1l]=2u (0x2)
  874: resultState.seq[2l].val[2l]=2u (0x2)
  874: resultState.seq[2l].val[3l]=1u (0x1)
  874: resultState.seq[2l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[2l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[2l].probs.frac[1l].num=5u (0x5)
  874: resultState.seq[2l].probs.frac[1l].den=4u (0x4)
  874: resultState.seq[2l].probs.frac[2l].num=5u (0x5)
  874: resultState.seq[2l].probs.frac[2l].den=4u (0x4)
  874: resultState.seq[2l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[2l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[3l].val[0l]=2u (0x2)
  874: resultState.seq[3l].val[1l]=1u (0x1)
  874: resultState.seq[3l].val[2l]=1u (0x1)
  874: resultState.seq[3l].val[3l]=2u (0x2)
  874: resultState.seq[3l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[3l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[3l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[3l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[3l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[3l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[3l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[3l].probs.frac[3l].den=1u (0x1)
  874: resultState.seq[4l].val[0l]=2u (0x2)
  874: resultState.seq[4l].val[1l]=1u (0x1)
  874: resultState.seq[4l].val[2l]=2u (0x2)
  874: resultState.seq[4l].val[3l]=1u (0x1)
  874: resultState.seq[4l].probs.frac[0l].num=5u (0x5)
  874: resultState.seq[4l].probs.frac[0l].den=4u (0x4)
  874: resultState.seq[4l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[4l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[4l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[4l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[4l].probs.frac[3l].num=5u (0x5)
  874: resultState.seq[4l].probs.frac[3l].den=4u (0x4)
  874: resultState.seq[5l].val[0l]=2u (0x2)
  874: resultState.seq[5l].val[1l]=2u (0x2)
  874: resultState.seq[5l].val[2l]=1u (0x1)
  874: resultState.seq[5l].val[3l]=1u (0x1)
  874: resultState.seq[5l].probs.frac[0l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[0l].den=1u (0x1)
  874: resultState.seq[5l].probs.frac[1l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[1l].den=1u (0x1)
  874: resultState.seq[5l].probs.frac[2l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[2l].den=1u (0x1)
  874: resultState.seq[5l].probs.frac[3l].num=0u (0x0)
  874: resultState.seq[5l].probs.frac[3l].den=1u (0x1)
  876: j=0u (0x0)
  877: resultSeq={ .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=1u (0x1)
  877: resultSeq.val[1l]=1u (0x1)
  877: resultSeq.val[2l]=2u (0x2)
  877: resultSeq.val[3l]=2u (0x2)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=1u (0x1)
  877: resultSeq={ .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=1u (0x1)
  877: resultSeq.val[1l]=2u (0x2)
  877: resultSeq.val[2l]=1u (0x1)
  877: resultSeq.val[3l]=2u (0x2)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=2u (0x2)
  877: resultSeq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x1 }, { 0x5, 0x4 }, { 0x5, 0x4 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=1u (0x1)
  877: resultSeq.val[1l]=2u (0x2)
  877: resultSeq.val[2l]=2u (0x2)
  877: resultSeq.val[3l]=1u (0x1)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=5u (0x5)
  877: resultSeq.probs.frac[1l].den=4u (0x4)
  877: resultSeq.probs.frac[2l].num=5u (0x5)
  877: resultSeq.probs.frac[2l].den=4u (0x4)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=5u (0x5)
  878: probs.frac[1l].den=4u (0x4)
  878: probs.frac[2l].num=5u (0x5)
  878: probs.frac[2l].den=4u (0x4)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  879: k=0u (0x0)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  879: k=1u (0x1)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  890: probs.frac[1l].num=10u (0xA)
  879: k=2u (0x2)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  890: probs.frac[2l].num=10u (0xA)
  879: k=3u (0x3)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  879: k=4u (0x4)
  876: j=3u (0x3)
  877: resultSeq={ .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=2u (0x2)
  877: resultSeq.val[1l]=1u (0x1)
  877: resultSeq.val[2l]=1u (0x1)
  877: resultSeq.val[3l]=2u (0x2)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=4u (0x4)
  877: resultSeq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x5, 0x4 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x5, 0x4 } } } })
  877: resultSeq.val[0l]=2u (0x2)
  877: resultSeq.val[1l]=1u (0x1)
  877: resultSeq.val[2l]=2u (0x2)
  877: resultSeq.val[3l]=1u (0x1)
  877: resultSeq.probs.frac[0l].num=5u (0x5)
  877: resultSeq.probs.frac[0l].den=4u (0x4)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=5u (0x5)
  877: resultSeq.probs.frac[3l].den=4u (0x4)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } })
  878: probs.frac[0l].num=5u (0x5)
  878: probs.frac[0l].den=4u (0x4)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=5u (0x5)
  878: probs.frac[3l].den=4u (0x4)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=5u (0x5)
  455: i=1u (0x1)
  456: res=5u (0x5)
  455: i=2u (0x2)
  456: res=5u (0x5)
  455: i=3u (0x3)
  456: res=5u (0x5)
  455: i=4u (0x4)
↵
  879: k=0u (0x0)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  890: probs.frac[0l].num=10u (0xA)
  879: k=1u (0x1)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=10u (0xA)
  884: newDenom=4u (0x4)
  879: k=2u (0x2)
  880: prob={ .num=0u, .den=1u } ({ 0x0, 0x1 })
  880: prob.num=0u (0x0)
  880: prob.den=1u (0x1)
  881: num=0u (0x0)
  882: denom=1u (0x1)
  883: newNum=10u (0xA)
  884: newDenom=4u (0x4)
  879: k=3u (0x3)
  880: prob={ .num=5u, .den=4u } ({ 0x5, 0x4 })
  880: prob.num=5u (0x5)
  880: prob.den=4u (0x4)
  881: num=5u (0x5)
  882: denom=4u (0x4)
  883: newNum=5u (0x5)
  884: newDenom=4u (0x4)
  890: probs.frac[3l].num=10u (0xA)
  879: k=4u (0x4)
  876: j=5u (0x5)
  877: resultSeq={ .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } ({ { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 }, { 0x0, 0x1 } } } })
  877: resultSeq.val[0l]=2u (0x2)
  877: resultSeq.val[1l]=2u (0x2)
  877: resultSeq.val[2l]=1u (0x1)
  877: resultSeq.val[3l]=1u (0x1)
  877: resultSeq.probs.frac[0l].num=0u (0x0)
  877: resultSeq.probs.frac[0l].den=1u (0x1)
  877: resultSeq.probs.frac[1l].num=0u (0x0)
  877: resultSeq.probs.frac[1l].den=1u (0x1)
  877: resultSeq.probs.frac[2l].num=0u (0x0)
  877: resultSeq.probs.frac[2l].den=1u (0x1)
  877: resultSeq.probs.frac[3l].num=0u (0x0)
  877: resultSeq.probs.frac[3l].den=1u (0x1)

↳ findTwoCardProtocolXOR.c:878 isStillPossible({ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } })
  878: probs.frac[0l].num=0u (0x0)
  878: probs.frac[0l].den=1u (0x1)
  878: probs.frac[1l].num=0u (0x0)
  878: probs.frac[1l].den=1u (0x1)
  878: probs.frac[2l].num=0u (0x0)
  878: probs.frac[2l].den=1u (0x1)
  878: probs.frac[3l].num=0u (0x0)
  878: probs.frac[3l].den=1u (0x1)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  876: j=6u (0x6)
  872: i=2u (0x2)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[0l].num=10u (0xA)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[0l].den=4u (0x4)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[1l].num=10u (0xA)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[1l].den=4u (0x4)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[2l].num=10u (0xA)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[2l].den=4u (0x4)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[3l].num=10u (0xA)
  900: goto_symex$$return_value$$computeTurnProbabilities.frac[3l].den=4u (0x4)
↵
  969: return_value_computeTurnProbabilities.frac[0l].num=10u (0xA)
  969: return_value_computeTurnProbabilities.frac[0l].den=4u (0x4)
  969: return_value_computeTurnProbabilities.frac[1l].num=10u (0xA)
  969: return_value_computeTurnProbabilities.frac[1l].den=4u (0x4)
  969: return_value_computeTurnProbabilities.frac[2l].num=10u (0xA)
  969: return_value_computeTurnProbabilities.frac[2l].den=4u (0x4)
  969: return_value_computeTurnProbabilities.frac[3l].num=10u (0xA)
  969: return_value_computeTurnProbabilities.frac[3l].den=4u (0x4)
  969: probs.frac={ { .num=10u, .den=4u }, { .num=10u, .den=4u }, { .num=10u, .den=4u }, { .num=10u, .den=4u } } ({ { 0xA, 0x4 }, { 0xA, 0x4 }, { 0xA, 0x4 }, { 0xA, 0x4 } })
  969: probs.frac[0l].num=10u (0xA)
  969: probs.frac[0l].den=4u (0x4)
  969: probs.frac[1l].num=10u (0xA)
  969: probs.frac[1l].den=4u (0x4)
  969: probs.frac[2l].num=10u (0xA)
  969: probs.frac[2l].den=4u (0x4)
  969: probs.frac[3l].num=10u (0xA)
  969: probs.frac[3l].den=4u (0x4)

↳ findTwoCardProtocolXOR.c:970 alignAndAssignFractions({ .states={ { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } }, 
    { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=5u, .den=4u }, { .num=5u, .den=4u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=5u, .den=4u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=5u, .den=4u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u }, { .num=0u, .den=1u } } } } } } }, .isUsed={ 1u, 1u } }, { .frac={ { .num=10u, .den=4u }, { .num=10u, .den=4u }, { .num=10u, .den=4u }, { .num=10u, .den=4u } } })
  970: result.states[0l].seq[0l].val[0l]=1u (0x1)
  970: result.states[0l].seq[0l].val[1l]=1u (0x1)
  970: result.states[0l].seq[0l].val[2l]=2u (0x2)
  970: result.states[0l].seq[0l].val[3l]=2u (0x2)
  970: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[0l].den=1u (0x1)
  970: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[1l].den=1u (0x1)
  970: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[2l].den=1u (0x1)
  970: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[3l].den=1u (0x1)
  970: result.states[0l].seq[1l].val[0l]=1u (0x1)
  970: result.states[0l].seq[1l].val[1l]=2u (0x2)
  970: result.states[0l].seq[1l].val[2l]=1u (0x1)
  970: result.states[0l].seq[1l].val[3l]=2u (0x2)
  970: result.states[0l].seq[1l].probs.frac[0l].num=5u (0x5)
  970: result.states[0l].seq[1l].probs.frac[0l].den=4u (0x4)
  970: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[1l].probs.frac[1l].den=1u (0x1)
  970: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[1l].probs.frac[2l].den=1u (0x1)
  970: result.states[0l].seq[1l].probs.frac[3l].num=5u (0x5)
  970: result.states[0l].seq[1l].probs.frac[3l].den=4u (0x4)
  970: result.states[0l].seq[2l].val[0l]=1u (0x1)
  970: result.states[0l].seq[2l].val[1l]=2u (0x2)
  970: result.states[0l].seq[2l].val[2l]=2u (0x2)
  970: result.states[0l].seq[2l].val[3l]=1u (0x1)
  970: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[0l].den=1u (0x1)
  970: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[1l].den=1u (0x1)
  970: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[2l].den=1u (0x1)
  970: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[3l].den=1u (0x1)
  970: result.states[0l].seq[3l].val[0l]=2u (0x2)
  970: result.states[0l].seq[3l].val[1l]=1u (0x1)
  970: result.states[0l].seq[3l].val[2l]=1u (0x1)
  970: result.states[0l].seq[3l].val[3l]=2u (0x2)
  970: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[3l].probs.frac[0l].den=1u (0x1)
  970: result.states[0l].seq[3l].probs.frac[1l].num=5u (0x5)
  970: result.states[0l].seq[3l].probs.frac[1l].den=4u (0x4)
  970: result.states[0l].seq[3l].probs.frac[2l].num=5u (0x5)
  970: result.states[0l].seq[3l].probs.frac[2l].den=4u (0x4)
  970: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[3l].probs.frac[3l].den=1u (0x1)
  970: result.states[0l].seq[4l].val[0l]=2u (0x2)
  970: result.states[0l].seq[4l].val[1l]=1u (0x1)
  970: result.states[0l].seq[4l].val[2l]=2u (0x2)
  970: result.states[0l].seq[4l].val[3l]=1u (0x1)
  970: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[0l].den=1u (0x1)
  970: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[1l].den=1u (0x1)
  970: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[2l].den=1u (0x1)
  970: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[3l].den=1u (0x1)
  970: result.states[0l].seq[5l].val[0l]=2u (0x2)
  970: result.states[0l].seq[5l].val[1l]=2u (0x2)
  970: result.states[0l].seq[5l].val[2l]=1u (0x1)
  970: result.states[0l].seq[5l].val[3l]=1u (0x1)
  970: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[0l].den=1u (0x1)
  970: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[1l].den=1u (0x1)
  970: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[2l].den=1u (0x1)
  970: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[3l].den=1u (0x1)
  970: result.states[1l].seq[0l].val[0l]=1u (0x1)
  970: result.states[1l].seq[0l].val[1l]=1u (0x1)
  970: result.states[1l].seq[0l].val[2l]=2u (0x2)
  970: result.states[1l].seq[0l].val[3l]=2u (0x2)
  970: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[0l].den=1u (0x1)
  970: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[1l].den=1u (0x1)
  970: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[2l].den=1u (0x1)
  970: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[3l].den=1u (0x1)
  970: result.states[1l].seq[1l].val[0l]=1u (0x1)
  970: result.states[1l].seq[1l].val[1l]=2u (0x2)
  970: result.states[1l].seq[1l].val[2l]=1u (0x1)
  970: result.states[1l].seq[1l].val[3l]=2u (0x2)
  970: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[0l].den=1u (0x1)
  970: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[1l].den=1u (0x1)
  970: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[2l].den=1u (0x1)
  970: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[3l].den=1u (0x1)
  970: result.states[1l].seq[2l].val[0l]=1u (0x1)
  970: result.states[1l].seq[2l].val[1l]=2u (0x2)
  970: result.states[1l].seq[2l].val[2l]=2u (0x2)
  970: result.states[1l].seq[2l].val[3l]=1u (0x1)
  970: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[2l].probs.frac[0l].den=1u (0x1)
  970: result.states[1l].seq[2l].probs.frac[1l].num=5u (0x5)
  970: result.states[1l].seq[2l].probs.frac[1l].den=4u (0x4)
  970: result.states[1l].seq[2l].probs.frac[2l].num=5u (0x5)
  970: result.states[1l].seq[2l].probs.frac[2l].den=4u (0x4)
  970: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[2l].probs.frac[3l].den=1u (0x1)
  970: result.states[1l].seq[3l].val[0l]=2u (0x2)
  970: result.states[1l].seq[3l].val[1l]=1u (0x1)
  970: result.states[1l].seq[3l].val[2l]=1u (0x1)
  970: result.states[1l].seq[3l].val[3l]=2u (0x2)
  970: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[0l].den=1u (0x1)
  970: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[1l].den=1u (0x1)
  970: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[2l].den=1u (0x1)
  970: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[3l].den=1u (0x1)
  970: result.states[1l].seq[4l].val[0l]=2u (0x2)
  970: result.states[1l].seq[4l].val[1l]=1u (0x1)
  970: result.states[1l].seq[4l].val[2l]=2u (0x2)
  970: result.states[1l].seq[4l].val[3l]=1u (0x1)
  970: result.states[1l].seq[4l].probs.frac[0l].num=5u (0x5)
  970: result.states[1l].seq[4l].probs.frac[0l].den=4u (0x4)
  970: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[4l].probs.frac[1l].den=1u (0x1)
  970: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[4l].probs.frac[2l].den=1u (0x1)
  970: result.states[1l].seq[4l].probs.frac[3l].num=5u (0x5)
  970: result.states[1l].seq[4l].probs.frac[3l].den=4u (0x4)
  970: result.states[1l].seq[5l].val[0l]=2u (0x2)
  970: result.states[1l].seq[5l].val[1l]=2u (0x2)
  970: result.states[1l].seq[5l].val[2l]=1u (0x1)
  970: result.states[1l].seq[5l].val[3l]=1u (0x1)
  970: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[0l].den=1u (0x1)
  970: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[1l].den=1u (0x1)
  970: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[2l].den=1u (0x1)
  970: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[3l].den=1u (0x1)
  970: result.isUsed[0l]=1u (0x1)
  970: result.isUsed[1l]=1u (0x1)
  970: probs.frac[0l].num=10u (0xA)
  970: probs.frac[0l].den=4u (0x4)
  970: probs.frac[1l].num=10u (0xA)
  970: probs.frac[1l].den=4u (0x4)
  970: probs.frac[2l].num=10u (0xA)
  970: probs.frac[2l].den=4u (0x4)
  970: probs.frac[3l].num=10u (0xA)
  970: probs.frac[3l].den=4u (0x4)
  834: i=0u (0x0)
  836: newDenominator=1u (0x1)
  843: j=0u (0x0)
  844: k=0u (0x0)
  844: k=1u (0x1)
  846: probs.frac[0l].num=40u (0x28)
  844: k=2u (0x2)
  846: probs.frac[0l].num=160u (0xA0)
  844: k=3u (0x3)
  846: probs.frac[0l].num=640u (0x280)
  844: k=4u (0x4)
  851: newDenominator=4u (0x4)
  843: j=1u (0x1)
  844: k=0u (0x0)
  846: probs.frac[1l].num=40u (0x28)
  844: k=1u (0x1)
  844: k=2u (0x2)
  846: probs.frac[1l].num=160u (0xA0)
  844: k=3u (0x3)
  846: probs.frac[1l].num=640u (0x280)
  844: k=4u (0x4)
  851: newDenominator=16u (0x10)
  843: j=2u (0x2)
  844: k=0u (0x0)
  846: probs.frac[2l].num=40u (0x28)
  844: k=1u (0x1)
  846: probs.frac[2l].num=160u (0xA0)
  844: k=2u (0x2)
  844: k=3u (0x3)
  846: probs.frac[2l].num=640u (0x280)
  844: k=4u (0x4)
  851: newDenominator=64u (0x40)
  843: j=3u (0x3)
  844: k=0u (0x0)
  846: probs.frac[3l].num=40u (0x28)
  844: k=1u (0x1)
  846: probs.frac[3l].num=160u (0xA0)
  844: k=2u (0x2)
  846: probs.frac[3l].num=640u (0x280)
  844: k=3u (0x3)
  844: k=4u (0x4)
  851: newDenominator=256u (0x100)
  843: j=4u (0x4)
  854: j=0u (0x0)
  855: k=0u (0x0)
  856: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  857: result.states[0l].seq[0l].probs.frac[0l].den=640u (0x280)
  855: k=1u (0x1)
  856: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  857: result.states[0l].seq[0l].probs.frac[1l].den=640u (0x280)
  855: k=2u (0x2)
  856: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  857: result.states[0l].seq[0l].probs.frac[2l].den=640u (0x280)
  855: k=3u (0x3)
  856: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  857: result.states[0l].seq[0l].probs.frac[3l].den=640u (0x280)
  855: k=4u (0x4)
  854: j=1u (0x1)
  855: k=0u (0x0)
  856: result.states[0l].seq[1l].probs.frac[0l].num=1280u (0x500)
  857: result.states[0l].seq[1l].probs.frac[0l].den=2560u (0xA00)
  855: k=1u (0x1)
  856: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  857: result.states[0l].seq[1l].probs.frac[1l].den=640u (0x280)
  855: k=2u (0x2)
  856: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  857: result.states[0l].seq[1l].probs.frac[2l].den=640u (0x280)
  855: k=3u (0x3)
  856: result.states[0l].seq[1l].probs.frac[3l].num=1280u (0x500)
  857: result.states[0l].seq[1l].probs.frac[3l].den=2560u (0xA00)
  855: k=4u (0x4)
  854: j=2u (0x2)
  855: k=0u (0x0)
  856: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  857: result.states[0l].seq[2l].probs.frac[0l].den=640u (0x280)
  855: k=1u (0x1)
  856: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  857: result.states[0l].seq[2l].probs.frac[1l].den=640u (0x280)
  855: k=2u (0x2)
  856: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  857: result.states[0l].seq[2l].probs.frac[2l].den=640u (0x280)
  855: k=3u (0x3)
  856: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  857: result.states[0l].seq[2l].probs.frac[3l].den=640u (0x280)
  855: k=4u (0x4)
  854: j=3u (0x3)
  855: k=0u (0x0)
  856: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  857: result.states[0l].seq[3l].probs.frac[0l].den=640u (0x280)
  855: k=1u (0x1)
  856: result.states[0l].seq[3l].probs.frac[1l].num=1280u (0x500)
  857: result.states[0l].seq[3l].probs.frac[1l].den=2560u (0xA00)
  855: k=2u (0x2)
  856: result.states[0l].seq[3l].probs.frac[2l].num=1280u (0x500)
  857: result.states[0l].seq[3l].probs.frac[2l].den=2560u (0xA00)
  855: k=3u (0x3)
  856: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  857: result.states[0l].seq[3l].probs.frac[3l].den=640u (0x280)
  855: k=4u (0x4)
  854: j=4u (0x4)
  855: k=0u (0x0)
  856: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  857: result.states[0l].seq[4l].probs.frac[0l].den=640u (0x280)
  855: k=1u (0x1)
  856: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  857: result.states[0l].seq[4l].probs.frac[1l].den=640u (0x280)
  855: k=2u (0x2)
  856: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  857: result.states[0l].seq[4l].probs.frac[2l].den=640u (0x280)
  855: k=3u (0x3)
  856: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  857: result.states[0l].seq[4l].probs.frac[3l].den=640u (0x280)
  855: k=4u (0x4)
  854: j=5u (0x5)
  855: k=0u (0x0)
  856: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  857: result.states[0l].seq[5l].probs.frac[0l].den=640u (0x280)
  855: k=1u (0x1)
  856: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  857: result.states[0l].seq[5l].probs.frac[1l].den=640u (0x280)
  855: k=2u (0x2)
  856: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  857: result.states[0l].seq[5l].probs.frac[2l].den=640u (0x280)
  855: k=3u (0x3)
  856: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  857: result.states[0l].seq[5l].probs.frac[3l].den=640u (0x280)
  855: k=4u (0x4)
  854: j=6u (0x6)
  834: i=1u (0x1)
  836: newDenominator=1u (0x1)
  843: j=0u (0x0)
  844: k=0u (0x0)
  844: k=1u (0x1)
  846: probs.frac[0l].num=2560u (0xA00)
  844: k=2u (0x2)
  846: probs.frac[0l].num=10240u (0x2800)
  844: k=3u (0x3)
  846: probs.frac[0l].num=40960u (0xA000)
  844: k=4u (0x4)
  851: newDenominator=4u (0x4)
  843: j=1u (0x1)
  844: k=0u (0x0)
  846: probs.frac[1l].num=2560u (0xA00)
  844: k=1u (0x1)
  844: k=2u (0x2)
  846: probs.frac[1l].num=10240u (0x2800)
  844: k=3u (0x3)
  846: probs.frac[1l].num=40960u (0xA000)
  844: k=4u (0x4)
  851: newDenominator=16u (0x10)
  843: j=2u (0x2)
  844: k=0u (0x0)
  846: probs.frac[2l].num=2560u (0xA00)
  844: k=1u (0x1)
  846: probs.frac[2l].num=10240u (0x2800)
  844: k=2u (0x2)
  844: k=3u (0x3)
  846: probs.frac[2l].num=40960u (0xA000)
  844: k=4u (0x4)
  851: newDenominator=64u (0x40)
  843: j=3u (0x3)
  844: k=0u (0x0)
  846: probs.frac[3l].num=2560u (0xA00)
  844: k=1u (0x1)
  846: probs.frac[3l].num=10240u (0x2800)
  844: k=2u (0x2)
  846: probs.frac[3l].num=40960u (0xA000)
  844: k=3u (0x3)
  844: k=4u (0x4)
  851: newDenominator=256u (0x100)
  843: j=4u (0x4)
  854: j=0u (0x0)
  855: k=0u (0x0)
  856: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  857: result.states[1l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  855: k=1u (0x1)
  856: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  857: result.states[1l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  855: k=2u (0x2)
  856: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  857: result.states[1l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  855: k=3u (0x3)
  856: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  857: result.states[1l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  855: k=4u (0x4)
  854: j=1u (0x1)
  855: k=0u (0x0)
  856: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  857: result.states[1l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  855: k=1u (0x1)
  856: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  857: result.states[1l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  855: k=2u (0x2)
  856: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  857: result.states[1l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  855: k=3u (0x3)
  856: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  857: result.states[1l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  855: k=4u (0x4)
  854: j=2u (0x2)
  855: k=0u (0x0)
  856: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  857: result.states[1l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  855: k=1u (0x1)
  856: result.states[1l].seq[2l].probs.frac[1l].num=1280u (0x500)
  857: result.states[1l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  855: k=2u (0x2)
  856: result.states[1l].seq[2l].probs.frac[2l].num=1280u (0x500)
  857: result.states[1l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  855: k=3u (0x3)
  856: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  857: result.states[1l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  855: k=4u (0x4)
  854: j=3u (0x3)
  855: k=0u (0x0)
  856: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  857: result.states[1l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  855: k=1u (0x1)
  856: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  857: result.states[1l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  855: k=2u (0x2)
  856: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  857: result.states[1l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  855: k=3u (0x3)
  856: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  857: result.states[1l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  855: k=4u (0x4)
  854: j=4u (0x4)
  855: k=0u (0x0)
  856: result.states[1l].seq[4l].probs.frac[0l].num=1280u (0x500)
  857: result.states[1l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  855: k=1u (0x1)
  856: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  857: result.states[1l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  855: k=2u (0x2)
  856: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  857: result.states[1l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  855: k=3u (0x3)
  856: result.states[1l].seq[4l].probs.frac[3l].num=1280u (0x500)
  857: result.states[1l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  855: k=4u (0x4)
  854: j=5u (0x5)
  855: k=0u (0x0)
  856: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  857: result.states[1l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  855: k=1u (0x1)
  856: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  857: result.states[1l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  855: k=2u (0x2)
  856: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  857: result.states[1l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  855: k=3u (0x3)
  856: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  857: result.states[1l].seq[5l].probs.frac[3l].den=40960u (0xA000)
  855: k=4u (0x4)
  854: j=6u (0x6)
  834: i=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].val[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].val[1l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].val[2l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].val[3l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[0l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[1l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[2l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[0l].probs.frac[3l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].val[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].val[1l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].val[2l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].val[3l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[0l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[0l].den=2560u (0xA00)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[1l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[2l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[3l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[1l].probs.frac[3l].den=2560u (0xA00)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].val[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].val[1l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].val[2l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].val[3l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[0l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[1l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[2l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[2l].probs.frac[3l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].val[0l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].val[1l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].val[2l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].val[3l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[0l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[1l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[1l].den=2560u (0xA00)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[2l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[2l].den=2560u (0xA00)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[3l].probs.frac[3l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].val[0l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].val[1l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].val[2l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].val[3l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[0l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[1l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[2l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[4l].probs.frac[3l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].val[0l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].val[1l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].val[2l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].val[3l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[0l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[1l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[2l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[0l].seq[5l].probs.frac[3l].den=640u (0x280)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].val[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].val[1l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].val[2l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].val[3l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].val[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].val[1l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].val[2l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].val[3l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].val[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].val[1l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].val[2l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].val[3l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[1l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[2l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].val[0l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].val[1l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].val[2l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].val[3l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].val[0l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].val[1l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].val[2l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].val[3l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[0l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[3l].num=1280u (0x500)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].val[0l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].val[1l]=2u (0x2)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].val[2l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].val[3l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  862: goto_symex$$return_value$$alignAndAssignFractions.states[1l].seq[5l].probs.frac[3l].den=40960u (0xA000)
  862: goto_symex$$return_value$$alignAndAssignFractions.isUsed[0l]=1u (0x1)
  862: goto_symex$$return_value$$alignAndAssignFractions.isUsed[1l]=1u (0x1)
↵
  970: result.states={ { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1280u, .den=2560u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=1280u, .den=2560u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=1280u, .den=2560u }, { .num=1280u, .den=2560u }, { .num=0u, .den=640u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } } } }, 
    { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } } } } } ({ { { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x500, 0xA00 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x500, 0xA00 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x280 }, { 0x500, 0xA00 }, { 0x500, 0xA00 }, { 0x0, 0x280 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } } } }, { { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0xA000 }, { 0x500, 0x28000 }, { 0x500, 0x28000 }, { 0x0, 0xA000 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x500, 0x28000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x500, 0x28000 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } } } } })
  970: result.states[0l].seq[0l].val[0l]=1u (0x1)
  970: result.states[0l].seq[0l].val[1l]=1u (0x1)
  970: result.states[0l].seq[0l].val[2l]=2u (0x2)
  970: result.states[0l].seq[0l].val[3l]=2u (0x2)
  970: result.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[0l].den=640u (0x280)
  970: result.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[1l].den=640u (0x280)
  970: result.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[2l].den=640u (0x280)
  970: result.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[0l].probs.frac[3l].den=640u (0x280)
  970: result.states[0l].seq[1l].val[0l]=1u (0x1)
  970: result.states[0l].seq[1l].val[1l]=2u (0x2)
  970: result.states[0l].seq[1l].val[2l]=1u (0x1)
  970: result.states[0l].seq[1l].val[3l]=2u (0x2)
  970: result.states[0l].seq[1l].probs.frac[0l].num=1280u (0x500)
  970: result.states[0l].seq[1l].probs.frac[0l].den=2560u (0xA00)
  970: result.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[1l].probs.frac[1l].den=640u (0x280)
  970: result.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[1l].probs.frac[2l].den=640u (0x280)
  970: result.states[0l].seq[1l].probs.frac[3l].num=1280u (0x500)
  970: result.states[0l].seq[1l].probs.frac[3l].den=2560u (0xA00)
  970: result.states[0l].seq[2l].val[0l]=1u (0x1)
  970: result.states[0l].seq[2l].val[1l]=2u (0x2)
  970: result.states[0l].seq[2l].val[2l]=2u (0x2)
  970: result.states[0l].seq[2l].val[3l]=1u (0x1)
  970: result.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[0l].den=640u (0x280)
  970: result.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[1l].den=640u (0x280)
  970: result.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[2l].den=640u (0x280)
  970: result.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[2l].probs.frac[3l].den=640u (0x280)
  970: result.states[0l].seq[3l].val[0l]=2u (0x2)
  970: result.states[0l].seq[3l].val[1l]=1u (0x1)
  970: result.states[0l].seq[3l].val[2l]=1u (0x1)
  970: result.states[0l].seq[3l].val[3l]=2u (0x2)
  970: result.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[3l].probs.frac[0l].den=640u (0x280)
  970: result.states[0l].seq[3l].probs.frac[1l].num=1280u (0x500)
  970: result.states[0l].seq[3l].probs.frac[1l].den=2560u (0xA00)
  970: result.states[0l].seq[3l].probs.frac[2l].num=1280u (0x500)
  970: result.states[0l].seq[3l].probs.frac[2l].den=2560u (0xA00)
  970: result.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[3l].probs.frac[3l].den=640u (0x280)
  970: result.states[0l].seq[4l].val[0l]=2u (0x2)
  970: result.states[0l].seq[4l].val[1l]=1u (0x1)
  970: result.states[0l].seq[4l].val[2l]=2u (0x2)
  970: result.states[0l].seq[4l].val[3l]=1u (0x1)
  970: result.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[0l].den=640u (0x280)
  970: result.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[1l].den=640u (0x280)
  970: result.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[2l].den=640u (0x280)
  970: result.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[4l].probs.frac[3l].den=640u (0x280)
  970: result.states[0l].seq[5l].val[0l]=2u (0x2)
  970: result.states[0l].seq[5l].val[1l]=2u (0x2)
  970: result.states[0l].seq[5l].val[2l]=1u (0x1)
  970: result.states[0l].seq[5l].val[3l]=1u (0x1)
  970: result.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[0l].den=640u (0x280)
  970: result.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[1l].den=640u (0x280)
  970: result.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[2l].den=640u (0x280)
  970: result.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  970: result.states[0l].seq[5l].probs.frac[3l].den=640u (0x280)
  970: result.states[1l].seq[0l].val[0l]=1u (0x1)
  970: result.states[1l].seq[0l].val[1l]=1u (0x1)
  970: result.states[1l].seq[0l].val[2l]=2u (0x2)
  970: result.states[1l].seq[0l].val[3l]=2u (0x2)
  970: result.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  970: result.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  970: result.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  970: result.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  970: result.states[1l].seq[1l].val[0l]=1u (0x1)
  970: result.states[1l].seq[1l].val[1l]=2u (0x2)
  970: result.states[1l].seq[1l].val[2l]=1u (0x1)
  970: result.states[1l].seq[1l].val[3l]=2u (0x2)
  970: result.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  970: result.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  970: result.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  970: result.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  970: result.states[1l].seq[2l].val[0l]=1u (0x1)
  970: result.states[1l].seq[2l].val[1l]=2u (0x2)
  970: result.states[1l].seq[2l].val[2l]=2u (0x2)
  970: result.states[1l].seq[2l].val[3l]=1u (0x1)
  970: result.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  970: result.states[1l].seq[2l].probs.frac[1l].num=1280u (0x500)
  970: result.states[1l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  970: result.states[1l].seq[2l].probs.frac[2l].num=1280u (0x500)
  970: result.states[1l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  970: result.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  970: result.states[1l].seq[3l].val[0l]=2u (0x2)
  970: result.states[1l].seq[3l].val[1l]=1u (0x1)
  970: result.states[1l].seq[3l].val[2l]=1u (0x1)
  970: result.states[1l].seq[3l].val[3l]=2u (0x2)
  970: result.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  970: result.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  970: result.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  970: result.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  970: result.states[1l].seq[4l].val[0l]=2u (0x2)
  970: result.states[1l].seq[4l].val[1l]=1u (0x1)
  970: result.states[1l].seq[4l].val[2l]=2u (0x2)
  970: result.states[1l].seq[4l].val[3l]=1u (0x1)
  970: result.states[1l].seq[4l].probs.frac[0l].num=1280u (0x500)
  970: result.states[1l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  970: result.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  970: result.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  970: result.states[1l].seq[4l].probs.frac[3l].num=1280u (0x500)
  970: result.states[1l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  970: result.states[1l].seq[5l].val[0l]=2u (0x2)
  970: result.states[1l].seq[5l].val[1l]=2u (0x2)
  970: result.states[1l].seq[5l].val[2l]=1u (0x1)
  970: result.states[1l].seq[5l].val[3l]=1u (0x1)
  970: result.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  970: result.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  970: result.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  970: result.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  970: result.states[1l].seq[5l].probs.frac[3l].den=40960u (0xA000)
  970: result.isUsed={ 1u, 1u } ({ 0x1, 0x1 })
  970: result.isUsed[0l]=1u (0x1)
  970: result.isUsed[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].val[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].val[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].val[2l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].val[3l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[0l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[1l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[2l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[0l].probs.frac[3l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].val[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].val[1l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].val[2l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].val[3l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[0l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[0l].den=2560u (0xA00)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[1l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[2l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[3l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[1l].probs.frac[3l].den=2560u (0xA00)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].val[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].val[1l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].val[2l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].val[3l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[0l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[1l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[2l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[2l].probs.frac[3l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].val[0l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].val[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].val[2l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].val[3l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[0l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[1l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[1l].den=2560u (0xA00)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[2l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[2l].den=2560u (0xA00)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[3l].probs.frac[3l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].val[0l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].val[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].val[2l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].val[3l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[0l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[1l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[2l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[4l].probs.frac[3l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].val[0l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].val[1l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].val[2l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].val[3l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[0l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[1l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[2l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[0l].seq[5l].probs.frac[3l].den=640u (0x280)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].val[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].val[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].val[2l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].val[3l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].val[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].val[1l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].val[2l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].val[3l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].val[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].val[1l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].val[2l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].val[3l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[1l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[2l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].val[0l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].val[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].val[2l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].val[3l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].val[0l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].val[1l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].val[2l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].val[3l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[0l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[3l].num=1280u (0x500)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].val[0l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].val[1l]=2u (0x2)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].val[2l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].val[3l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  973: goto_symex$$return_value$$applyTurn.states[1l].seq[5l].probs.frac[3l].den=40960u (0xA000)
  973: goto_symex$$return_value$$applyTurn.isUsed[0l]=1u (0x1)
  973: goto_symex$$return_value$$applyTurn.isUsed[1l]=1u (0x1)
↵
  1006: return_value_applyTurn.states[0l].seq[0l].val[0l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[0l].val[1l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[0l].val[2l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[0l].val[3l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[0l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[1l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[2l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[0l].probs.frac[3l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[1l].val[0l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[1l].val[1l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[1l].val[2l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[1l].val[3l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[0l].num=1280u (0x500)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[0l].den=2560u (0xA00)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[1l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[2l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[3l].num=1280u (0x500)
  1006: return_value_applyTurn.states[0l].seq[1l].probs.frac[3l].den=2560u (0xA00)
  1006: return_value_applyTurn.states[0l].seq[2l].val[0l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[2l].val[1l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[2l].val[2l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[2l].val[3l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[0l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[1l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[2l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[2l].probs.frac[3l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[3l].val[0l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[3l].val[1l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[3l].val[2l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[3l].val[3l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[0l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[1l].num=1280u (0x500)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[1l].den=2560u (0xA00)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[2l].num=1280u (0x500)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[2l].den=2560u (0xA00)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[3l].probs.frac[3l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[4l].val[0l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[4l].val[1l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[4l].val[2l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[4l].val[3l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[0l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[1l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[2l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[4l].probs.frac[3l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[5l].val[0l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[5l].val[1l]=2u (0x2)
  1006: return_value_applyTurn.states[0l].seq[5l].val[2l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[5l].val[3l]=1u (0x1)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[0l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[1l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[2l].den=640u (0x280)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[0l].seq[5l].probs.frac[3l].den=640u (0x280)
  1006: return_value_applyTurn.states[1l].seq[0l].val[0l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[0l].val[1l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[0l].val[2l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[0l].val[3l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[1l].val[0l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[1l].val[1l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[1l].val[2l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[1l].val[3l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[2l].val[0l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[2l].val[1l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[2l].val[2l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[2l].val[3l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[1l].num=1280u (0x500)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[2l].num=1280u (0x500)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[3l].val[0l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[3l].val[1l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[3l].val[2l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[3l].val[3l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[4l].val[0l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[4l].val[1l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[4l].val[2l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[4l].val[3l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[0l].num=1280u (0x500)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[3l].num=1280u (0x500)
  1006: return_value_applyTurn.states[1l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  1006: return_value_applyTurn.states[1l].seq[5l].val[0l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[5l].val[1l]=2u (0x2)
  1006: return_value_applyTurn.states[1l].seq[5l].val[2l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[5l].val[3l]=1u (0x1)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  1006: return_value_applyTurn.states[1l].seq[5l].probs.frac[3l].den=40960u (0xA000)
  1006: return_value_applyTurn.isUsed[0l]=1u (0x1)
  1006: return_value_applyTurn.isUsed[1l]=1u (0x1)
  1006: possiblePostStates.states={ { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=1280u, .den=2560u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=1280u, .den=2560u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=1280u, .den=2560u }, { .num=1280u, .den=2560u }, { .num=0u, .den=640u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u }, { .num=0u, .den=640u } } } } } }, 
    { .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } } } } } ({ { { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x500, 0xA00 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x500, 0xA00 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0x280 }, { 0x500, 0xA00 }, { 0x500, 0xA00 }, { 0x0, 0x280 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 }, { 0x0, 0x280 } } } } } }, { { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0xA000 }, { 0x500, 0x28000 }, { 0x500, 0x28000 }, { 0x0, 0xA000 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x500, 0x28000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x500, 0x28000 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } } } } })
  1006: possiblePostStates.states[0l].seq[0l].val[0l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[0l].val[1l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[0l].val[2l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[0l].val[3l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[0l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[1l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[2l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[0l].probs.frac[3l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[1l].val[0l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[1l].val[1l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[1l].val[2l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[1l].val[3l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[0l].num=1280u (0x500)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[0l].den=2560u (0xA00)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[1l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[2l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[3l].num=1280u (0x500)
  1006: possiblePostStates.states[0l].seq[1l].probs.frac[3l].den=2560u (0xA00)
  1006: possiblePostStates.states[0l].seq[2l].val[0l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[2l].val[1l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[2l].val[2l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[2l].val[3l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[0l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[1l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[2l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[2l].probs.frac[3l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[3l].val[0l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[3l].val[1l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[3l].val[2l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[3l].val[3l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[0l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[1l].num=1280u (0x500)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[1l].den=2560u (0xA00)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[2l].num=1280u (0x500)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[2l].den=2560u (0xA00)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[3l].probs.frac[3l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[4l].val[0l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[4l].val[1l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[4l].val[2l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[4l].val[3l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[0l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[1l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[2l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[4l].probs.frac[3l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[5l].val[0l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[5l].val[1l]=2u (0x2)
  1006: possiblePostStates.states[0l].seq[5l].val[2l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[5l].val[3l]=1u (0x1)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[0l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[1l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[2l].den=640u (0x280)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[0l].seq[5l].probs.frac[3l].den=640u (0x280)
  1006: possiblePostStates.states[1l].seq[0l].val[0l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[0l].val[1l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[0l].val[2l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[0l].val[3l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[1l].val[0l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[1l].val[1l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[1l].val[2l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[1l].val[3l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[2l].val[0l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[2l].val[1l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[2l].val[2l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[2l].val[3l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[1l].num=1280u (0x500)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[2l].num=1280u (0x500)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[3l].val[0l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[3l].val[1l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[3l].val[2l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[3l].val[3l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[4l].val[0l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[4l].val[1l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[4l].val[2l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[4l].val[3l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[0l].num=1280u (0x500)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[3l].num=1280u (0x500)
  1006: possiblePostStates.states[1l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  1006: possiblePostStates.states[1l].seq[5l].val[0l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[5l].val[1l]=2u (0x2)
  1006: possiblePostStates.states[1l].seq[5l].val[2l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[5l].val[3l]=1u (0x1)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[0l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[1l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[2l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[3l].num=0u (0x0)
  1006: possiblePostStates.states[1l].seq[5l].probs.frac[3l].den=40960u (0xA000)
  1006: possiblePostStates.isUsed={ 1u, 1u } ({ 0x1, 0x1 })
  1006: possiblePostStates.isUsed[0l]=1u (0x1)
  1006: possiblePostStates.isUsed[1l]=1u (0x1)
  1013: stateIdx=1u (0x1)
  1016: reachableStates[2l]={ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } } } } ({ { { { 0x1, 0x1, 0x2, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x1, 0x2, 0x1, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0xA000 }, { 0x500, 0x28000 }, { 0x500, 0x28000 }, { 0x0, 0xA000 } } } }, { { 0x2, 0x1, 0x1, 0x2 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } }, { { 0x2, 0x1, 0x2, 0x1 }, { { { 0x500, 0x28000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x500, 0x28000 } } } }, { { 0x2, 0x2, 0x1, 0x1 }, { { { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 } } } } } })
  1016: reachableStates[2l].seq[0l].val[0l]=1u (0x1)
  1016: reachableStates[2l].seq[0l].val[1l]=1u (0x1)
  1016: reachableStates[2l].seq[0l].val[2l]=2u (0x2)
  1016: reachableStates[2l].seq[0l].val[3l]=2u (0x2)
  1016: reachableStates[2l].seq[0l].probs.frac[0l].num=0u (0x0)
  1016: reachableStates[2l].seq[0l].probs.frac[0l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[0l].probs.frac[1l].num=0u (0x0)
  1016: reachableStates[2l].seq[0l].probs.frac[1l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[0l].probs.frac[2l].num=0u (0x0)
  1016: reachableStates[2l].seq[0l].probs.frac[2l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[0l].probs.frac[3l].num=0u (0x0)
  1016: reachableStates[2l].seq[0l].probs.frac[3l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[1l].val[0l]=1u (0x1)
  1016: reachableStates[2l].seq[1l].val[1l]=2u (0x2)
  1016: reachableStates[2l].seq[1l].val[2l]=1u (0x1)
  1016: reachableStates[2l].seq[1l].val[3l]=2u (0x2)
  1016: reachableStates[2l].seq[1l].probs.frac[0l].num=0u (0x0)
  1016: reachableStates[2l].seq[1l].probs.frac[0l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[1l].probs.frac[1l].num=0u (0x0)
  1016: reachableStates[2l].seq[1l].probs.frac[1l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[1l].probs.frac[2l].num=0u (0x0)
  1016: reachableStates[2l].seq[1l].probs.frac[2l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[1l].probs.frac[3l].num=0u (0x0)
  1016: reachableStates[2l].seq[1l].probs.frac[3l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[2l].val[0l]=1u (0x1)
  1016: reachableStates[2l].seq[2l].val[1l]=2u (0x2)
  1016: reachableStates[2l].seq[2l].val[2l]=2u (0x2)
  1016: reachableStates[2l].seq[2l].val[3l]=1u (0x1)
  1016: reachableStates[2l].seq[2l].probs.frac[0l].num=0u (0x0)
  1016: reachableStates[2l].seq[2l].probs.frac[0l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[2l].probs.frac[1l].num=1280u (0x500)
  1016: reachableStates[2l].seq[2l].probs.frac[1l].den=163840u (0x28000)
  1016: reachableStates[2l].seq[2l].probs.frac[2l].num=1280u (0x500)
  1016: reachableStates[2l].seq[2l].probs.frac[2l].den=163840u (0x28000)
  1016: reachableStates[2l].seq[2l].probs.frac[3l].num=0u (0x0)
  1016: reachableStates[2l].seq[2l].probs.frac[3l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[3l].val[0l]=2u (0x2)
  1016: reachableStates[2l].seq[3l].val[1l]=1u (0x1)
  1016: reachableStates[2l].seq[3l].val[2l]=1u (0x1)
  1016: reachableStates[2l].seq[3l].val[3l]=2u (0x2)
  1016: reachableStates[2l].seq[3l].probs.frac[0l].num=0u (0x0)
  1016: reachableStates[2l].seq[3l].probs.frac[0l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[3l].probs.frac[1l].num=0u (0x0)
  1016: reachableStates[2l].seq[3l].probs.frac[1l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[3l].probs.frac[2l].num=0u (0x0)
  1016: reachableStates[2l].seq[3l].probs.frac[2l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[3l].probs.frac[3l].num=0u (0x0)
  1016: reachableStates[2l].seq[3l].probs.frac[3l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[4l].val[0l]=2u (0x2)
  1016: reachableStates[2l].seq[4l].val[1l]=1u (0x1)
  1016: reachableStates[2l].seq[4l].val[2l]=2u (0x2)
  1016: reachableStates[2l].seq[4l].val[3l]=1u (0x1)
  1016: reachableStates[2l].seq[4l].probs.frac[0l].num=1280u (0x500)
  1016: reachableStates[2l].seq[4l].probs.frac[0l].den=163840u (0x28000)
  1016: reachableStates[2l].seq[4l].probs.frac[1l].num=0u (0x0)
  1016: reachableStates[2l].seq[4l].probs.frac[1l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[4l].probs.frac[2l].num=0u (0x0)
  1016: reachableStates[2l].seq[4l].probs.frac[2l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[4l].probs.frac[3l].num=1280u (0x500)
  1016: reachableStates[2l].seq[4l].probs.frac[3l].den=163840u (0x28000)
  1016: reachableStates[2l].seq[5l].val[0l]=2u (0x2)
  1016: reachableStates[2l].seq[5l].val[1l]=2u (0x2)
  1016: reachableStates[2l].seq[5l].val[2l]=1u (0x1)
  1016: reachableStates[2l].seq[5l].val[3l]=1u (0x1)
  1016: reachableStates[2l].seq[5l].probs.frac[0l].num=0u (0x0)
  1016: reachableStates[2l].seq[5l].probs.frac[0l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[5l].probs.frac[1l].num=0u (0x0)
  1016: reachableStates[2l].seq[5l].probs.frac[1l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[5l].probs.frac[2l].num=0u (0x0)
  1016: reachableStates[2l].seq[5l].probs.frac[2l].den=40960u (0xA000)
  1016: reachableStates[2l].seq[5l].probs.frac[3l].num=0u (0x0)
  1016: reachableStates[2l].seq[5l].probs.frac[3l].den=40960u (0xA000)

↳ findTwoCardProtocolXOR.c:1018 isFinalState({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } } } })
  1018: s.seq[0l].val[0l]=1u (0x1)
  1018: s.seq[0l].val[1l]=1u (0x1)
  1018: s.seq[0l].val[2l]=2u (0x2)
  1018: s.seq[0l].val[3l]=2u (0x2)
  1018: s.seq[0l].probs.frac[0l].num=0u (0x0)
  1018: s.seq[0l].probs.frac[0l].den=40960u (0xA000)
  1018: s.seq[0l].probs.frac[1l].num=0u (0x0)
  1018: s.seq[0l].probs.frac[1l].den=40960u (0xA000)
  1018: s.seq[0l].probs.frac[2l].num=0u (0x0)
  1018: s.seq[0l].probs.frac[2l].den=40960u (0xA000)
  1018: s.seq[0l].probs.frac[3l].num=0u (0x0)
  1018: s.seq[0l].probs.frac[3l].den=40960u (0xA000)
  1018: s.seq[1l].val[0l]=1u (0x1)
  1018: s.seq[1l].val[1l]=2u (0x2)
  1018: s.seq[1l].val[2l]=1u (0x1)
  1018: s.seq[1l].val[3l]=2u (0x2)
  1018: s.seq[1l].probs.frac[0l].num=0u (0x0)
  1018: s.seq[1l].probs.frac[0l].den=40960u (0xA000)
  1018: s.seq[1l].probs.frac[1l].num=0u (0x0)
  1018: s.seq[1l].probs.frac[1l].den=40960u (0xA000)
  1018: s.seq[1l].probs.frac[2l].num=0u (0x0)
  1018: s.seq[1l].probs.frac[2l].den=40960u (0xA000)
  1018: s.seq[1l].probs.frac[3l].num=0u (0x0)
  1018: s.seq[1l].probs.frac[3l].den=40960u (0xA000)
  1018: s.seq[2l].val[0l]=1u (0x1)
  1018: s.seq[2l].val[1l]=2u (0x2)
  1018: s.seq[2l].val[2l]=2u (0x2)
  1018: s.seq[2l].val[3l]=1u (0x1)
  1018: s.seq[2l].probs.frac[0l].num=0u (0x0)
  1018: s.seq[2l].probs.frac[0l].den=40960u (0xA000)
  1018: s.seq[2l].probs.frac[1l].num=1280u (0x500)
  1018: s.seq[2l].probs.frac[1l].den=163840u (0x28000)
  1018: s.seq[2l].probs.frac[2l].num=1280u (0x500)
  1018: s.seq[2l].probs.frac[2l].den=163840u (0x28000)
  1018: s.seq[2l].probs.frac[3l].num=0u (0x0)
  1018: s.seq[2l].probs.frac[3l].den=40960u (0xA000)
  1018: s.seq[3l].val[0l]=2u (0x2)
  1018: s.seq[3l].val[1l]=1u (0x1)
  1018: s.seq[3l].val[2l]=1u (0x1)
  1018: s.seq[3l].val[3l]=2u (0x2)
  1018: s.seq[3l].probs.frac[0l].num=0u (0x0)
  1018: s.seq[3l].probs.frac[0l].den=40960u (0xA000)
  1018: s.seq[3l].probs.frac[1l].num=0u (0x0)
  1018: s.seq[3l].probs.frac[1l].den=40960u (0xA000)
  1018: s.seq[3l].probs.frac[2l].num=0u (0x0)
  1018: s.seq[3l].probs.frac[2l].den=40960u (0xA000)
  1018: s.seq[3l].probs.frac[3l].num=0u (0x0)
  1018: s.seq[3l].probs.frac[3l].den=40960u (0xA000)
  1018: s.seq[4l].val[0l]=2u (0x2)
  1018: s.seq[4l].val[1l]=1u (0x1)
  1018: s.seq[4l].val[2l]=2u (0x2)
  1018: s.seq[4l].val[3l]=1u (0x1)
  1018: s.seq[4l].probs.frac[0l].num=1280u (0x500)
  1018: s.seq[4l].probs.frac[0l].den=163840u (0x28000)
  1018: s.seq[4l].probs.frac[1l].num=0u (0x0)
  1018: s.seq[4l].probs.frac[1l].den=40960u (0xA000)
  1018: s.seq[4l].probs.frac[2l].num=0u (0x0)
  1018: s.seq[4l].probs.frac[2l].den=40960u (0xA000)
  1018: s.seq[4l].probs.frac[3l].num=1280u (0x500)
  1018: s.seq[4l].probs.frac[3l].den=163840u (0x28000)
  1018: s.seq[5l].val[0l]=2u (0x2)
  1018: s.seq[5l].val[1l]=2u (0x2)
  1018: s.seq[5l].val[2l]=1u (0x1)
  1018: s.seq[5l].val[3l]=1u (0x1)
  1018: s.seq[5l].probs.frac[0l].num=0u (0x0)
  1018: s.seq[5l].probs.frac[0l].den=40960u (0xA000)
  1018: s.seq[5l].probs.frac[1l].num=0u (0x0)
  1018: s.seq[5l].probs.frac[1l].den=40960u (0xA000)
  1018: s.seq[5l].probs.frac[2l].num=0u (0x0)
  1018: s.seq[5l].probs.frac[2l].den=40960u (0xA000)
  1018: s.seq[5l].probs.frac[3l].num=0u (0x0)
  1018: s.seq[5l].probs.frac[3l].den=40960u (0xA000)
  591: res=0u (0x0)

↳ findTwoCardProtocolXOR.c:593 isValid({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } } } })
  593: s.seq[0l].val[0l]=1u (0x1)
  593: s.seq[0l].val[1l]=1u (0x1)
  593: s.seq[0l].val[2l]=2u (0x2)
  593: s.seq[0l].val[3l]=2u (0x2)
  593: s.seq[0l].probs.frac[0l].num=0u (0x0)
  593: s.seq[0l].probs.frac[0l].den=40960u (0xA000)
  593: s.seq[0l].probs.frac[1l].num=0u (0x0)
  593: s.seq[0l].probs.frac[1l].den=40960u (0xA000)
  593: s.seq[0l].probs.frac[2l].num=0u (0x0)
  593: s.seq[0l].probs.frac[2l].den=40960u (0xA000)
  593: s.seq[0l].probs.frac[3l].num=0u (0x0)
  593: s.seq[0l].probs.frac[3l].den=40960u (0xA000)
  593: s.seq[1l].val[0l]=1u (0x1)
  593: s.seq[1l].val[1l]=2u (0x2)
  593: s.seq[1l].val[2l]=1u (0x1)
  593: s.seq[1l].val[3l]=2u (0x2)
  593: s.seq[1l].probs.frac[0l].num=0u (0x0)
  593: s.seq[1l].probs.frac[0l].den=40960u (0xA000)
  593: s.seq[1l].probs.frac[1l].num=0u (0x0)
  593: s.seq[1l].probs.frac[1l].den=40960u (0xA000)
  593: s.seq[1l].probs.frac[2l].num=0u (0x0)
  593: s.seq[1l].probs.frac[2l].den=40960u (0xA000)
  593: s.seq[1l].probs.frac[3l].num=0u (0x0)
  593: s.seq[1l].probs.frac[3l].den=40960u (0xA000)
  593: s.seq[2l].val[0l]=1u (0x1)
  593: s.seq[2l].val[1l]=2u (0x2)
  593: s.seq[2l].val[2l]=2u (0x2)
  593: s.seq[2l].val[3l]=1u (0x1)
  593: s.seq[2l].probs.frac[0l].num=0u (0x0)
  593: s.seq[2l].probs.frac[0l].den=40960u (0xA000)
  593: s.seq[2l].probs.frac[1l].num=1280u (0x500)
  593: s.seq[2l].probs.frac[1l].den=163840u (0x28000)
  593: s.seq[2l].probs.frac[2l].num=1280u (0x500)
  593: s.seq[2l].probs.frac[2l].den=163840u (0x28000)
  593: s.seq[2l].probs.frac[3l].num=0u (0x0)
  593: s.seq[2l].probs.frac[3l].den=40960u (0xA000)
  593: s.seq[3l].val[0l]=2u (0x2)
  593: s.seq[3l].val[1l]=1u (0x1)
  593: s.seq[3l].val[2l]=1u (0x1)
  593: s.seq[3l].val[3l]=2u (0x2)
  593: s.seq[3l].probs.frac[0l].num=0u (0x0)
  593: s.seq[3l].probs.frac[0l].den=40960u (0xA000)
  593: s.seq[3l].probs.frac[1l].num=0u (0x0)
  593: s.seq[3l].probs.frac[1l].den=40960u (0xA000)
  593: s.seq[3l].probs.frac[2l].num=0u (0x0)
  593: s.seq[3l].probs.frac[2l].den=40960u (0xA000)
  593: s.seq[3l].probs.frac[3l].num=0u (0x0)
  593: s.seq[3l].probs.frac[3l].den=40960u (0xA000)
  593: s.seq[4l].val[0l]=2u (0x2)
  593: s.seq[4l].val[1l]=1u (0x1)
  593: s.seq[4l].val[2l]=2u (0x2)
  593: s.seq[4l].val[3l]=1u (0x1)
  593: s.seq[4l].probs.frac[0l].num=1280u (0x500)
  593: s.seq[4l].probs.frac[0l].den=163840u (0x28000)
  593: s.seq[4l].probs.frac[1l].num=0u (0x0)
  593: s.seq[4l].probs.frac[1l].den=40960u (0xA000)
  593: s.seq[4l].probs.frac[2l].num=0u (0x0)
  593: s.seq[4l].probs.frac[2l].den=40960u (0xA000)
  593: s.seq[4l].probs.frac[3l].num=1280u (0x500)
  593: s.seq[4l].probs.frac[3l].den=163840u (0x28000)
  593: s.seq[5l].val[0l]=2u (0x2)
  593: s.seq[5l].val[1l]=2u (0x2)
  593: s.seq[5l].val[2l]=1u (0x1)
  593: s.seq[5l].val[3l]=1u (0x1)
  593: s.seq[5l].probs.frac[0l].num=0u (0x0)
  593: s.seq[5l].probs.frac[0l].den=40960u (0xA000)
  593: s.seq[5l].probs.frac[1l].num=0u (0x0)
  593: s.seq[5l].probs.frac[1l].den=40960u (0xA000)
  593: s.seq[5l].probs.frac[2l].num=0u (0x0)
  593: s.seq[5l].probs.frac[2l].den=40960u (0xA000)
  593: s.seq[5l].probs.frac[3l].num=0u (0x0)
  593: s.seq[5l].probs.frac[3l].den=40960u (0xA000)

↳ findTwoCardProtocolXOR.c:569 isBottomFree({ .seq={ { .val={ 1u, 1u, 2u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 1u, 2u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } }, 
    { .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } }, 
    { .val={ 2u, 2u, 1u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } } } } })
  569: s.seq[0l].val[0l]=1u (0x1)
  569: s.seq[0l].val[1l]=1u (0x1)
  569: s.seq[0l].val[2l]=2u (0x2)
  569: s.seq[0l].val[3l]=2u (0x2)
  569: s.seq[0l].probs.frac[0l].num=0u (0x0)
  569: s.seq[0l].probs.frac[0l].den=40960u (0xA000)
  569: s.seq[0l].probs.frac[1l].num=0u (0x0)
  569: s.seq[0l].probs.frac[1l].den=40960u (0xA000)
  569: s.seq[0l].probs.frac[2l].num=0u (0x0)
  569: s.seq[0l].probs.frac[2l].den=40960u (0xA000)
  569: s.seq[0l].probs.frac[3l].num=0u (0x0)
  569: s.seq[0l].probs.frac[3l].den=40960u (0xA000)
  569: s.seq[1l].val[0l]=1u (0x1)
  569: s.seq[1l].val[1l]=2u (0x2)
  569: s.seq[1l].val[2l]=1u (0x1)
  569: s.seq[1l].val[3l]=2u (0x2)
  569: s.seq[1l].probs.frac[0l].num=0u (0x0)
  569: s.seq[1l].probs.frac[0l].den=40960u (0xA000)
  569: s.seq[1l].probs.frac[1l].num=0u (0x0)
  569: s.seq[1l].probs.frac[1l].den=40960u (0xA000)
  569: s.seq[1l].probs.frac[2l].num=0u (0x0)
  569: s.seq[1l].probs.frac[2l].den=40960u (0xA000)
  569: s.seq[1l].probs.frac[3l].num=0u (0x0)
  569: s.seq[1l].probs.frac[3l].den=40960u (0xA000)
  569: s.seq[2l].val[0l]=1u (0x1)
  569: s.seq[2l].val[1l]=2u (0x2)
  569: s.seq[2l].val[2l]=2u (0x2)
  569: s.seq[2l].val[3l]=1u (0x1)
  569: s.seq[2l].probs.frac[0l].num=0u (0x0)
  569: s.seq[2l].probs.frac[0l].den=40960u (0xA000)
  569: s.seq[2l].probs.frac[1l].num=1280u (0x500)
  569: s.seq[2l].probs.frac[1l].den=163840u (0x28000)
  569: s.seq[2l].probs.frac[2l].num=1280u (0x500)
  569: s.seq[2l].probs.frac[2l].den=163840u (0x28000)
  569: s.seq[2l].probs.frac[3l].num=0u (0x0)
  569: s.seq[2l].probs.frac[3l].den=40960u (0xA000)
  569: s.seq[3l].val[0l]=2u (0x2)
  569: s.seq[3l].val[1l]=1u (0x1)
  569: s.seq[3l].val[2l]=1u (0x1)
  569: s.seq[3l].val[3l]=2u (0x2)
  569: s.seq[3l].probs.frac[0l].num=0u (0x0)
  569: s.seq[3l].probs.frac[0l].den=40960u (0xA000)
  569: s.seq[3l].probs.frac[1l].num=0u (0x0)
  569: s.seq[3l].probs.frac[1l].den=40960u (0xA000)
  569: s.seq[3l].probs.frac[2l].num=0u (0x0)
  569: s.seq[3l].probs.frac[2l].den=40960u (0xA000)
  569: s.seq[3l].probs.frac[3l].num=0u (0x0)
  569: s.seq[3l].probs.frac[3l].den=40960u (0xA000)
  569: s.seq[4l].val[0l]=2u (0x2)
  569: s.seq[4l].val[1l]=1u (0x1)
  569: s.seq[4l].val[2l]=2u (0x2)
  569: s.seq[4l].val[3l]=1u (0x1)
  569: s.seq[4l].probs.frac[0l].num=1280u (0x500)
  569: s.seq[4l].probs.frac[0l].den=163840u (0x28000)
  569: s.seq[4l].probs.frac[1l].num=0u (0x0)
  569: s.seq[4l].probs.frac[1l].den=40960u (0xA000)
  569: s.seq[4l].probs.frac[2l].num=0u (0x0)
  569: s.seq[4l].probs.frac[2l].den=40960u (0xA000)
  569: s.seq[4l].probs.frac[3l].num=1280u (0x500)
  569: s.seq[4l].probs.frac[3l].den=163840u (0x28000)
  569: s.seq[5l].val[0l]=2u (0x2)
  569: s.seq[5l].val[1l]=2u (0x2)
  569: s.seq[5l].val[2l]=1u (0x1)
  569: s.seq[5l].val[3l]=1u (0x1)
  569: s.seq[5l].probs.frac[0l].num=0u (0x0)
  569: s.seq[5l].probs.frac[0l].den=40960u (0xA000)
  569: s.seq[5l].probs.frac[1l].num=0u (0x0)
  569: s.seq[5l].probs.frac[1l].den=40960u (0xA000)
  569: s.seq[5l].probs.frac[2l].num=0u (0x0)
  569: s.seq[5l].probs.frac[2l].den=40960u (0xA000)
  569: s.seq[5l].probs.frac[3l].num=0u (0x0)
  569: s.seq[5l].probs.frac[3l].den=40960u (0xA000)
  547: res=1u (0x1)
  548: done=0u (0x0)
  549: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=40960u (0xA000)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=40960u (0xA000)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=40960u (0xA000)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=40960u (0xA000)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=40960u (0xA000)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=40960u (0xA000)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=40960u (0xA000)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=40960u (0xA000)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=40960u (0xA000)
  550: probs.frac[1l].num=1280u (0x500)
  550: probs.frac[1l].den=163840u (0x28000)
  550: probs.frac[2l].num=1280u (0x500)
  550: probs.frac[2l].den=163840u (0x28000)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=40960u (0xA000)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=40960u (0xA000)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=40960u (0xA000)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=40960u (0xA000)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=40960u (0xA000)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } })
  550: probs.frac[0l].num=1280u (0x500)
  550: probs.frac[0l].den=163840u (0x28000)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=40960u (0xA000)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=40960u (0xA000)
  550: probs.frac[3l].num=1280u (0x500)
  550: probs.frac[3l].den=163840u (0x28000)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=5u (0x5)

↳ findTwoCardProtocolXOR.c:550 isBottom({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  550: probs.frac[0l].num=0u (0x0)
  550: probs.frac[0l].den=40960u (0xA000)
  550: probs.frac[1l].num=0u (0x0)
  550: probs.frac[1l].den=40960u (0xA000)
  550: probs.frac[2l].num=0u (0x0)
  550: probs.frac[2l].den=40960u (0xA000)
  550: probs.frac[3l].num=0u (0x0)
  550: probs.frac[3l].den=40960u (0xA000)
  533: bottom=0u (0x0)
  538: bottom=0u (0x0)
↵
  549: i=6u (0x6)
↵
  569: res=1u (0x1)
  572: k=0u (0x0)
  573: seqIndexForThisProbability=4u (0x4)
  575: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x500, 0x28000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x500, 0x28000 } } } })
  575: seq.val[0l]=2u (0x2)
  575: seq.val[1l]=1u (0x1)
  575: seq.val[2l]=2u (0x2)
  575: seq.val[3l]=1u (0x1)
  575: seq.probs.frac[0l].num=1280u (0x500)
  575: seq.probs.frac[0l].den=163840u (0x28000)
  575: seq.probs.frac[1l].num=0u (0x0)
  575: seq.probs.frac[1l].den=40960u (0xA000)
  575: seq.probs.frac[2l].num=0u (0x0)
  575: seq.probs.frac[2l].den=40960u (0xA000)
  575: seq.probs.frac[3l].num=1280u (0x500)
  575: seq.probs.frac[3l].den=163840u (0x28000)
  572: k=1u (0x1)
  573: seqIndexForThisProbability=2u (0x2)
  575: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0xA000 }, { 0x500, 0x28000 }, { 0x500, 0x28000 }, { 0x0, 0xA000 } } } })
  575: seq.val[0l]=1u (0x1)
  575: seq.val[1l]=2u (0x2)
  575: seq.val[2l]=2u (0x2)
  575: seq.val[3l]=1u (0x1)
  575: seq.probs.frac[0l].num=0u (0x0)
  575: seq.probs.frac[0l].den=40960u (0xA000)
  575: seq.probs.frac[1l].num=1280u (0x500)
  575: seq.probs.frac[1l].den=163840u (0x28000)
  575: seq.probs.frac[2l].num=1280u (0x500)
  575: seq.probs.frac[2l].den=163840u (0x28000)
  575: seq.probs.frac[3l].num=0u (0x0)
  575: seq.probs.frac[3l].den=40960u (0xA000)
  572: k=2u (0x2)
  573: seqIndexForThisProbability=2u (0x2)
  575: seq={ .val={ 1u, 2u, 2u, 1u }, .probs={ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } } } ({ { 0x1, 0x2, 0x2, 0x1 }, { { { 0x0, 0xA000 }, { 0x500, 0x28000 }, { 0x500, 0x28000 }, { 0x0, 0xA000 } } } })
  575: seq.val[0l]=1u (0x1)
  575: seq.val[1l]=2u (0x2)
  575: seq.val[2l]=2u (0x2)
  575: seq.val[3l]=1u (0x1)
  575: seq.probs.frac[0l].num=0u (0x0)
  575: seq.probs.frac[0l].den=40960u (0xA000)
  575: seq.probs.frac[1l].num=1280u (0x500)
  575: seq.probs.frac[1l].den=163840u (0x28000)
  575: seq.probs.frac[2l].num=1280u (0x500)
  575: seq.probs.frac[2l].den=163840u (0x28000)
  575: seq.probs.frac[3l].num=0u (0x0)
  575: seq.probs.frac[3l].den=40960u (0xA000)
  572: k=3u (0x3)
  573: seqIndexForThisProbability=4u (0x4)
  575: seq={ .val={ 2u, 1u, 2u, 1u }, .probs={ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } } } ({ { 0x2, 0x1, 0x2, 0x1 }, { { { 0x500, 0x28000 }, { 0x0, 0xA000 }, { 0x0, 0xA000 }, { 0x500, 0x28000 } } } })
  575: seq.val[0l]=2u (0x2)
  575: seq.val[1l]=1u (0x1)
  575: seq.val[2l]=2u (0x2)
  575: seq.val[3l]=1u (0x1)
  575: seq.probs.frac[0l].num=1280u (0x500)
  575: seq.probs.frac[0l].den=163840u (0x28000)
  575: seq.probs.frac[1l].num=0u (0x0)
  575: seq.probs.frac[1l].den=40960u (0xA000)
  575: seq.probs.frac[2l].num=0u (0x0)
  575: seq.probs.frac[2l].den=40960u (0xA000)
  575: seq.probs.frac[3l].num=1280u (0x500)
  575: seq.probs.frac[3l].den=163840u (0x28000)
  572: k=4u (0x4)
↵
  594: res=1u (0x1)
  600: a=1u (0x1)
  601: b=0u (0x0)
  604: lowerCard=0u (0x0)
  605: higherCard=0u (0x0)
  607: done=0u (0x0)
  608: i=0u (0x0)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=40960u (0xA000)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=40960u (0xA000)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=40960u (0xA000)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=40960u (0xA000)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  608: i=1u (0x1)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=40960u (0xA000)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=40960u (0xA000)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=40960u (0xA000)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=40960u (0xA000)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  608: i=2u (0x2)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=40960u }, { .num=1280u, .den=163840u }, { .num=1280u, .den=163840u }, { .num=0u, .den=40960u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=40960u (0xA000)
  609: probs.frac[1l].num=1280u (0x500)
  609: probs.frac[1l].den=163840u (0x28000)
  609: probs.frac[2l].num=1280u (0x500)
  609: probs.frac[2l].den=163840u (0x28000)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=40960u (0xA000)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=1280u (0x500)
  455: i=2u (0x2)
  456: res=1280u (0x500)
  455: i=3u (0x3)
  456: res=1280u (0x500)
  455: i=4u (0x4)
↵
  611: deciding=1u (0x1)
  612: first=2u (0x2)
  613: second=1u (0x1)
  617: higherCard=2u (0x2)
  618: lowerCard=1u (0x1)
  608: i=3u (0x3)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=40960u (0xA000)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=40960u (0xA000)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=40960u (0xA000)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=40960u (0xA000)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  608: i=4u (0x4)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=1280u, .den=163840u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=1280u, .den=163840u } } })
  609: probs.frac[0l].num=1280u (0x500)
  609: probs.frac[0l].den=163840u (0x28000)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=40960u (0xA000)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=40960u (0xA000)
  609: probs.frac[3l].num=1280u (0x500)
  609: probs.frac[3l].den=163840u (0x28000)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=1280u (0x500)
  455: i=1u (0x1)
  456: res=1280u (0x500)
  455: i=2u (0x2)
  456: res=1280u (0x500)
  455: i=3u (0x3)
  456: res=1280u (0x500)
  455: i=4u (0x4)
↵
  611: deciding=0u (0x0)
  612: first=1u (0x1)
  613: second=2u (0x2)
  608: i=5u (0x5)

↳ findTwoCardProtocolXOR.c:609 isStillPossible({ .frac={ { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u }, { .num=0u, .den=40960u } } })
  609: probs.frac[0l].num=0u (0x0)
  609: probs.frac[0l].den=40960u (0xA000)
  609: probs.frac[1l].num=0u (0x0)
  609: probs.frac[1l].den=40960u (0xA000)
  609: probs.frac[2l].num=0u (0x0)
  609: probs.frac[2l].den=40960u (0xA000)
  609: probs.frac[3l].num=0u (0x0)
  609: probs.frac[3l].den=40960u (0xA000)
  454: res=0u (0x0)
  455: i=0u (0x0)
  456: res=0u (0x0)
  455: i=1u (0x1)
  456: res=0u (0x0)
  455: i=2u (0x2)
  456: res=0u (0x0)
  455: i=3u (0x3)
  456: res=0u (0x0)
  455: i=4u (0x4)
↵
  608: i=6u (0x6)
↵
  1020: result=1u (0x1)
  992: i=2u (0x2)
↵
  1158: foundValidProtocol=1u (0x1)

Violated property:
  file findTwoCardProtocolXOR.c function main line 1162 thread 0
  assertion 0
  0 != 0



** 1 of 1 failed (2 iterations)
VERIFICATION FAILED

############################################################
# Final Time: 2022-10-31 16:04:25 CET
# It took 1396 seconds.
############################################################
